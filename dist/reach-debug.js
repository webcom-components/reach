/*!
 * The MIT License (MIT)
 * 
 * Copyright (c) 2015-2016 Webcom
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
 * The externally maintained libraries used by Reach are:
 * 
 * - webrtc-adpater, licensed as follows:
 * 
 *     > Copyright (c) 2014, The WebRTC project authors. All rights reserved.
 *     >
 *     > Redistribution and use in source and binary forms, with or without
 *     > modification, are permitted provided that the following conditions are
 *     > met:
 *     >
 *     >  * Redistributions of source code must retain the above copyright
 *     >    notice, this list of conditions and the following disclaimer.
 *     >
 *     >  * Redistributions in binary form must reproduce the above copyright
 *     >    notice, this list of conditions and the following disclaimer in
 *     >    the documentation and/or other materials provided with the
 *     >    distribution.
 *     >
 *     >  * Neither the name of Google nor the names of its contributors may
 *     >    be used to endorse or promote products derived from this software
 *     >    without specific prior written permission.
 *     >
 *     >THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *     >"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *     >LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *     >A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *     >HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *     >SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *     >LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *     >DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *     >THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *     >(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *     >OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("webcom/webcom"));
	else if(typeof define === 'function' && define.amd)
		define(["webcom/webcom"], factory);
	else if(typeof exports === 'object')
		exports["Reach"] = factory(require("webcom/webcom"));
	else
		root["Reach"] = factory(root["webcom/webcom"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_webcom_webcom__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/Reach.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/after/index.js":
/*!*************************************!*\
  !*** ./node_modules/after/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = after

function after(count, callback, err_cb) {
    var bail = false
    err_cb = err_cb || noop
    proxy.count = count

    return (count === 0) ? callback() : proxy

    function proxy(err, result) {
        if (proxy.count <= 0) {
            throw new Error('after called too many times')
        }
        --proxy.count

        // after first error, rest are passed to err_cb
        if (err) {
            bail = true
            callback(err)
            // future error callbacks will go to error handler
            callback = err_cb
        } else if (proxy.count === 0 && !bail) {
            callback(null, result)
        }
    }
}

function noop() {}


/***/ }),

/***/ "./node_modules/arraybuffer.slice/index.js":
/*!*************************************************!*\
  !*** ./node_modules/arraybuffer.slice/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * An abstraction for slicing an arraybuffer even when
 * ArrayBuffer.prototype.slice is not supported
 *
 * @api public
 */

module.exports = function(arraybuffer, start, end) {
  var bytes = arraybuffer.byteLength;
  start = start || 0;
  end = end || bytes;

  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }

  if (start < 0) { start += bytes; }
  if (end < 0) { end += bytes; }
  if (end > bytes) { end = bytes; }

  if (start >= bytes || start >= end || bytes === 0) {
    return new ArrayBuffer(0);
  }

  var abv = new Uint8Array(arraybuffer);
  var result = new Uint8Array(end - start);
  for (var i = start, ii = 0; i < end; i++, ii++) {
    result[ii] = abv[i];
  }
  return result.buffer;
};


/***/ }),

/***/ "./node_modules/backo2/index.js":
/*!**************************************!*\
  !*** ./node_modules/backo2/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * Expose `Backoff`.
 */

module.exports = Backoff;

/**
 * Initialize backoff timer with `opts`.
 *
 * - `min` initial timeout in milliseconds [100]
 * - `max` max timeout [10000]
 * - `jitter` [0]
 * - `factor` [2]
 *
 * @param {Object} opts
 * @api public
 */

function Backoff(opts) {
  opts = opts || {};
  this.ms = opts.min || 100;
  this.max = opts.max || 10000;
  this.factor = opts.factor || 2;
  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
  this.attempts = 0;
}

/**
 * Return the backoff duration.
 *
 * @return {Number}
 * @api public
 */

Backoff.prototype.duration = function(){
  var ms = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var rand =  Math.random();
    var deviation = Math.floor(rand * this.jitter * ms);
    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;
  }
  return Math.min(ms, this.max) | 0;
};

/**
 * Reset the number of attempts.
 *
 * @api public
 */

Backoff.prototype.reset = function(){
  this.attempts = 0;
};

/**
 * Set the minimum duration
 *
 * @api public
 */

Backoff.prototype.setMin = function(min){
  this.ms = min;
};

/**
 * Set the maximum duration
 *
 * @api public
 */

Backoff.prototype.setMax = function(max){
  this.max = max;
};

/**
 * Set the jitter
 *
 * @api public
 */

Backoff.prototype.setJitter = function(jitter){
  this.jitter = jitter;
};



/***/ }),

/***/ "./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
 * base64-arraybuffer
 * https://github.com/niklasvh/base64-arraybuffer
 *
 * Copyright (c) 2012 Niklas von Hertzen
 * Licensed under the MIT license.
 */
(function(){
  "use strict";

  var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

  // Use a lookup table to find the index.
  var lookup = new Uint8Array(256);
  for (var i = 0; i < chars.length; i++) {
    lookup[chars.charCodeAt(i)] = i;
  }

  exports.encode = function(arraybuffer) {
    var bytes = new Uint8Array(arraybuffer),
    i, len = bytes.length, base64 = "";

    for (i = 0; i < len; i+=3) {
      base64 += chars[bytes[i] >> 2];
      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
      base64 += chars[bytes[i + 2] & 63];
    }

    if ((len % 3) === 2) {
      base64 = base64.substring(0, base64.length - 1) + "=";
    } else if (len % 3 === 1) {
      base64 = base64.substring(0, base64.length - 2) + "==";
    }

    return base64;
  };

  exports.decode =  function(base64) {
    var bufferLength = base64.length * 0.75,
    len = base64.length, i, p = 0,
    encoded1, encoded2, encoded3, encoded4;

    if (base64[base64.length - 1] === "=") {
      bufferLength--;
      if (base64[base64.length - 2] === "=") {
        bufferLength--;
      }
    }

    var arraybuffer = new ArrayBuffer(bufferLength),
    bytes = new Uint8Array(arraybuffer);

    for (i = 0; i < len; i+=4) {
      encoded1 = lookup[base64.charCodeAt(i)];
      encoded2 = lookup[base64.charCodeAt(i+1)];
      encoded3 = lookup[base64.charCodeAt(i+2)];
      encoded4 = lookup[base64.charCodeAt(i+3)];

      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }

    return arraybuffer;
  };
})();


/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/blob/index.js":
/*!************************************!*\
  !*** ./node_modules/blob/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Create a blob builder even when vendor prefixes exist
 */

var BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :
  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :
  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :
  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : 
  false;

/**
 * Check if Blob constructor is supported
 */

var blobSupported = (function() {
  try {
    var a = new Blob(['hi']);
    return a.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if Blob constructor supports ArrayBufferViews
 * Fails in Safari 6, so we need to map to ArrayBuffers there.
 */

var blobSupportsArrayBufferView = blobSupported && (function() {
  try {
    var b = new Blob([new Uint8Array([1,2])]);
    return b.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if BlobBuilder is supported
 */

var blobBuilderSupported = BlobBuilder
  && BlobBuilder.prototype.append
  && BlobBuilder.prototype.getBlob;

/**
 * Helper function that maps ArrayBufferViews to ArrayBuffers
 * Used by BlobBuilder constructor and old browsers that didn't
 * support it in the Blob constructor.
 */

function mapArrayBufferViews(ary) {
  return ary.map(function(chunk) {
    if (chunk.buffer instanceof ArrayBuffer) {
      var buf = chunk.buffer;

      // if this is a subarray, make a copy so we only
      // include the subarray region from the underlying buffer
      if (chunk.byteLength !== buf.byteLength) {
        var copy = new Uint8Array(chunk.byteLength);
        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
        buf = copy.buffer;
      }

      return buf;
    }

    return chunk;
  });
}

function BlobBuilderConstructor(ary, options) {
  options = options || {};

  var bb = new BlobBuilder();
  mapArrayBufferViews(ary).forEach(function(part) {
    bb.append(part);
  });

  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();
};

function BlobConstructor(ary, options) {
  return new Blob(mapArrayBufferViews(ary), options || {});
};

if (typeof Blob !== 'undefined') {
  BlobBuilderConstructor.prototype = Blob.prototype;
  BlobConstructor.prototype = Blob.prototype;
}

module.exports = (function() {
  if (blobSupported) {
    return blobSupportsArrayBufferView ? Blob : BlobConstructor;
  } else if (blobBuilderSupported) {
    return BlobBuilderConstructor;
  } else {
    return undefined;
  }
})();


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/component-bind/index.js":
/*!**********************************************!*\
  !*** ./node_modules/component-bind/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Slice reference.
 */

var slice = [].slice;

/**
 * Bind `obj` to `fn`.
 *
 * @param {Object} obj
 * @param {Function|String} fn or string
 * @return {Function}
 * @api public
 */

module.exports = function(obj, fn){
  if ('string' == typeof fn) fn = obj[fn];
  if ('function' != typeof fn) throw new Error('bind() requires a function');
  var args = slice.call(arguments, 2);
  return function(){
    return fn.apply(obj, args.concat(slice.call(arguments)));
  }
};


/***/ }),

/***/ "./node_modules/component-emitter/index.js":
/*!*************************************************!*\
  !*** ./node_modules/component-emitter/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Expose `Emitter`.
 */

if (true) {
  module.exports = Emitter;
}

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks['$' + event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};


/***/ }),

/***/ "./node_modules/component-inherit/index.js":
/*!*************************************************!*\
  !*** ./node_modules/component-inherit/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


module.exports = function(a, b){
  var fn = function(){};
  fn.prototype = b.prototype;
  a.prototype = new fn;
  a.prototype.constructor = a;
};

/***/ }),

/***/ "./node_modules/core-js/fn/array/find.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/fn/array/find.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.array.find */ "./node_modules/core-js/modules/es6.array.find.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").Array.find;


/***/ }),

/***/ "./node_modules/core-js/modules/_a-function.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_a-function.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_add-to-unscopables.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_add-to-unscopables.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_an-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_an-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-methods.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-methods.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var asc = __webpack_require__(/*! ./_array-species-create */ "./node_modules/core-js/modules/_array-species-create.js");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-species-constructor.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-constructor.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-species-create.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-create.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(/*! ./_array-species-constructor */ "./node_modules/core-js/modules/_array-species-constructor.js");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_cof.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_cof.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_core.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_core.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.3' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/modules/_ctx.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_ctx.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_defined.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_defined.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_descriptors.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_descriptors.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/modules/_dom-create.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_dom-create.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/modules/_export.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_export.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "./node_modules/core-js/modules/_fails.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_fails.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_global.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/modules/_has.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_has.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_hide.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_hide.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_ie8-dom-define.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_ie8-dom-define.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/modules/_iobject.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_iobject.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-array.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_is-array.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/core-js/modules/_library.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_library.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/modules/_object-dp.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dp.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_property-desc.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_property-desc.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_redefine.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var SRC = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js")('src');
var TO_STRING = 'toString';
var $toString = Function[TO_STRING];
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "./node_modules/core-js/modules/_shared.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_shared.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "./node_modules/core-js/modules/_to-integer.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-integer.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-length.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-length.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-primitive.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_to-primitive.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/modules/_uid.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_uid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_wks.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_wks.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.find.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.find.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $find = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")(KEY);


/***/ }),

/***/ "./node_modules/engine.io-client/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/engine.io-client/lib/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


module.exports = __webpack_require__(/*! ./socket */ "./node_modules/engine.io-client/lib/socket.js");

/**
 * Exports parser
 *
 * @api public
 *
 */
module.exports.parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/browser.js");


/***/ }),

/***/ "./node_modules/engine.io-client/lib/socket.js":
/*!*****************************************************!*\
  !*** ./node_modules/engine.io-client/lib/socket.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var transports = __webpack_require__(/*! ./transports/index */ "./node_modules/engine.io-client/lib/transports/index.js");
var Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");
var debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")('engine.io-client:socket');
var index = __webpack_require__(/*! indexof */ "./node_modules/indexof/index.js");
var parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/browser.js");
var parseuri = __webpack_require__(/*! parseuri */ "./node_modules/parseuri/index.js");
var parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");

/**
 * Module exports.
 */

module.exports = Socket;

/**
 * Socket constructor.
 *
 * @param {String|Object} uri or options
 * @param {Object} options
 * @api public
 */

function Socket (uri, opts) {
  if (!(this instanceof Socket)) return new Socket(uri, opts);

  opts = opts || {};

  if (uri && 'object' === typeof uri) {
    opts = uri;
    uri = null;
  }

  if (uri) {
    uri = parseuri(uri);
    opts.hostname = uri.host;
    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';
    opts.port = uri.port;
    if (uri.query) opts.query = uri.query;
  } else if (opts.host) {
    opts.hostname = parseuri(opts.host).host;
  }

  this.secure = null != opts.secure ? opts.secure
    : (typeof location !== 'undefined' && 'https:' === location.protocol);

  if (opts.hostname && !opts.port) {
    // if no port is specified manually, use the protocol default
    opts.port = this.secure ? '443' : '80';
  }

  this.agent = opts.agent || false;
  this.hostname = opts.hostname ||
    (typeof location !== 'undefined' ? location.hostname : 'localhost');
  this.port = opts.port || (typeof location !== 'undefined' && location.port
      ? location.port
      : (this.secure ? 443 : 80));
  this.query = opts.query || {};
  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);
  this.upgrade = false !== opts.upgrade;
  this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/';
  this.forceJSONP = !!opts.forceJSONP;
  this.jsonp = false !== opts.jsonp;
  this.forceBase64 = !!opts.forceBase64;
  this.enablesXDR = !!opts.enablesXDR;
  this.timestampParam = opts.timestampParam || 't';
  this.timestampRequests = opts.timestampRequests;
  this.transports = opts.transports || ['polling', 'websocket'];
  this.transportOptions = opts.transportOptions || {};
  this.readyState = '';
  this.writeBuffer = [];
  this.prevBufferLen = 0;
  this.policyPort = opts.policyPort || 843;
  this.rememberUpgrade = opts.rememberUpgrade || false;
  this.binaryType = null;
  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;

  if (true === this.perMessageDeflate) this.perMessageDeflate = {};
  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {
    this.perMessageDeflate.threshold = 1024;
  }

  // SSL options for Node.js client
  this.pfx = opts.pfx || null;
  this.key = opts.key || null;
  this.passphrase = opts.passphrase || null;
  this.cert = opts.cert || null;
  this.ca = opts.ca || null;
  this.ciphers = opts.ciphers || null;
  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;
  this.forceNode = !!opts.forceNode;

  // detect ReactNative environment
  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');

  // other options for Node.js or ReactNative client
  if (typeof self === 'undefined' || this.isReactNative) {
    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {
      this.extraHeaders = opts.extraHeaders;
    }

    if (opts.localAddress) {
      this.localAddress = opts.localAddress;
    }
  }

  // set on handshake
  this.id = null;
  this.upgrades = null;
  this.pingInterval = null;
  this.pingTimeout = null;

  // set on heartbeat
  this.pingIntervalTimer = null;
  this.pingTimeoutTimer = null;

  this.open();
}

Socket.priorWebsocketSuccess = false;

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Protocol version.
 *
 * @api public
 */

Socket.protocol = parser.protocol; // this is an int

/**
 * Expose deps for legacy compatibility
 * and standalone browser access.
 */

Socket.Socket = Socket;
Socket.Transport = __webpack_require__(/*! ./transport */ "./node_modules/engine.io-client/lib/transport.js");
Socket.transports = __webpack_require__(/*! ./transports/index */ "./node_modules/engine.io-client/lib/transports/index.js");
Socket.parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/browser.js");

/**
 * Creates transport of the given type.
 *
 * @param {String} transport name
 * @return {Transport}
 * @api private
 */

Socket.prototype.createTransport = function (name) {
  debug('creating transport "%s"', name);
  var query = clone(this.query);

  // append engine.io protocol identifier
  query.EIO = parser.protocol;

  // transport name
  query.transport = name;

  // per-transport options
  var options = this.transportOptions[name] || {};

  // session id if we already have one
  if (this.id) query.sid = this.id;

  var transport = new transports[name]({
    query: query,
    socket: this,
    agent: options.agent || this.agent,
    hostname: options.hostname || this.hostname,
    port: options.port || this.port,
    secure: options.secure || this.secure,
    path: options.path || this.path,
    forceJSONP: options.forceJSONP || this.forceJSONP,
    jsonp: options.jsonp || this.jsonp,
    forceBase64: options.forceBase64 || this.forceBase64,
    enablesXDR: options.enablesXDR || this.enablesXDR,
    timestampRequests: options.timestampRequests || this.timestampRequests,
    timestampParam: options.timestampParam || this.timestampParam,
    policyPort: options.policyPort || this.policyPort,
    pfx: options.pfx || this.pfx,
    key: options.key || this.key,
    passphrase: options.passphrase || this.passphrase,
    cert: options.cert || this.cert,
    ca: options.ca || this.ca,
    ciphers: options.ciphers || this.ciphers,
    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,
    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,
    extraHeaders: options.extraHeaders || this.extraHeaders,
    forceNode: options.forceNode || this.forceNode,
    localAddress: options.localAddress || this.localAddress,
    requestTimeout: options.requestTimeout || this.requestTimeout,
    protocols: options.protocols || void (0),
    isReactNative: this.isReactNative
  });

  return transport;
};

function clone (obj) {
  var o = {};
  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      o[i] = obj[i];
    }
  }
  return o;
}

/**
 * Initializes transport to use and starts probe.
 *
 * @api private
 */
Socket.prototype.open = function () {
  var transport;
  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {
    transport = 'websocket';
  } else if (0 === this.transports.length) {
    // Emit error on next tick so it can be listened to
    var self = this;
    setTimeout(function () {
      self.emit('error', 'No transports available');
    }, 0);
    return;
  } else {
    transport = this.transports[0];
  }
  this.readyState = 'opening';

  // Retry with the next transport if the transport is disabled (jsonp: false)
  try {
    transport = this.createTransport(transport);
  } catch (e) {
    this.transports.shift();
    this.open();
    return;
  }

  transport.open();
  this.setTransport(transport);
};

/**
 * Sets the current transport. Disables the existing one (if any).
 *
 * @api private
 */

Socket.prototype.setTransport = function (transport) {
  debug('setting transport %s', transport.name);
  var self = this;

  if (this.transport) {
    debug('clearing existing transport %s', this.transport.name);
    this.transport.removeAllListeners();
  }

  // set up transport
  this.transport = transport;

  // set up transport listeners
  transport
  .on('drain', function () {
    self.onDrain();
  })
  .on('packet', function (packet) {
    self.onPacket(packet);
  })
  .on('error', function (e) {
    self.onError(e);
  })
  .on('close', function () {
    self.onClose('transport close');
  });
};

/**
 * Probes a transport.
 *
 * @param {String} transport name
 * @api private
 */

Socket.prototype.probe = function (name) {
  debug('probing transport "%s"', name);
  var transport = this.createTransport(name, { probe: 1 });
  var failed = false;
  var self = this;

  Socket.priorWebsocketSuccess = false;

  function onTransportOpen () {
    if (self.onlyBinaryUpgrades) {
      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
      failed = failed || upgradeLosesBinary;
    }
    if (failed) return;

    debug('probe transport "%s" opened', name);
    transport.send([{ type: 'ping', data: 'probe' }]);
    transport.once('packet', function (msg) {
      if (failed) return;
      if ('pong' === msg.type && 'probe' === msg.data) {
        debug('probe transport "%s" pong', name);
        self.upgrading = true;
        self.emit('upgrading', transport);
        if (!transport) return;
        Socket.priorWebsocketSuccess = 'websocket' === transport.name;

        debug('pausing current transport "%s"', self.transport.name);
        self.transport.pause(function () {
          if (failed) return;
          if ('closed' === self.readyState) return;
          debug('changing transport and sending upgrade packet');

          cleanup();

          self.setTransport(transport);
          transport.send([{ type: 'upgrade' }]);
          self.emit('upgrade', transport);
          transport = null;
          self.upgrading = false;
          self.flush();
        });
      } else {
        debug('probe transport "%s" failed', name);
        var err = new Error('probe error');
        err.transport = transport.name;
        self.emit('upgradeError', err);
      }
    });
  }

  function freezeTransport () {
    if (failed) return;

    // Any callback called by transport should be ignored since now
    failed = true;

    cleanup();

    transport.close();
    transport = null;
  }

  // Handle any error that happens while probing
  function onerror (err) {
    var error = new Error('probe error: ' + err);
    error.transport = transport.name;

    freezeTransport();

    debug('probe transport "%s" failed because of error: %s', name, err);

    self.emit('upgradeError', error);
  }

  function onTransportClose () {
    onerror('transport closed');
  }

  // When the socket is closed while we're probing
  function onclose () {
    onerror('socket closed');
  }

  // When the socket is upgraded while we're probing
  function onupgrade (to) {
    if (transport && to.name !== transport.name) {
      debug('"%s" works - aborting "%s"', to.name, transport.name);
      freezeTransport();
    }
  }

  // Remove all listeners on the transport and on self
  function cleanup () {
    transport.removeListener('open', onTransportOpen);
    transport.removeListener('error', onerror);
    transport.removeListener('close', onTransportClose);
    self.removeListener('close', onclose);
    self.removeListener('upgrading', onupgrade);
  }

  transport.once('open', onTransportOpen);
  transport.once('error', onerror);
  transport.once('close', onTransportClose);

  this.once('close', onclose);
  this.once('upgrading', onupgrade);

  transport.open();
};

/**
 * Called when connection is deemed open.
 *
 * @api public
 */

Socket.prototype.onOpen = function () {
  debug('socket open');
  this.readyState = 'open';
  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;
  this.emit('open');
  this.flush();

  // we check for `readyState` in case an `open`
  // listener already closed the socket
  if ('open' === this.readyState && this.upgrade && this.transport.pause) {
    debug('starting upgrade probes');
    for (var i = 0, l = this.upgrades.length; i < l; i++) {
      this.probe(this.upgrades[i]);
    }
  }
};

/**
 * Handles a packet.
 *
 * @api private
 */

Socket.prototype.onPacket = function (packet) {
  if ('opening' === this.readyState || 'open' === this.readyState ||
      'closing' === this.readyState) {
    debug('socket receive: type "%s", data "%s"', packet.type, packet.data);

    this.emit('packet', packet);

    // Socket is live - any packet counts
    this.emit('heartbeat');

    switch (packet.type) {
      case 'open':
        this.onHandshake(JSON.parse(packet.data));
        break;

      case 'pong':
        this.setPing();
        this.emit('pong');
        break;

      case 'error':
        var err = new Error('server error');
        err.code = packet.data;
        this.onError(err);
        break;

      case 'message':
        this.emit('data', packet.data);
        this.emit('message', packet.data);
        break;
    }
  } else {
    debug('packet received with socket readyState "%s"', this.readyState);
  }
};

/**
 * Called upon handshake completion.
 *
 * @param {Object} handshake obj
 * @api private
 */

Socket.prototype.onHandshake = function (data) {
  this.emit('handshake', data);
  this.id = data.sid;
  this.transport.query.sid = data.sid;
  this.upgrades = this.filterUpgrades(data.upgrades);
  this.pingInterval = data.pingInterval;
  this.pingTimeout = data.pingTimeout;
  this.onOpen();
  // In case open handler closes socket
  if ('closed' === this.readyState) return;
  this.setPing();

  // Prolong liveness of socket on heartbeat
  this.removeListener('heartbeat', this.onHeartbeat);
  this.on('heartbeat', this.onHeartbeat);
};

/**
 * Resets ping timeout.
 *
 * @api private
 */

Socket.prototype.onHeartbeat = function (timeout) {
  clearTimeout(this.pingTimeoutTimer);
  var self = this;
  self.pingTimeoutTimer = setTimeout(function () {
    if ('closed' === self.readyState) return;
    self.onClose('ping timeout');
  }, timeout || (self.pingInterval + self.pingTimeout));
};

/**
 * Pings server every `this.pingInterval` and expects response
 * within `this.pingTimeout` or closes connection.
 *
 * @api private
 */

Socket.prototype.setPing = function () {
  var self = this;
  clearTimeout(self.pingIntervalTimer);
  self.pingIntervalTimer = setTimeout(function () {
    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);
    self.ping();
    self.onHeartbeat(self.pingTimeout);
  }, self.pingInterval);
};

/**
* Sends a ping packet.
*
* @api private
*/

Socket.prototype.ping = function () {
  var self = this;
  this.sendPacket('ping', function () {
    self.emit('ping');
  });
};

/**
 * Called on `drain` event
 *
 * @api private
 */

Socket.prototype.onDrain = function () {
  this.writeBuffer.splice(0, this.prevBufferLen);

  // setting prevBufferLen = 0 is very important
  // for example, when upgrading, upgrade packet is sent over,
  // and a nonzero prevBufferLen could cause problems on `drain`
  this.prevBufferLen = 0;

  if (0 === this.writeBuffer.length) {
    this.emit('drain');
  } else {
    this.flush();
  }
};

/**
 * Flush write buffers.
 *
 * @api private
 */

Socket.prototype.flush = function () {
  if ('closed' !== this.readyState && this.transport.writable &&
    !this.upgrading && this.writeBuffer.length) {
    debug('flushing %d packets in socket', this.writeBuffer.length);
    this.transport.send(this.writeBuffer);
    // keep track of current length of writeBuffer
    // splice writeBuffer and callbackBuffer on `drain`
    this.prevBufferLen = this.writeBuffer.length;
    this.emit('flush');
  }
};

/**
 * Sends a message.
 *
 * @param {String} message.
 * @param {Function} callback function.
 * @param {Object} options.
 * @return {Socket} for chaining.
 * @api public
 */

Socket.prototype.write =
Socket.prototype.send = function (msg, options, fn) {
  this.sendPacket('message', msg, options, fn);
  return this;
};

/**
 * Sends a packet.
 *
 * @param {String} packet type.
 * @param {String} data.
 * @param {Object} options.
 * @param {Function} callback function.
 * @api private
 */

Socket.prototype.sendPacket = function (type, data, options, fn) {
  if ('function' === typeof data) {
    fn = data;
    data = undefined;
  }

  if ('function' === typeof options) {
    fn = options;
    options = null;
  }

  if ('closing' === this.readyState || 'closed' === this.readyState) {
    return;
  }

  options = options || {};
  options.compress = false !== options.compress;

  var packet = {
    type: type,
    data: data,
    options: options
  };
  this.emit('packetCreate', packet);
  this.writeBuffer.push(packet);
  if (fn) this.once('flush', fn);
  this.flush();
};

/**
 * Closes the connection.
 *
 * @api private
 */

Socket.prototype.close = function () {
  if ('opening' === this.readyState || 'open' === this.readyState) {
    this.readyState = 'closing';

    var self = this;

    if (this.writeBuffer.length) {
      this.once('drain', function () {
        if (this.upgrading) {
          waitForUpgrade();
        } else {
          close();
        }
      });
    } else if (this.upgrading) {
      waitForUpgrade();
    } else {
      close();
    }
  }

  function close () {
    self.onClose('forced close');
    debug('socket closing - telling transport to close');
    self.transport.close();
  }

  function cleanupAndClose () {
    self.removeListener('upgrade', cleanupAndClose);
    self.removeListener('upgradeError', cleanupAndClose);
    close();
  }

  function waitForUpgrade () {
    // wait for upgrade to finish since we can't send packets while pausing a transport
    self.once('upgrade', cleanupAndClose);
    self.once('upgradeError', cleanupAndClose);
  }

  return this;
};

/**
 * Called upon transport error
 *
 * @api private
 */

Socket.prototype.onError = function (err) {
  debug('socket error %j', err);
  Socket.priorWebsocketSuccess = false;
  this.emit('error', err);
  this.onClose('transport error', err);
};

/**
 * Called upon transport close.
 *
 * @api private
 */

Socket.prototype.onClose = function (reason, desc) {
  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {
    debug('socket close with reason: "%s"', reason);
    var self = this;

    // clear timers
    clearTimeout(this.pingIntervalTimer);
    clearTimeout(this.pingTimeoutTimer);

    // stop event from firing again for transport
    this.transport.removeAllListeners('close');

    // ensure transport won't stay open
    this.transport.close();

    // ignore further transport communication
    this.transport.removeAllListeners();

    // set ready state
    this.readyState = 'closed';

    // clear session id
    this.id = null;

    // emit close event
    this.emit('close', reason, desc);

    // clean buffers after, so users can still
    // grab the buffers on `close` event
    self.writeBuffer = [];
    self.prevBufferLen = 0;
  }
};

/**
 * Filters upgrades, returning only those matching client transports.
 *
 * @param {Array} server upgrades
 * @api private
 *
 */

Socket.prototype.filterUpgrades = function (upgrades) {
  var filteredUpgrades = [];
  for (var i = 0, j = upgrades.length; i < j; i++) {
    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);
  }
  return filteredUpgrades;
};


/***/ }),

/***/ "./node_modules/engine.io-client/lib/transport.js":
/*!********************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transport.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/browser.js");
var Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");

/**
 * Module exports.
 */

module.exports = Transport;

/**
 * Transport abstract constructor.
 *
 * @param {Object} options.
 * @api private
 */

function Transport (opts) {
  this.path = opts.path;
  this.hostname = opts.hostname;
  this.port = opts.port;
  this.secure = opts.secure;
  this.query = opts.query;
  this.timestampParam = opts.timestampParam;
  this.timestampRequests = opts.timestampRequests;
  this.readyState = '';
  this.agent = opts.agent || false;
  this.socket = opts.socket;
  this.enablesXDR = opts.enablesXDR;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;
  this.forceNode = opts.forceNode;

  // results of ReactNative environment detection
  this.isReactNative = opts.isReactNative;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;
  this.localAddress = opts.localAddress;
}

/**
 * Mix in `Emitter`.
 */

Emitter(Transport.prototype);

/**
 * Emits an error.
 *
 * @param {String} str
 * @return {Transport} for chaining
 * @api public
 */

Transport.prototype.onError = function (msg, desc) {
  var err = new Error(msg);
  err.type = 'TransportError';
  err.description = desc;
  this.emit('error', err);
  return this;
};

/**
 * Opens the transport.
 *
 * @api public
 */

Transport.prototype.open = function () {
  if ('closed' === this.readyState || '' === this.readyState) {
    this.readyState = 'opening';
    this.doOpen();
  }

  return this;
};

/**
 * Closes the transport.
 *
 * @api private
 */

Transport.prototype.close = function () {
  if ('opening' === this.readyState || 'open' === this.readyState) {
    this.doClose();
    this.onClose();
  }

  return this;
};

/**
 * Sends multiple packets.
 *
 * @param {Array} packets
 * @api private
 */

Transport.prototype.send = function (packets) {
  if ('open' === this.readyState) {
    this.write(packets);
  } else {
    throw new Error('Transport not open');
  }
};

/**
 * Called upon open
 *
 * @api private
 */

Transport.prototype.onOpen = function () {
  this.readyState = 'open';
  this.writable = true;
  this.emit('open');
};

/**
 * Called with data.
 *
 * @param {String} data
 * @api private
 */

Transport.prototype.onData = function (data) {
  var packet = parser.decodePacket(data, this.socket.binaryType);
  this.onPacket(packet);
};

/**
 * Called with a decoded packet.
 */

Transport.prototype.onPacket = function (packet) {
  this.emit('packet', packet);
};

/**
 * Called upon close.
 *
 * @api private
 */

Transport.prototype.onClose = function () {
  this.readyState = 'closed';
  this.emit('close');
};


/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/index.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies
 */

var XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ "./node_modules/engine.io-client/lib/xmlhttprequest.js");
var XHR = __webpack_require__(/*! ./polling-xhr */ "./node_modules/engine.io-client/lib/transports/polling-xhr.js");
var JSONP = __webpack_require__(/*! ./polling-jsonp */ "./node_modules/engine.io-client/lib/transports/polling-jsonp.js");
var websocket = __webpack_require__(/*! ./websocket */ "./node_modules/engine.io-client/lib/transports/websocket.js");

/**
 * Export transports.
 */

exports.polling = polling;
exports.websocket = websocket;

/**
 * Polling transport polymorphic constructor.
 * Decides on xhr vs jsonp based on feature detection.
 *
 * @api private
 */

function polling (opts) {
  var xhr;
  var xd = false;
  var xs = false;
  var jsonp = false !== opts.jsonp;

  if (typeof location !== 'undefined') {
    var isSSL = 'https:' === location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    xd = opts.hostname !== location.hostname || port !== opts.port;
    xs = opts.secure !== isSSL;
  }

  opts.xdomain = xd;
  opts.xscheme = xs;
  xhr = new XMLHttpRequest(opts);

  if ('open' in xhr && !opts.forceJSONP) {
    return new XHR(opts);
  } else {
    if (!jsonp) throw new Error('JSONP disabled');
    return new JSONP(opts);
  }
}


/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/polling-jsonp.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling-jsonp.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Module requirements.
 */

var Polling = __webpack_require__(/*! ./polling */ "./node_modules/engine.io-client/lib/transports/polling.js");
var inherit = __webpack_require__(/*! component-inherit */ "./node_modules/component-inherit/index.js");

/**
 * Module exports.
 */

module.exports = JSONPPolling;

/**
 * Cached regular expressions.
 */

var rNewline = /\n/g;
var rEscapedNewline = /\\n/g;

/**
 * Global JSONP callbacks.
 */

var callbacks;

/**
 * Noop.
 */

function empty () { }

/**
 * Until https://github.com/tc39/proposal-global is shipped.
 */
function glob () {
  return typeof self !== 'undefined' ? self
      : typeof window !== 'undefined' ? window
      : typeof global !== 'undefined' ? global : {};
}

/**
 * JSONP Polling constructor.
 *
 * @param {Object} opts.
 * @api public
 */

function JSONPPolling (opts) {
  Polling.call(this, opts);

  this.query = this.query || {};

  // define global callbacks array if not present
  // we do this here (lazily) to avoid unneeded global pollution
  if (!callbacks) {
    // we need to consider multiple engines in the same page
    var global = glob();
    callbacks = global.___eio = (global.___eio || []);
  }

  // callback identifier
  this.index = callbacks.length;

  // add callback to jsonp global
  var self = this;
  callbacks.push(function (msg) {
    self.onData(msg);
  });

  // append to query string
  this.query.j = this.index;

  // prevent spurious errors from being emitted when the window is unloaded
  if (typeof addEventListener === 'function') {
    addEventListener('beforeunload', function () {
      if (self.script) self.script.onerror = empty;
    }, false);
  }
}

/**
 * Inherits from Polling.
 */

inherit(JSONPPolling, Polling);

/*
 * JSONP only supports binary as base64 encoded strings
 */

JSONPPolling.prototype.supportsBinary = false;

/**
 * Closes the socket.
 *
 * @api private
 */

JSONPPolling.prototype.doClose = function () {
  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  if (this.form) {
    this.form.parentNode.removeChild(this.form);
    this.form = null;
    this.iframe = null;
  }

  Polling.prototype.doClose.call(this);
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

JSONPPolling.prototype.doPoll = function () {
  var self = this;
  var script = document.createElement('script');

  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  script.async = true;
  script.src = this.uri();
  script.onerror = function (e) {
    self.onError('jsonp poll error', e);
  };

  var insertAt = document.getElementsByTagName('script')[0];
  if (insertAt) {
    insertAt.parentNode.insertBefore(script, insertAt);
  } else {
    (document.head || document.body).appendChild(script);
  }
  this.script = script;

  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);

  if (isUAgecko) {
    setTimeout(function () {
      var iframe = document.createElement('iframe');
      document.body.appendChild(iframe);
      document.body.removeChild(iframe);
    }, 100);
  }
};

/**
 * Writes with a hidden iframe.
 *
 * @param {String} data to send
 * @param {Function} called upon flush.
 * @api private
 */

JSONPPolling.prototype.doWrite = function (data, fn) {
  var self = this;

  if (!this.form) {
    var form = document.createElement('form');
    var area = document.createElement('textarea');
    var id = this.iframeId = 'eio_iframe_' + this.index;
    var iframe;

    form.className = 'socketio';
    form.style.position = 'absolute';
    form.style.top = '-1000px';
    form.style.left = '-1000px';
    form.target = id;
    form.method = 'POST';
    form.setAttribute('accept-charset', 'utf-8');
    area.name = 'd';
    form.appendChild(area);
    document.body.appendChild(form);

    this.form = form;
    this.area = area;
  }

  this.form.action = this.uri();

  function complete () {
    initIframe();
    fn();
  }

  function initIframe () {
    if (self.iframe) {
      try {
        self.form.removeChild(self.iframe);
      } catch (e) {
        self.onError('jsonp polling iframe removal error', e);
      }
    }

    try {
      // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
      var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
      iframe = document.createElement(html);
    } catch (e) {
      iframe = document.createElement('iframe');
      iframe.name = self.iframeId;
      iframe.src = 'javascript:0';
    }

    iframe.id = self.iframeId;

    self.form.appendChild(iframe);
    self.iframe = iframe;
  }

  initIframe();

  // escape \n to prevent it from being converted into \r\n by some UAs
  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side
  data = data.replace(rEscapedNewline, '\\\n');
  this.area.value = data.replace(rNewline, '\\n');

  try {
    this.form.submit();
  } catch (e) {}

  if (this.iframe.attachEvent) {
    this.iframe.onreadystatechange = function () {
      if (self.iframe.readyState === 'complete') {
        complete();
      }
    };
  } else {
    this.iframe.onload = complete;
  }
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/polling-xhr.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling-xhr.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* global attachEvent */

/**
 * Module requirements.
 */

var XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ "./node_modules/engine.io-client/lib/xmlhttprequest.js");
var Polling = __webpack_require__(/*! ./polling */ "./node_modules/engine.io-client/lib/transports/polling.js");
var Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");
var inherit = __webpack_require__(/*! component-inherit */ "./node_modules/component-inherit/index.js");
var debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")('engine.io-client:polling-xhr');

/**
 * Module exports.
 */

module.exports = XHR;
module.exports.Request = Request;

/**
 * Empty function
 */

function empty () {}

/**
 * XHR Polling constructor.
 *
 * @param {Object} opts
 * @api public
 */

function XHR (opts) {
  Polling.call(this, opts);
  this.requestTimeout = opts.requestTimeout;
  this.extraHeaders = opts.extraHeaders;

  if (typeof location !== 'undefined') {
    var isSSL = 'https:' === location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||
      port !== opts.port;
    this.xs = opts.secure !== isSSL;
  }
}

/**
 * Inherits from Polling.
 */

inherit(XHR, Polling);

/**
 * XHR supports binary
 */

XHR.prototype.supportsBinary = true;

/**
 * Creates a request.
 *
 * @param {String} method
 * @api private
 */

XHR.prototype.request = function (opts) {
  opts = opts || {};
  opts.uri = this.uri();
  opts.xd = this.xd;
  opts.xs = this.xs;
  opts.agent = this.agent || false;
  opts.supportsBinary = this.supportsBinary;
  opts.enablesXDR = this.enablesXDR;

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;
  opts.requestTimeout = this.requestTimeout;

  // other options for Node.js client
  opts.extraHeaders = this.extraHeaders;

  return new Request(opts);
};

/**
 * Sends data.
 *
 * @param {String} data to send.
 * @param {Function} called upon flush.
 * @api private
 */

XHR.prototype.doWrite = function (data, fn) {
  var isBinary = typeof data !== 'string' && data !== undefined;
  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });
  var self = this;
  req.on('success', fn);
  req.on('error', function (err) {
    self.onError('xhr post error', err);
  });
  this.sendXhr = req;
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

XHR.prototype.doPoll = function () {
  debug('xhr poll');
  var req = this.request();
  var self = this;
  req.on('data', function (data) {
    self.onData(data);
  });
  req.on('error', function (err) {
    self.onError('xhr poll error', err);
  });
  this.pollXhr = req;
};

/**
 * Request constructor
 *
 * @param {Object} options
 * @api public
 */

function Request (opts) {
  this.method = opts.method || 'GET';
  this.uri = opts.uri;
  this.xd = !!opts.xd;
  this.xs = !!opts.xs;
  this.async = false !== opts.async;
  this.data = undefined !== opts.data ? opts.data : null;
  this.agent = opts.agent;
  this.isBinary = opts.isBinary;
  this.supportsBinary = opts.supportsBinary;
  this.enablesXDR = opts.enablesXDR;
  this.requestTimeout = opts.requestTimeout;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;

  this.create();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Request.prototype);

/**
 * Creates the XHR object and sends the request.
 *
 * @api private
 */

Request.prototype.create = function () {
  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;

  var xhr = this.xhr = new XMLHttpRequest(opts);
  var self = this;

  try {
    debug('xhr open %s: %s', this.method, this.uri);
    xhr.open(this.method, this.uri, this.async);
    try {
      if (this.extraHeaders) {
        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
        for (var i in this.extraHeaders) {
          if (this.extraHeaders.hasOwnProperty(i)) {
            xhr.setRequestHeader(i, this.extraHeaders[i]);
          }
        }
      }
    } catch (e) {}

    if ('POST' === this.method) {
      try {
        if (this.isBinary) {
          xhr.setRequestHeader('Content-type', 'application/octet-stream');
        } else {
          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');
        }
      } catch (e) {}
    }

    try {
      xhr.setRequestHeader('Accept', '*/*');
    } catch (e) {}

    // ie6 check
    if ('withCredentials' in xhr) {
      xhr.withCredentials = true;
    }

    if (this.requestTimeout) {
      xhr.timeout = this.requestTimeout;
    }

    if (this.hasXDR()) {
      xhr.onload = function () {
        self.onLoad();
      };
      xhr.onerror = function () {
        self.onError(xhr.responseText);
      };
    } else {
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 2) {
          try {
            var contentType = xhr.getResponseHeader('Content-Type');
            if (self.supportsBinary && contentType === 'application/octet-stream') {
              xhr.responseType = 'arraybuffer';
            }
          } catch (e) {}
        }
        if (4 !== xhr.readyState) return;
        if (200 === xhr.status || 1223 === xhr.status) {
          self.onLoad();
        } else {
          // make sure the `error` event handler that's user-set
          // does not throw in the same tick and gets caught here
          setTimeout(function () {
            self.onError(xhr.status);
          }, 0);
        }
      };
    }

    debug('xhr data %s', this.data);
    xhr.send(this.data);
  } catch (e) {
    // Need to defer since .create() is called directly fhrom the constructor
    // and thus the 'error' event can only be only bound *after* this exception
    // occurs.  Therefore, also, we cannot throw here at all.
    setTimeout(function () {
      self.onError(e);
    }, 0);
    return;
  }

  if (typeof document !== 'undefined') {
    this.index = Request.requestsCount++;
    Request.requests[this.index] = this;
  }
};

/**
 * Called upon successful response.
 *
 * @api private
 */

Request.prototype.onSuccess = function () {
  this.emit('success');
  this.cleanup();
};

/**
 * Called if we have data.
 *
 * @api private
 */

Request.prototype.onData = function (data) {
  this.emit('data', data);
  this.onSuccess();
};

/**
 * Called upon error.
 *
 * @api private
 */

Request.prototype.onError = function (err) {
  this.emit('error', err);
  this.cleanup(true);
};

/**
 * Cleans up house.
 *
 * @api private
 */

Request.prototype.cleanup = function (fromError) {
  if ('undefined' === typeof this.xhr || null === this.xhr) {
    return;
  }
  // xmlhttprequest
  if (this.hasXDR()) {
    this.xhr.onload = this.xhr.onerror = empty;
  } else {
    this.xhr.onreadystatechange = empty;
  }

  if (fromError) {
    try {
      this.xhr.abort();
    } catch (e) {}
  }

  if (typeof document !== 'undefined') {
    delete Request.requests[this.index];
  }

  this.xhr = null;
};

/**
 * Called upon load.
 *
 * @api private
 */

Request.prototype.onLoad = function () {
  var data;
  try {
    var contentType;
    try {
      contentType = this.xhr.getResponseHeader('Content-Type');
    } catch (e) {}
    if (contentType === 'application/octet-stream') {
      data = this.xhr.response || this.xhr.responseText;
    } else {
      data = this.xhr.responseText;
    }
  } catch (e) {
    this.onError(e);
  }
  if (null != data) {
    this.onData(data);
  }
};

/**
 * Check if it has XDomainRequest.
 *
 * @api private
 */

Request.prototype.hasXDR = function () {
  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;
};

/**
 * Aborts the request.
 *
 * @api public
 */

Request.prototype.abort = function () {
  this.cleanup();
};

/**
 * Aborts pending requests when unloading the window. This is needed to prevent
 * memory leaks (e.g. when using IE) and to ensure that no spurious error is
 * emitted.
 */

Request.requestsCount = 0;
Request.requests = {};

if (typeof document !== 'undefined') {
  if (typeof attachEvent === 'function') {
    attachEvent('onunload', unloadHandler);
  } else if (typeof addEventListener === 'function') {
    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';
    addEventListener(terminationEvent, unloadHandler, false);
  }
}

function unloadHandler () {
  for (var i in Request.requests) {
    if (Request.requests.hasOwnProperty(i)) {
      Request.requests[i].abort();
    }
  }
}


/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var Transport = __webpack_require__(/*! ../transport */ "./node_modules/engine.io-client/lib/transport.js");
var parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");
var parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/browser.js");
var inherit = __webpack_require__(/*! component-inherit */ "./node_modules/component-inherit/index.js");
var yeast = __webpack_require__(/*! yeast */ "./node_modules/yeast/index.js");
var debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")('engine.io-client:polling');

/**
 * Module exports.
 */

module.exports = Polling;

/**
 * Is XHR2 supported?
 */

var hasXHR2 = (function () {
  var XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ "./node_modules/engine.io-client/lib/xmlhttprequest.js");
  var xhr = new XMLHttpRequest({ xdomain: false });
  return null != xhr.responseType;
})();

/**
 * Polling interface.
 *
 * @param {Object} opts
 * @api private
 */

function Polling (opts) {
  var forceBase64 = (opts && opts.forceBase64);
  if (!hasXHR2 || forceBase64) {
    this.supportsBinary = false;
  }
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(Polling, Transport);

/**
 * Transport name.
 */

Polling.prototype.name = 'polling';

/**
 * Opens the socket (triggers polling). We write a PING message to determine
 * when the transport is open.
 *
 * @api private
 */

Polling.prototype.doOpen = function () {
  this.poll();
};

/**
 * Pauses polling.
 *
 * @param {Function} callback upon buffers are flushed and transport is paused
 * @api private
 */

Polling.prototype.pause = function (onPause) {
  var self = this;

  this.readyState = 'pausing';

  function pause () {
    debug('paused');
    self.readyState = 'paused';
    onPause();
  }

  if (this.polling || !this.writable) {
    var total = 0;

    if (this.polling) {
      debug('we are currently polling - waiting to pause');
      total++;
      this.once('pollComplete', function () {
        debug('pre-pause polling complete');
        --total || pause();
      });
    }

    if (!this.writable) {
      debug('we are currently writing - waiting to pause');
      total++;
      this.once('drain', function () {
        debug('pre-pause writing complete');
        --total || pause();
      });
    }
  } else {
    pause();
  }
};

/**
 * Starts polling cycle.
 *
 * @api public
 */

Polling.prototype.poll = function () {
  debug('polling');
  this.polling = true;
  this.doPoll();
  this.emit('poll');
};

/**
 * Overloads onData to detect payloads.
 *
 * @api private
 */

Polling.prototype.onData = function (data) {
  var self = this;
  debug('polling got data %s', data);
  var callback = function (packet, index, total) {
    // if its the first message we consider the transport open
    if ('opening' === self.readyState) {
      self.onOpen();
    }

    // if its a close packet, we close the ongoing requests
    if ('close' === packet.type) {
      self.onClose();
      return false;
    }

    // otherwise bypass onData and handle the message
    self.onPacket(packet);
  };

  // decode payload
  parser.decodePayload(data, this.socket.binaryType, callback);

  // if an event did not trigger closing
  if ('closed' !== this.readyState) {
    // if we got data we're not polling
    this.polling = false;
    this.emit('pollComplete');

    if ('open' === this.readyState) {
      this.poll();
    } else {
      debug('ignoring poll - transport state "%s"', this.readyState);
    }
  }
};

/**
 * For polling, send a close packet.
 *
 * @api private
 */

Polling.prototype.doClose = function () {
  var self = this;

  function close () {
    debug('writing close packet');
    self.write([{ type: 'close' }]);
  }

  if ('open' === this.readyState) {
    debug('transport open - closing');
    close();
  } else {
    // in case we're trying to close while
    // handshaking is in progress (GH-164)
    debug('transport not open - deferring close');
    this.once('open', close);
  }
};

/**
 * Writes a packets payload.
 *
 * @param {Array} data packets
 * @param {Function} drain callback
 * @api private
 */

Polling.prototype.write = function (packets) {
  var self = this;
  this.writable = false;
  var callbackfn = function () {
    self.writable = true;
    self.emit('drain');
  };

  parser.encodePayload(packets, this.supportsBinary, function (data) {
    self.doWrite(data, callbackfn);
  });
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

Polling.prototype.uri = function () {
  var query = this.query || {};
  var schema = this.secure ? 'https' : 'http';
  var port = '';

  // cache busting is forced
  if (false !== this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  if (!this.supportsBinary && !query.sid) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // avoid port if default for schema
  if (this.port && (('https' === schema && Number(this.port) !== 443) ||
     ('http' === schema && Number(this.port) !== 80))) {
    port = ':' + this.port;
  }

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};


/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/websocket.js":
/*!*******************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/websocket.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {/**
 * Module dependencies.
 */

var Transport = __webpack_require__(/*! ../transport */ "./node_modules/engine.io-client/lib/transport.js");
var parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/browser.js");
var parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");
var inherit = __webpack_require__(/*! component-inherit */ "./node_modules/component-inherit/index.js");
var yeast = __webpack_require__(/*! yeast */ "./node_modules/yeast/index.js");
var debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")('engine.io-client:websocket');

var BrowserWebSocket, NodeWebSocket;

if (typeof WebSocket !== 'undefined') {
  BrowserWebSocket = WebSocket;
} else if (typeof self !== 'undefined') {
  BrowserWebSocket = self.WebSocket || self.MozWebSocket;
} else {
  try {
    NodeWebSocket = __webpack_require__(/*! ws */ 0);
  } catch (e) { }
}

/**
 * Get either the `WebSocket` or `MozWebSocket` globals
 * in the browser or try to resolve WebSocket-compatible
 * interface exposed by `ws` for Node-like environment.
 */

var WebSocketImpl = BrowserWebSocket || NodeWebSocket;

/**
 * Module exports.
 */

module.exports = WS;

/**
 * WebSocket transport constructor.
 *
 * @api {Object} connection options
 * @api public
 */

function WS (opts) {
  var forceBase64 = (opts && opts.forceBase64);
  if (forceBase64) {
    this.supportsBinary = false;
  }
  this.perMessageDeflate = opts.perMessageDeflate;
  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;
  this.protocols = opts.protocols;
  if (!this.usingBrowserWebSocket) {
    WebSocketImpl = NodeWebSocket;
  }
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(WS, Transport);

/**
 * Transport name.
 *
 * @api public
 */

WS.prototype.name = 'websocket';

/*
 * WebSockets support binary
 */

WS.prototype.supportsBinary = true;

/**
 * Opens socket.
 *
 * @api private
 */

WS.prototype.doOpen = function () {
  if (!this.check()) {
    // let probe timeout
    return;
  }

  var uri = this.uri();
  var protocols = this.protocols;
  var opts = {
    agent: this.agent,
    perMessageDeflate: this.perMessageDeflate
  };

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;
  if (this.extraHeaders) {
    opts.headers = this.extraHeaders;
  }
  if (this.localAddress) {
    opts.localAddress = this.localAddress;
  }

  try {
    this.ws =
      this.usingBrowserWebSocket && !this.isReactNative
        ? protocols
          ? new WebSocketImpl(uri, protocols)
          : new WebSocketImpl(uri)
        : new WebSocketImpl(uri, protocols, opts);
  } catch (err) {
    return this.emit('error', err);
  }

  if (this.ws.binaryType === undefined) {
    this.supportsBinary = false;
  }

  if (this.ws.supports && this.ws.supports.binary) {
    this.supportsBinary = true;
    this.ws.binaryType = 'nodebuffer';
  } else {
    this.ws.binaryType = 'arraybuffer';
  }

  this.addEventListeners();
};

/**
 * Adds event listeners to the socket
 *
 * @api private
 */

WS.prototype.addEventListeners = function () {
  var self = this;

  this.ws.onopen = function () {
    self.onOpen();
  };
  this.ws.onclose = function () {
    self.onClose();
  };
  this.ws.onmessage = function (ev) {
    self.onData(ev.data);
  };
  this.ws.onerror = function (e) {
    self.onError('websocket error', e);
  };
};

/**
 * Writes data to socket.
 *
 * @param {Array} array of packets.
 * @api private
 */

WS.prototype.write = function (packets) {
  var self = this;
  this.writable = false;

  // encodePacket efficient as it uses WS framing
  // no need for encodePayload
  var total = packets.length;
  for (var i = 0, l = total; i < l; i++) {
    (function (packet) {
      parser.encodePacket(packet, self.supportsBinary, function (data) {
        if (!self.usingBrowserWebSocket) {
          // always create a new object (GH-437)
          var opts = {};
          if (packet.options) {
            opts.compress = packet.options.compress;
          }

          if (self.perMessageDeflate) {
            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;
            if (len < self.perMessageDeflate.threshold) {
              opts.compress = false;
            }
          }
        }

        // Sometimes the websocket has already been closed but the browser didn't
        // have a chance of informing us about it yet, in that case send will
        // throw an error
        try {
          if (self.usingBrowserWebSocket) {
            // TypeError is thrown when passing the second argument on Safari
            self.ws.send(data);
          } else {
            self.ws.send(data, opts);
          }
        } catch (e) {
          debug('websocket closed before onclose event');
        }

        --total || done();
      });
    })(packets[i]);
  }

  function done () {
    self.emit('flush');

    // fake drain
    // defer to next tick to allow Socket to clear writeBuffer
    setTimeout(function () {
      self.writable = true;
      self.emit('drain');
    }, 0);
  }
};

/**
 * Called upon close
 *
 * @api private
 */

WS.prototype.onClose = function () {
  Transport.prototype.onClose.call(this);
};

/**
 * Closes socket.
 *
 * @api private
 */

WS.prototype.doClose = function () {
  if (typeof this.ws !== 'undefined') {
    this.ws.close();
  }
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

WS.prototype.uri = function () {
  var query = this.query || {};
  var schema = this.secure ? 'wss' : 'ws';
  var port = '';

  // avoid port if default for schema
  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||
    ('ws' === schema && Number(this.port) !== 80))) {
    port = ':' + this.port;
  }

  // append timestamp to URI
  if (this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  // communicate binary support capabilities
  if (!this.supportsBinary) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};

/**
 * Feature detection for WebSocket.
 *
 * @return {Boolean} whether this transport is available.
 * @api public
 */

WS.prototype.check = function () {
  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/engine.io-client/lib/xmlhttprequest.js":
/*!*************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/xmlhttprequest.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// browser shim for xmlhttprequest module

var hasCORS = __webpack_require__(/*! has-cors */ "./node_modules/has-cors/index.js");

module.exports = function (opts) {
  var xdomain = opts.xdomain;

  // scheme must be same when usign XDomainRequest
  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
  var xscheme = opts.xscheme;

  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
  // https://github.com/Automattic/engine.io-client/pull/217
  var enablesXDR = opts.enablesXDR;

  // XMLHttpRequest can be disabled on IE
  try {
    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
      return new XMLHttpRequest();
    }
  } catch (e) { }

  // Use XDomainRequest for IE8 if enablesXDR is true
  // because loading bar keeps flashing when using jsonp-polling
  // https://github.com/yujiosaka/socke.io-ie8-loading-example
  try {
    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {
      return new XDomainRequest();
    }
  } catch (e) { }

  if (!xdomain) {
    try {
      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');
    } catch (e) { }
  }
};


/***/ }),

/***/ "./node_modules/engine.io-client/node_modules/debug/src/browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-client/node_modules/debug/src/browser.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(/*! ./debug */ "./node_modules/engine.io-client/node_modules/debug/src/debug.js");
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/engine.io-client/node_modules/debug/src/debug.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/node_modules/debug/src/debug.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __webpack_require__(/*! ms */ "./node_modules/ms/index.js");

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),

/***/ "./node_modules/engine.io-parser/lib/browser.js":
/*!******************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/browser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var keys = __webpack_require__(/*! ./keys */ "./node_modules/engine.io-parser/lib/keys.js");
var hasBinary = __webpack_require__(/*! has-binary2 */ "./node_modules/has-binary2/index.js");
var sliceBuffer = __webpack_require__(/*! arraybuffer.slice */ "./node_modules/arraybuffer.slice/index.js");
var after = __webpack_require__(/*! after */ "./node_modules/after/index.js");
var utf8 = __webpack_require__(/*! ./utf8 */ "./node_modules/engine.io-parser/lib/utf8.js");

var base64encoder;
if (typeof ArrayBuffer !== 'undefined') {
  base64encoder = __webpack_require__(/*! base64-arraybuffer */ "./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js");
}

/**
 * Check if we are running an android browser. That requires us to use
 * ArrayBuffer with polling transports...
 *
 * http://ghinda.net/jpeg-blob-ajax-android/
 */

var isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);

/**
 * Check if we are running in PhantomJS.
 * Uploading a Blob with PhantomJS does not work correctly, as reported here:
 * https://github.com/ariya/phantomjs/issues/11395
 * @type boolean
 */
var isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);

/**
 * When true, avoids using Blobs to encode payloads.
 * @type boolean
 */
var dontSendBlobs = isAndroid || isPhantomJS;

/**
 * Current protocol version.
 */

exports.protocol = 3;

/**
 * Packet types.
 */

var packets = exports.packets = {
    open:     0    // non-ws
  , close:    1    // non-ws
  , ping:     2
  , pong:     3
  , message:  4
  , upgrade:  5
  , noop:     6
};

var packetslist = keys(packets);

/**
 * Premade error packet.
 */

var err = { type: 'error', data: 'parser error' };

/**
 * Create a blob api even for blob builder when vendor prefixes exist
 */

var Blob = __webpack_require__(/*! blob */ "./node_modules/blob/index.js");

/**
 * Encodes a packet.
 *
 *     <packet type id> [ <data> ]
 *
 * Example:
 *
 *     5hello world
 *     3
 *     4
 *
 * Binary is encoded in an identical principle
 *
 * @api private
 */

exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
  if (typeof supportsBinary === 'function') {
    callback = supportsBinary;
    supportsBinary = false;
  }

  if (typeof utf8encode === 'function') {
    callback = utf8encode;
    utf8encode = null;
  }

  var data = (packet.data === undefined)
    ? undefined
    : packet.data.buffer || packet.data;

  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {
    return encodeArrayBuffer(packet, supportsBinary, callback);
  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {
    return encodeBlob(packet, supportsBinary, callback);
  }

  // might be an object with { base64: true, data: dataAsBase64String }
  if (data && data.base64) {
    return encodeBase64Object(packet, callback);
  }

  // Sending data as a utf-8 string
  var encoded = packets[packet.type];

  // data fragment is optional
  if (undefined !== packet.data) {
    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);
  }

  return callback('' + encoded);

};

function encodeBase64Object(packet, callback) {
  // packet data is an object { base64: true, data: dataAsBase64String }
  var message = 'b' + exports.packets[packet.type] + packet.data.data;
  return callback(message);
}

/**
 * Encode packet helpers for binary types
 */

function encodeArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var data = packet.data;
  var contentArray = new Uint8Array(data);
  var resultBuffer = new Uint8Array(1 + data.byteLength);

  resultBuffer[0] = packets[packet.type];
  for (var i = 0; i < contentArray.length; i++) {
    resultBuffer[i+1] = contentArray[i];
  }

  return callback(resultBuffer.buffer);
}

function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var fr = new FileReader();
  fr.onload = function() {
    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);
  };
  return fr.readAsArrayBuffer(packet.data);
}

function encodeBlob(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  if (dontSendBlobs) {
    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
  }

  var length = new Uint8Array(1);
  length[0] = packets[packet.type];
  var blob = new Blob([length.buffer, packet.data]);

  return callback(blob);
}

/**
 * Encodes a packet with binary data in a base64 string
 *
 * @param {Object} packet, has `type` and `data`
 * @return {String} base64 encoded message
 */

exports.encodeBase64Packet = function(packet, callback) {
  var message = 'b' + exports.packets[packet.type];
  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {
    var fr = new FileReader();
    fr.onload = function() {
      var b64 = fr.result.split(',')[1];
      callback(message + b64);
    };
    return fr.readAsDataURL(packet.data);
  }

  var b64data;
  try {
    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));
  } catch (e) {
    // iPhone Safari doesn't let you apply with typed arrays
    var typed = new Uint8Array(packet.data);
    var basic = new Array(typed.length);
    for (var i = 0; i < typed.length; i++) {
      basic[i] = typed[i];
    }
    b64data = String.fromCharCode.apply(null, basic);
  }
  message += btoa(b64data);
  return callback(message);
};

/**
 * Decodes a packet. Changes format to Blob if requested.
 *
 * @return {Object} with `type` and `data` (if any)
 * @api private
 */

exports.decodePacket = function (data, binaryType, utf8decode) {
  if (data === undefined) {
    return err;
  }
  // String data
  if (typeof data === 'string') {
    if (data.charAt(0) === 'b') {
      return exports.decodeBase64Packet(data.substr(1), binaryType);
    }

    if (utf8decode) {
      data = tryDecode(data);
      if (data === false) {
        return err;
      }
    }
    var type = data.charAt(0);

    if (Number(type) != type || !packetslist[type]) {
      return err;
    }

    if (data.length > 1) {
      return { type: packetslist[type], data: data.substring(1) };
    } else {
      return { type: packetslist[type] };
    }
  }

  var asArray = new Uint8Array(data);
  var type = asArray[0];
  var rest = sliceBuffer(data, 1);
  if (Blob && binaryType === 'blob') {
    rest = new Blob([rest]);
  }
  return { type: packetslist[type], data: rest };
};

function tryDecode(data) {
  try {
    data = utf8.decode(data, { strict: false });
  } catch (e) {
    return false;
  }
  return data;
}

/**
 * Decodes a packet encoded in a base64 string
 *
 * @param {String} base64 encoded message
 * @return {Object} with `type` and `data` (if any)
 */

exports.decodeBase64Packet = function(msg, binaryType) {
  var type = packetslist[msg.charAt(0)];
  if (!base64encoder) {
    return { type: type, data: { base64: true, data: msg.substr(1) } };
  }

  var data = base64encoder.decode(msg.substr(1));

  if (binaryType === 'blob' && Blob) {
    data = new Blob([data]);
  }

  return { type: type, data: data };
};

/**
 * Encodes multiple messages (payload).
 *
 *     <length>:data
 *
 * Example:
 *
 *     11:hello world2:hi
 *
 * If any contents are binary, they will be encoded as base64 strings. Base64
 * encoded strings are marked with a b before the length specifier
 *
 * @param {Array} packets
 * @api private
 */

exports.encodePayload = function (packets, supportsBinary, callback) {
  if (typeof supportsBinary === 'function') {
    callback = supportsBinary;
    supportsBinary = null;
  }

  var isBinary = hasBinary(packets);

  if (supportsBinary && isBinary) {
    if (Blob && !dontSendBlobs) {
      return exports.encodePayloadAsBlob(packets, callback);
    }

    return exports.encodePayloadAsArrayBuffer(packets, callback);
  }

  if (!packets.length) {
    return callback('0:');
  }

  function setLengthHeader(message) {
    return message.length + ':' + message;
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {
      doneCallback(null, setLengthHeader(message));
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(results.join(''));
  });
};

/**
 * Async array map using after
 */

function map(ary, each, done) {
  var result = new Array(ary.length);
  var next = after(ary.length, done);

  var eachWithIndex = function(i, el, cb) {
    each(el, function(error, msg) {
      result[i] = msg;
      cb(error, result);
    });
  };

  for (var i = 0; i < ary.length; i++) {
    eachWithIndex(i, ary[i], next);
  }
}

/*
 * Decodes data when a payload is maybe expected. Possible binary contents are
 * decoded from their base64 representation
 *
 * @param {String} data, callback method
 * @api public
 */

exports.decodePayload = function (data, binaryType, callback) {
  if (typeof data !== 'string') {
    return exports.decodePayloadAsBinary(data, binaryType, callback);
  }

  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var packet;
  if (data === '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

  var length = '', n, msg;

  for (var i = 0, l = data.length; i < l; i++) {
    var chr = data.charAt(i);

    if (chr !== ':') {
      length += chr;
      continue;
    }

    if (length === '' || (length != (n = Number(length)))) {
      // parser error - ignoring payload
      return callback(err, 0, 1);
    }

    msg = data.substr(i + 1, n);

    if (length != msg.length) {
      // parser error - ignoring payload
      return callback(err, 0, 1);
    }

    if (msg.length) {
      packet = exports.decodePacket(msg, binaryType, false);

      if (err.type === packet.type && err.data === packet.data) {
        // parser error in individual packet - ignoring payload
        return callback(err, 0, 1);
      }

      var ret = callback(packet, i + n, l);
      if (false === ret) return;
    }

    // advance cursor
    i += n;
    length = '';
  }

  if (length !== '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

};

/**
 * Encodes multiple messages (payload) as binary.
 *
 * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number
 * 255><data>
 *
 * Example:
 * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers
 *
 * @param {Array} packets
 * @return {ArrayBuffer} encoded payload
 * @api private
 */

exports.encodePayloadAsArrayBuffer = function(packets, callback) {
  if (!packets.length) {
    return callback(new ArrayBuffer(0));
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(data) {
      return doneCallback(null, data);
    });
  }

  map(packets, encodeOne, function(err, encodedPackets) {
    var totalLength = encodedPackets.reduce(function(acc, p) {
      var len;
      if (typeof p === 'string'){
        len = p.length;
      } else {
        len = p.byteLength;
      }
      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2
    }, 0);

    var resultArray = new Uint8Array(totalLength);

    var bufferIndex = 0;
    encodedPackets.forEach(function(p) {
      var isString = typeof p === 'string';
      var ab = p;
      if (isString) {
        var view = new Uint8Array(p.length);
        for (var i = 0; i < p.length; i++) {
          view[i] = p.charCodeAt(i);
        }
        ab = view.buffer;
      }

      if (isString) { // not true binary
        resultArray[bufferIndex++] = 0;
      } else { // true binary
        resultArray[bufferIndex++] = 1;
      }

      var lenStr = ab.byteLength.toString();
      for (var i = 0; i < lenStr.length; i++) {
        resultArray[bufferIndex++] = parseInt(lenStr[i]);
      }
      resultArray[bufferIndex++] = 255;

      var view = new Uint8Array(ab);
      for (var i = 0; i < view.length; i++) {
        resultArray[bufferIndex++] = view[i];
      }
    });

    return callback(resultArray.buffer);
  });
};

/**
 * Encode as Blob
 */

exports.encodePayloadAsBlob = function(packets, callback) {
  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(encoded) {
      var binaryIdentifier = new Uint8Array(1);
      binaryIdentifier[0] = 1;
      if (typeof encoded === 'string') {
        var view = new Uint8Array(encoded.length);
        for (var i = 0; i < encoded.length; i++) {
          view[i] = encoded.charCodeAt(i);
        }
        encoded = view.buffer;
        binaryIdentifier[0] = 0;
      }

      var len = (encoded instanceof ArrayBuffer)
        ? encoded.byteLength
        : encoded.size;

      var lenStr = len.toString();
      var lengthAry = new Uint8Array(lenStr.length + 1);
      for (var i = 0; i < lenStr.length; i++) {
        lengthAry[i] = parseInt(lenStr[i]);
      }
      lengthAry[lenStr.length] = 255;

      if (Blob) {
        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
        doneCallback(null, blob);
      }
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(new Blob(results));
  });
};

/*
 * Decodes data when a payload is maybe expected. Strings are decoded by
 * interpreting each byte as a key code for entries marked to start with 0. See
 * description of encodePayloadAsBinary
 *
 * @param {ArrayBuffer} data, callback method
 * @api public
 */

exports.decodePayloadAsBinary = function (data, binaryType, callback) {
  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var bufferTail = data;
  var buffers = [];

  while (bufferTail.byteLength > 0) {
    var tailArray = new Uint8Array(bufferTail);
    var isString = tailArray[0] === 0;
    var msgLength = '';

    for (var i = 1; ; i++) {
      if (tailArray[i] === 255) break;

      // 310 = char length of Number.MAX_VALUE
      if (msgLength.length > 310) {
        return callback(err, 0, 1);
      }

      msgLength += tailArray[i];
    }

    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);
    msgLength = parseInt(msgLength);

    var msg = sliceBuffer(bufferTail, 0, msgLength);
    if (isString) {
      try {
        msg = String.fromCharCode.apply(null, new Uint8Array(msg));
      } catch (e) {
        // iPhone Safari doesn't let you apply to typed arrays
        var typed = new Uint8Array(msg);
        msg = '';
        for (var i = 0; i < typed.length; i++) {
          msg += String.fromCharCode(typed[i]);
        }
      }
    }

    buffers.push(msg);
    bufferTail = sliceBuffer(bufferTail, msgLength);
  }

  var total = buffers.length;
  buffers.forEach(function(buffer, i) {
    callback(exports.decodePacket(buffer, binaryType, true), i, total);
  });
};


/***/ }),

/***/ "./node_modules/engine.io-parser/lib/keys.js":
/*!***************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/keys.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * Gets the keys for an object.
 *
 * @return {Array} keys
 * @api private
 */

module.exports = Object.keys || function keys (obj){
  var arr = [];
  var has = Object.prototype.hasOwnProperty;

  for (var i in obj) {
    if (has.call(obj, i)) {
      arr.push(i);
    }
  }
  return arr;
};


/***/ }),

/***/ "./node_modules/engine.io-parser/lib/utf8.js":
/*!***************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/utf8.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*! https://mths.be/utf8js v2.1.2 by @mathias */

var stringFromCharCode = String.fromCharCode;

// Taken from https://mths.be/punycode
function ucs2decode(string) {
	var output = [];
	var counter = 0;
	var length = string.length;
	var value;
	var extra;
	while (counter < length) {
		value = string.charCodeAt(counter++);
		if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
			// high surrogate, and there is a next character
			extra = string.charCodeAt(counter++);
			if ((extra & 0xFC00) == 0xDC00) { // low surrogate
				output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
			} else {
				// unmatched surrogate; only append this code unit, in case the next
				// code unit is the high surrogate of a surrogate pair
				output.push(value);
				counter--;
			}
		} else {
			output.push(value);
		}
	}
	return output;
}

// Taken from https://mths.be/punycode
function ucs2encode(array) {
	var length = array.length;
	var index = -1;
	var value;
	var output = '';
	while (++index < length) {
		value = array[index];
		if (value > 0xFFFF) {
			value -= 0x10000;
			output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
			value = 0xDC00 | value & 0x3FF;
		}
		output += stringFromCharCode(value);
	}
	return output;
}

function checkScalarValue(codePoint, strict) {
	if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
		if (strict) {
			throw Error(
				'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +
				' is not a scalar value'
			);
		}
		return false;
	}
	return true;
}
/*--------------------------------------------------------------------------*/

function createByte(codePoint, shift) {
	return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);
}

function encodeCodePoint(codePoint, strict) {
	if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence
		return stringFromCharCode(codePoint);
	}
	var symbol = '';
	if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence
		symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);
	}
	else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence
		if (!checkScalarValue(codePoint, strict)) {
			codePoint = 0xFFFD;
		}
		symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);
		symbol += createByte(codePoint, 6);
	}
	else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence
		symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);
		symbol += createByte(codePoint, 12);
		symbol += createByte(codePoint, 6);
	}
	symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);
	return symbol;
}

function utf8encode(string, opts) {
	opts = opts || {};
	var strict = false !== opts.strict;

	var codePoints = ucs2decode(string);
	var length = codePoints.length;
	var index = -1;
	var codePoint;
	var byteString = '';
	while (++index < length) {
		codePoint = codePoints[index];
		byteString += encodeCodePoint(codePoint, strict);
	}
	return byteString;
}

/*--------------------------------------------------------------------------*/

function readContinuationByte() {
	if (byteIndex >= byteCount) {
		throw Error('Invalid byte index');
	}

	var continuationByte = byteArray[byteIndex] & 0xFF;
	byteIndex++;

	if ((continuationByte & 0xC0) == 0x80) {
		return continuationByte & 0x3F;
	}

	// If we end up here, it’s not a continuation byte
	throw Error('Invalid continuation byte');
}

function decodeSymbol(strict) {
	var byte1;
	var byte2;
	var byte3;
	var byte4;
	var codePoint;

	if (byteIndex > byteCount) {
		throw Error('Invalid byte index');
	}

	if (byteIndex == byteCount) {
		return false;
	}

	// Read first byte
	byte1 = byteArray[byteIndex] & 0xFF;
	byteIndex++;

	// 1-byte sequence (no continuation bytes)
	if ((byte1 & 0x80) == 0) {
		return byte1;
	}

	// 2-byte sequence
	if ((byte1 & 0xE0) == 0xC0) {
		byte2 = readContinuationByte();
		codePoint = ((byte1 & 0x1F) << 6) | byte2;
		if (codePoint >= 0x80) {
			return codePoint;
		} else {
			throw Error('Invalid continuation byte');
		}
	}

	// 3-byte sequence (may include unpaired surrogates)
	if ((byte1 & 0xF0) == 0xE0) {
		byte2 = readContinuationByte();
		byte3 = readContinuationByte();
		codePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;
		if (codePoint >= 0x0800) {
			return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;
		} else {
			throw Error('Invalid continuation byte');
		}
	}

	// 4-byte sequence
	if ((byte1 & 0xF8) == 0xF0) {
		byte2 = readContinuationByte();
		byte3 = readContinuationByte();
		byte4 = readContinuationByte();
		codePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |
			(byte3 << 0x06) | byte4;
		if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
			return codePoint;
		}
	}

	throw Error('Invalid UTF-8 detected');
}

var byteArray;
var byteCount;
var byteIndex;
function utf8decode(byteString, opts) {
	opts = opts || {};
	var strict = false !== opts.strict;

	byteArray = ucs2decode(byteString);
	byteCount = byteArray.length;
	byteIndex = 0;
	var codePoints = [];
	var tmp;
	while ((tmp = decodeSymbol(strict)) !== false) {
		codePoints.push(tmp);
	}
	return ucs2encode(codePoints);
}

module.exports = {
	version: '2.1.2',
	encode: utf8encode,
	decode: utf8decode
};


/***/ }),

/***/ "./node_modules/getstats/getStats.js":
/*!*******************************************!*\
  !*** ./node_modules/getstats/getStats.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Last time updated: 2019-02-20 3:31:29 PM UTC

// _______________
// getStats v1.2.0

// Open-Sourced: https://github.com/muaz-khan/getStats

// --------------------------------------------------
// Muaz Khan     - www.MuazKhan.com
// MIT License   - www.WebRTC-Experiment.com/licence
// --------------------------------------------------

var getStats = function(mediaStreamTrack, callback, interval) {

    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';

    (function(that) {
        if (!that) {
            return;
        }

        if (typeof window !== 'undefined') {
            return;
        }

        if (typeof global === 'undefined') {
            return;
        }

        global.navigator = {
            userAgent: browserFakeUserAgent,
            getUserMedia: function() {}
        };

        if (!global.console) {
            global.console = {};
        }

        if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {
            global.console.error = global.console.log = global.console.log || function() {
                console.log(arguments);
            };
        }

        if (typeof document === 'undefined') {
            /*global document:true */
            that.document = {
                documentElement: {
                    appendChild: function() {
                        return '';
                    }
                }
            };

            document.createElement = document.captureStream = document.mozCaptureStream = function() {
                var obj = {
                    getContext: function() {
                        return obj;
                    },
                    play: function() {},
                    pause: function() {},
                    drawImage: function() {},
                    toDataURL: function() {
                        return '';
                    }
                };
                return obj;
            };

            that.HTMLVideoElement = function() {};
        }

        if (typeof location === 'undefined') {
            /*global location:true */
            that.location = {
                protocol: 'file:',
                href: '',
                hash: ''
            };
        }

        if (typeof screen === 'undefined') {
            /*global screen:true */
            that.screen = {
                width: 0,
                height: 0
            };
        }

        if (typeof URL === 'undefined') {
            /*global screen:true */
            that.URL = {
                createObjectURL: function() {
                    return '';
                },
                revokeObjectURL: function() {
                    return '';
                }
            };
        }

        if (typeof MediaStreamTrack === 'undefined') {
            /*global screen:true */
            that.MediaStreamTrack = function() {};
        }

        if (typeof RTCPeerConnection === 'undefined') {
            /*global screen:true */
            that.RTCPeerConnection = function() {};
        }

        /*global window:true */
        that.window = global;
    })(typeof global !== 'undefined' ? global : null);

    var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;

    if (typeof MediaStreamTrack === 'undefined') {
        MediaStreamTrack = {}; // todo?
    }

    var systemNetworkType = ((navigator.connection || {}).type || 'unknown').toString().toLowerCase();

    var getStatsResult = {
        encryption: 'sha-256',
        audio: {
            send: {
                tracks: [],
                codecs: [],
                availableBandwidth: 0,
                streams: 0,
                framerateMean: 0,
                bitrateMean: 0
            },
            recv: {
                tracks: [],
                codecs: [],
                availableBandwidth: 0,
                streams: 0,
                framerateMean: 0,
                bitrateMean: 0
            },
            bytesSent: 0,
            bytesReceived: 0,
            latency: 0,
            packetsLost: 0
        },
        video: {
            send: {
                tracks: [],
                codecs: [],
                availableBandwidth: 0,
                streams: 0,
                framerateMean: 0,
                bitrateMean: 0
            },
            recv: {
                tracks: [],
                codecs: [],
                availableBandwidth: 0,
                streams: 0,
                framerateMean: 0,
                bitrateMean: 0
            },
            bytesSent: 0,
            bytesReceived: 0,
            latency: 0,
            packetsLost: 0
        },
        bandwidth: {
            systemBandwidth: 0,
            sentPerSecond: 0,
            encodedPerSecond: 0,
            helper: {
                audioBytesSent: 0,
                videoBytestSent: 0
            },
            speed: 0
        },
        results: {},
        connectionType: {
            systemNetworkType: systemNetworkType,
            systemIpAddress: '192.168.1.2',
            local: {
                candidateType: [],
                transport: [],
                ipAddress: [],
                networkType: []
            },
            remote: {
                candidateType: [],
                transport: [],
                ipAddress: [],
                networkType: []
            }
        },
        resolutions: {
            send: {
                width: 0,
                height: 0
            },
            recv: {
                width: 0,
                height: 0
            }
        },
        internal: {
            audio: {
                send: {},
                recv: {}
            },
            video: {
                send: {},
                recv: {}
            },
            candidates: {}
        },
        nomore: function() {
            nomore = true;
        }
    };

    var getStatsParser = {
        checkIfOfferer: function(result) {
            if (result.type === 'googLibjingleSession') {
                getStatsResult.isOfferer = result.googInitiator;
            }
        }
    };

    var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);

    var peer = this;

    if (!(arguments[0] instanceof RTCPeerConnection)) {
        throw '1st argument is not instance of RTCPeerConnection.';
    }

    peer = arguments[0];

    if (arguments[1] instanceof MediaStreamTrack) {
        mediaStreamTrack = arguments[1]; // redundant on non-safari
        callback = arguments[2];
        interval = arguments[3];
    }

    var nomore = false;

    function getStatsLooper() {
        getStatsWrapper(function(results) {
            if (!results || !results.forEach) return;

            results.forEach(function(result) {
                // console.error('result', result);
                Object.keys(getStatsParser).forEach(function(key) {
                    if (typeof getStatsParser[key] === 'function') {
                        try {
                            getStatsParser[key](result);
                        } catch (e) {
                            console.error(e.message, e.stack, e);
                        }
                    }
                });
            });

            try {
                if (peer.iceConnectionState.search(/failed|closed|disconnected/gi) !== -1) {
                    nomore = true;
                }
            } catch (e) {
                nomore = true;
            }

            if (nomore === true) {
                if (getStatsResult.datachannel) {
                    getStatsResult.datachannel.state = 'close';
                }
                getStatsResult.ended = true;
            }

            // allow users to access native results
            getStatsResult.results = results;

            if (getStatsResult.audio && getStatsResult.video) {
                getStatsResult.bandwidth.speed = (getStatsResult.audio.bytesSent - getStatsResult.bandwidth.helper.audioBytesSent) + (getStatsResult.video.bytesSent - getStatsResult.bandwidth.helper.videoBytesSent);
                getStatsResult.bandwidth.helper.audioBytesSent = getStatsResult.audio.bytesSent;
                getStatsResult.bandwidth.helper.videoBytesSent = getStatsResult.video.bytesSent;
            }

            callback(getStatsResult);

            // second argument checks to see, if target-user is still connected.
            if (!nomore) {
                typeof interval != undefined && interval && setTimeout(getStatsLooper, interval || 1000);
            }
        });
    }

    // a wrapper around getStats which hides the differences (where possible)
    // following code-snippet is taken from somewhere on the github
    function getStatsWrapper(cb) {
        // if !peer or peer.signalingState == 'closed' then return;

        if (typeof window.InstallTrigger !== 'undefined' || isSafari) { // maybe "isEdge?"
            peer.getStats(window.mediaStreamTrack || null).then(function(res) {
                var items = [];
                res.forEach(function(r) {
                    items.push(r);
                });
                cb(items);
            }).catch(cb);
        } else {
            peer.getStats(function(res) {
                var items = [];
                res.result().forEach(function(res) {
                    var item = {};
                    res.names().forEach(function(name) {
                        item[name] = res.stat(name);
                    });
                    item.id = res.id;
                    item.type = res.type;
                    item.timestamp = res.timestamp;
                    items.push(item);
                });
                cb(items);
            });
        }
    };

    getStatsParser.datachannel = function(result) {
        if (result.type !== 'datachannel') return;

        getStatsResult.datachannel = {
            state: result.state // open or connecting
        }
    };

    getStatsParser.googCertificate = function(result) {
        if (result.type == 'googCertificate') {
            getStatsResult.encryption = result.googFingerprintAlgorithm;
        }

        // Safari-11 or higher
        if (result.type == 'certificate') {
            // todo: is it possible to have different encryption methods for senders and receivers?
            // if yes, then we need to set:
            //    getStatsResult.encryption.local = value;
            //    getStatsResult.encryption.remote = value;
            getStatsResult.encryption = result.fingerprintAlgorithm;
        }
    };

    getStatsParser.checkAudioTracks = function(result) {
        if (result.mediaType !== 'audio') return;

        var sendrecvType = result.id.split('_').pop();
        if (result.isRemote === true) {
            sendrecvType = 'recv';
        }
        if (result.isRemote === false) {
            sendrecvType = 'send';
        }

        if (!sendrecvType) return;

        if (getStatsResult.audio[sendrecvType].codecs.indexOf(result.googCodecName || 'opus') === -1) {
            getStatsResult.audio[sendrecvType].codecs.push(result.googCodecName || 'opus');
        }

        if (!!result.bytesSent) {
            var kilobytes = 0;
            if (!getStatsResult.internal.audio[sendrecvType].prevBytesSent) {
                getStatsResult.internal.audio[sendrecvType].prevBytesSent = result.bytesSent;
            }

            var bytes = result.bytesSent - getStatsResult.internal.audio[sendrecvType].prevBytesSent;
            getStatsResult.internal.audio[sendrecvType].prevBytesSent = result.bytesSent;

            kilobytes = bytes / 1024;
            getStatsResult.audio[sendrecvType].availableBandwidth = kilobytes.toFixed(1);
            getStatsResult.audio.bytesSent = kilobytes.toFixed(1);
        }

        if (!!result.bytesReceived) {
            var kilobytes = 0;
            if (!getStatsResult.internal.audio[sendrecvType].prevBytesReceived) {
                getStatsResult.internal.audio[sendrecvType].prevBytesReceived = result.bytesReceived;
            }

            var bytes = result.bytesReceived - getStatsResult.internal.audio[sendrecvType].prevBytesReceived;
            getStatsResult.internal.audio[sendrecvType].prevBytesReceived = result.bytesReceived;

            kilobytes = bytes / 1024;

            // getStatsResult.audio[sendrecvType].availableBandwidth = kilobytes.toFixed(1);
            getStatsResult.audio.bytesReceived = kilobytes.toFixed(1);
        }

        if (result.googTrackId && getStatsResult.audio[sendrecvType].tracks.indexOf(result.googTrackId) === -1) {
            getStatsResult.audio[sendrecvType].tracks.push(result.googTrackId);
        }

        // calculate latency
        if (!!result.googCurrentDelayMs) {
            var kilobytes = 0;
            if (!getStatsResult.internal.audio.prevGoogCurrentDelayMs) {
                getStatsResult.internal.audio.prevGoogCurrentDelayMs = result.googCurrentDelayMs;
            }

            var bytes = result.googCurrentDelayMs - getStatsResult.internal.audio.prevGoogCurrentDelayMs;
            getStatsResult.internal.audio.prevGoogCurrentDelayMs = result.googCurrentDelayMs;

            getStatsResult.audio.latency = bytes.toFixed(1);

            if (getStatsResult.audio.latency < 0) {
                getStatsResult.audio.latency = 0;
            }
        }

        // calculate packetsLost
        if (!!result.packetsLost) {
            var kilobytes = 0;
            if (!getStatsResult.internal.audio.prevPacketsLost) {
                getStatsResult.internal.audio.prevPacketsLost = result.packetsLost;
            }

            var bytes = result.packetsLost - getStatsResult.internal.audio.prevPacketsLost;
            getStatsResult.internal.audio.prevPacketsLost = result.packetsLost;

            getStatsResult.audio.packetsLost = bytes.toFixed(1);

            if (getStatsResult.audio.packetsLost < 0) {
                getStatsResult.audio.packetsLost = 0;
            }
        }
    };

    getStatsParser.checkVideoTracks = function(result) {
        if (result.mediaType !== 'video') return;

        var sendrecvType = result.id.split('_').pop();
        if (result.isRemote === true) {
            sendrecvType = 'recv';
        }
        if (result.isRemote === false) {
            sendrecvType = 'send';
        }

        if (!sendrecvType) return;

        if (getStatsResult.video[sendrecvType].codecs.indexOf(result.googCodecName || 'VP8') === -1) {
            getStatsResult.video[sendrecvType].codecs.push(result.googCodecName || 'VP8');
        }

        if (!!result.bytesSent) {
            var kilobytes = 0;
            if (!getStatsResult.internal.video[sendrecvType].prevBytesSent) {
                getStatsResult.internal.video[sendrecvType].prevBytesSent = result.bytesSent;
            }

            var bytes = result.bytesSent - getStatsResult.internal.video[sendrecvType].prevBytesSent;
            getStatsResult.internal.video[sendrecvType].prevBytesSent = result.bytesSent;

            kilobytes = bytes / 1024;

            getStatsResult.video[sendrecvType].availableBandwidth = kilobytes.toFixed(1);
            getStatsResult.video.bytesSent = kilobytes.toFixed(1);
        }

        if (!!result.bytesReceived) {
            var kilobytes = 0;
            if (!getStatsResult.internal.video[sendrecvType].prevBytesReceived) {
                getStatsResult.internal.video[sendrecvType].prevBytesReceived = result.bytesReceived;
            }

            var bytes = result.bytesReceived - getStatsResult.internal.video[sendrecvType].prevBytesReceived;
            getStatsResult.internal.video[sendrecvType].prevBytesReceived = result.bytesReceived;

            kilobytes = bytes / 1024;
            // getStatsResult.video[sendrecvType].availableBandwidth = kilobytes.toFixed(1);
            getStatsResult.video.bytesReceived = kilobytes.toFixed(1);
        }

        if (result.googFrameHeightReceived && result.googFrameWidthReceived) {
            getStatsResult.resolutions[sendrecvType].width = result.googFrameWidthReceived;
            getStatsResult.resolutions[sendrecvType].height = result.googFrameHeightReceived;
        }

        if (result.googFrameHeightSent && result.googFrameWidthSent) {
            getStatsResult.resolutions[sendrecvType].width = result.googFrameWidthSent;
            getStatsResult.resolutions[sendrecvType].height = result.googFrameHeightSent;
        }

        if (result.googTrackId && getStatsResult.video[sendrecvType].tracks.indexOf(result.googTrackId) === -1) {
            getStatsResult.video[sendrecvType].tracks.push(result.googTrackId);
        }

        if (result.framerateMean) {
            getStatsResult.bandwidth.framerateMean = result.framerateMean;
            var kilobytes = 0;
            if (!getStatsResult.internal.video[sendrecvType].prevFramerateMean) {
                getStatsResult.internal.video[sendrecvType].prevFramerateMean = result.bitrateMean;
            }

            var bytes = result.bytesSent - getStatsResult.internal.video[sendrecvType].prevFramerateMean;
            getStatsResult.internal.video[sendrecvType].prevFramerateMean = result.framerateMean;

            kilobytes = bytes / 1024;
            getStatsResult.video[sendrecvType].framerateMean = bytes.toFixed(1);
        }

        if (result.bitrateMean) {
            getStatsResult.bandwidth.bitrateMean = result.bitrateMean;
            var kilobytes = 0;
            if (!getStatsResult.internal.video[sendrecvType].prevBitrateMean) {
                getStatsResult.internal.video[sendrecvType].prevBitrateMean = result.bitrateMean;
            }

            var bytes = result.bytesSent - getStatsResult.internal.video[sendrecvType].prevBitrateMean;
            getStatsResult.internal.video[sendrecvType].prevBitrateMean = result.bitrateMean;

            kilobytes = bytes / 1024;
            getStatsResult.video[sendrecvType].bitrateMean = bytes.toFixed(1);
        }

        // calculate latency
        if (!!result.googCurrentDelayMs) {
            var kilobytes = 0;
            if (!getStatsResult.internal.video.prevGoogCurrentDelayMs) {
                getStatsResult.internal.video.prevGoogCurrentDelayMs = result.googCurrentDelayMs;
            }

            var bytes = result.googCurrentDelayMs - getStatsResult.internal.video.prevGoogCurrentDelayMs;
            getStatsResult.internal.video.prevGoogCurrentDelayMs = result.googCurrentDelayMs;

            getStatsResult.video.latency = bytes.toFixed(1);

            if (getStatsResult.video.latency < 0) {
                getStatsResult.video.latency = 0;
            }
        }

        // calculate packetsLost
        if (!!result.packetsLost) {
            var kilobytes = 0;
            if (!getStatsResult.internal.video.prevPacketsLost) {
                getStatsResult.internal.video.prevPacketsLost = result.packetsLost;
            }

            var bytes = result.packetsLost - getStatsResult.internal.video.prevPacketsLost;
            getStatsResult.internal.video.prevPacketsLost = result.packetsLost;

            getStatsResult.video.packetsLost = bytes.toFixed(1);

            if (getStatsResult.video.packetsLost < 0) {
                getStatsResult.video.packetsLost = 0;
            }
        }
    };

    getStatsParser.bweforvideo = function(result) {
        if (result.type !== 'VideoBwe') return;

        getStatsResult.bandwidth.availableSendBandwidth = result.googAvailableSendBandwidth;

        getStatsResult.bandwidth.googActualEncBitrate = result.googActualEncBitrate;
        getStatsResult.bandwidth.googAvailableSendBandwidth = result.googAvailableSendBandwidth;
        getStatsResult.bandwidth.googAvailableReceiveBandwidth = result.googAvailableReceiveBandwidth;
        getStatsResult.bandwidth.googRetransmitBitrate = result.googRetransmitBitrate;
        getStatsResult.bandwidth.googTargetEncBitrate = result.googTargetEncBitrate;
        getStatsResult.bandwidth.googBucketDelay = result.googBucketDelay;
        getStatsResult.bandwidth.googTransmitBitrate = result.googTransmitBitrate;
    };

    getStatsParser.candidatePair = function(result) {
        if (result.type !== 'googCandidatePair' && result.type !== 'candidate-pair' && result.type !== 'local-candidate' && result.type !== 'remote-candidate') return;

        // result.googActiveConnection means either STUN or TURN is used.

        if (result.googActiveConnection == 'true') {
            // id === 'Conn-audio-1-0'
            // localCandidateId, remoteCandidateId

            // bytesSent, bytesReceived

            Object.keys(getStatsResult.internal.candidates).forEach(function(cid) {
                var candidate = getStatsResult.internal.candidates[cid];
                if (candidate.ipAddress.indexOf(result.googLocalAddress) !== -1) {
                    getStatsResult.connectionType.local.candidateType = candidate.candidateType;
                    getStatsResult.connectionType.local.ipAddress = candidate.ipAddress;
                    getStatsResult.connectionType.local.networkType = candidate.networkType;
                    getStatsResult.connectionType.local.transport = candidate.transport;
                }
                if (candidate.ipAddress.indexOf(result.googRemoteAddress) !== -1) {
                    getStatsResult.connectionType.remote.candidateType = candidate.candidateType;
                    getStatsResult.connectionType.remote.ipAddress = candidate.ipAddress;
                    getStatsResult.connectionType.remote.networkType = candidate.networkType;
                    getStatsResult.connectionType.remote.transport = candidate.transport;
                }
            });

            getStatsResult.connectionType.transport = result.googTransportType;

            var localCandidate = getStatsResult.internal.candidates[result.localCandidateId];
            if (localCandidate) {
                if (localCandidate.ipAddress) {
                    getStatsResult.connectionType.systemIpAddress = localCandidate.ipAddress;
                }
            }

            var remoteCandidate = getStatsResult.internal.candidates[result.remoteCandidateId];
            if (remoteCandidate) {
                if (remoteCandidate.ipAddress) {
                    getStatsResult.connectionType.systemIpAddress = remoteCandidate.ipAddress;
                }
            }
        }

        if (result.type === 'candidate-pair') {
            if (result.selected === true && result.nominated === true && result.state === 'succeeded') {
                // remoteCandidateId, localCandidateId, componentId
                var localCandidate = getStatsResult.internal.candidates[result.remoteCandidateId];
                var remoteCandidate = getStatsResult.internal.candidates[result.remoteCandidateId];

                // Firefox used above two pairs for connection
            }
        }

        if (result.type === 'local-candidate') {
            getStatsResult.connectionType.local.candidateType = result.candidateType;
            getStatsResult.connectionType.local.ipAddress = result.ipAddress;
            getStatsResult.connectionType.local.networkType = result.networkType;
            getStatsResult.connectionType.local.transport = result.mozLocalTransport || result.transport;
        }

        if (result.type === 'remote-candidate') {
            getStatsResult.connectionType.remote.candidateType = result.candidateType;
            getStatsResult.connectionType.remote.ipAddress = result.ipAddress;
            getStatsResult.connectionType.remote.networkType = result.networkType;
            getStatsResult.connectionType.remote.transport = result.mozRemoteTransport || result.transport;
        }

        if (isSafari) {
            // result.remoteCandidateId
            // todo: below line will always force "send" on Safari; find a solution
            var sendrecvType = result.localCandidateId ? 'send' : 'recv';

            if (!sendrecvType) return;

            if (!!result.bytesSent) {
                var kilobytes = 0;
                if (!getStatsResult.internal.video[sendrecvType].prevBytesSent) {
                    getStatsResult.internal.video[sendrecvType].prevBytesSent = result.bytesSent;
                }

                var bytes = result.bytesSent - getStatsResult.internal.video[sendrecvType].prevBytesSent;
                getStatsResult.internal.video[sendrecvType].prevBytesSent = result.bytesSent;

                kilobytes = bytes / 1024;

                getStatsResult.video[sendrecvType].availableBandwidth = kilobytes.toFixed(1);
                getStatsResult.video.bytesSent = kilobytes.toFixed(1);
            }

            if (!!result.bytesReceived) {
                var kilobytes = 0;
                if (!getStatsResult.internal.video[sendrecvType].prevBytesReceived) {
                    getStatsResult.internal.video[sendrecvType].prevBytesReceived = result.bytesReceived;
                }

                var bytes = result.bytesReceived - getStatsResult.internal.video[sendrecvType].prevBytesReceived;
                getStatsResult.internal.video[sendrecvType].prevBytesReceived = result.bytesReceived;

                kilobytes = bytes / 1024;
                // getStatsResult.video[sendrecvType].availableBandwidth = kilobytes.toFixed(1);
                getStatsResult.video.bytesReceived = kilobytes.toFixed(1);
            }

            if (!!result.availableOutgoingBitrate) {
                var kilobytes = 0;
                if (!getStatsResult.internal.video[sendrecvType].prevAvailableOutgoingBitrate) {
                    getStatsResult.internal.video[sendrecvType].prevAvailableOutgoingBitrate = result.availableOutgoingBitrate;
                }

                var bytes = result.availableOutgoingBitrate - getStatsResult.internal.video[sendrecvType].prevAvailableOutgoingBitrate;
                getStatsResult.internal.video[sendrecvType].prevAvailableOutgoingBitrate = result.availableOutgoingBitrate;

                kilobytes = bytes / 1024;
                // getStatsResult.video[sendrecvType].availableBandwidth = kilobytes.toFixed(1);
                getStatsResult.video.availableOutgoingBitrate = kilobytes.toFixed(1);
            }

            if (!!result.availableIncomingBitrate) {
                var kilobytes = 0;
                if (!getStatsResult.internal.video[sendrecvType].prevAvailableIncomingBitrate) {
                    getStatsResult.internal.video[sendrecvType].prevAvailableIncomingBitrate = result.availableIncomingBitrate;
                }

                var bytes = result.availableIncomingBitrate - getStatsResult.internal.video[sendrecvType].prevAvailableIncomingBitrate;
                getStatsResult.internal.video[sendrecvType].prevAvailableIncomingBitrate = result.availableIncomingBitrate;

                kilobytes = bytes / 1024;
                // getStatsResult.video[sendrecvType].availableBandwidth = kilobytes.toFixed(1);
                getStatsResult.video.availableIncomingBitrate = kilobytes.toFixed(1);
            }
        }
    };

    var LOCAL_candidateType = {};
    var LOCAL_transport = {};
    var LOCAL_ipAddress = {};
    var LOCAL_networkType = {};

    getStatsParser.localcandidate = function(result) {
        if (result.type !== 'localcandidate' && result.type !== 'local-candidate') return;
        if (!result.id) return;

        if (!LOCAL_candidateType[result.id]) {
            LOCAL_candidateType[result.id] = [];
        }

        if (!LOCAL_transport[result.id]) {
            LOCAL_transport[result.id] = [];
        }

        if (!LOCAL_ipAddress[result.id]) {
            LOCAL_ipAddress[result.id] = [];
        }

        if (!LOCAL_networkType[result.id]) {
            LOCAL_networkType[result.id] = [];
        }

        if (result.candidateType && LOCAL_candidateType[result.id].indexOf(result.candidateType) === -1) {
            LOCAL_candidateType[result.id].push(result.candidateType);
        }

        if (result.transport && LOCAL_transport[result.id].indexOf(result.transport) === -1) {
            LOCAL_transport[result.id].push(result.transport);
        }

        if (result.ipAddress && LOCAL_ipAddress[result.id].indexOf(result.ipAddress + ':' + result.portNumber) === -1) {
            LOCAL_ipAddress[result.id].push(result.ipAddress + ':' + result.portNumber);
        }

        if (result.networkType && LOCAL_networkType[result.id].indexOf(result.networkType) === -1) {
            LOCAL_networkType[result.id].push(result.networkType);
        }

        getStatsResult.internal.candidates[result.id] = {
            candidateType: LOCAL_candidateType[result.id],
            ipAddress: LOCAL_ipAddress[result.id],
            portNumber: result.portNumber,
            networkType: LOCAL_networkType[result.id],
            priority: result.priority,
            transport: LOCAL_transport[result.id],
            timestamp: result.timestamp,
            id: result.id,
            type: result.type
        };

        getStatsResult.connectionType.local.candidateType = LOCAL_candidateType[result.id];
        getStatsResult.connectionType.local.ipAddress = LOCAL_ipAddress[result.id];
        getStatsResult.connectionType.local.networkType = LOCAL_networkType[result.id];
        getStatsResult.connectionType.local.transport = LOCAL_transport[result.id];
    };

    var REMOTE_candidateType = {};
    var REMOTE_transport = {};
    var REMOTE_ipAddress = {};
    var REMOTE_networkType = {};

    getStatsParser.remotecandidate = function(result) {
        if (result.type !== 'remotecandidate' && result.type !== 'remote-candidate') return;
        if (!result.id) return;

        if (!REMOTE_candidateType[result.id]) {
            REMOTE_candidateType[result.id] = [];
        }

        if (!REMOTE_transport[result.id]) {
            REMOTE_transport[result.id] = [];
        }

        if (!REMOTE_ipAddress[result.id]) {
            REMOTE_ipAddress[result.id] = [];
        }

        if (!REMOTE_networkType[result.id]) {
            REMOTE_networkType[result.id] = [];
        }

        if (result.candidateType && REMOTE_candidateType[result.id].indexOf(result.candidateType) === -1) {
            REMOTE_candidateType[result.id].push(result.candidateType);
        }

        if (result.transport && REMOTE_transport[result.id].indexOf(result.transport) === -1) {
            REMOTE_transport[result.id].push(result.transport);
        }

        if (result.ipAddress && REMOTE_ipAddress[result.id].indexOf(result.ipAddress + ':' + result.portNumber) === -1) {
            REMOTE_ipAddress[result.id].push(result.ipAddress + ':' + result.portNumber);
        }

        if (result.networkType && REMOTE_networkType[result.id].indexOf(result.networkType) === -1) {
            REMOTE_networkType[result.id].push(result.networkType);
        }

        getStatsResult.internal.candidates[result.id] = {
            candidateType: REMOTE_candidateType[result.id],
            ipAddress: REMOTE_ipAddress[result.id],
            portNumber: result.portNumber,
            networkType: REMOTE_networkType[result.id],
            priority: result.priority,
            transport: REMOTE_transport[result.id],
            timestamp: result.timestamp,
            id: result.id,
            type: result.type
        };

        getStatsResult.connectionType.remote.candidateType = REMOTE_candidateType[result.id];
        getStatsResult.connectionType.remote.ipAddress = REMOTE_ipAddress[result.id];
        getStatsResult.connectionType.remote.networkType = REMOTE_networkType[result.id];
        getStatsResult.connectionType.remote.transport = REMOTE_transport[result.id];
    };

    getStatsParser.dataSentReceived = function(result) {
        if (!result.googCodecName || (result.mediaType !== 'video' && result.mediaType !== 'audio')) return;

        if (!!result.bytesSent) {
            getStatsResult[result.mediaType].bytesSent = parseInt(result.bytesSent);
        }

        if (!!result.bytesReceived) {
            getStatsResult[result.mediaType].bytesReceived = parseInt(result.bytesReceived);
        }
    };

    getStatsParser.inboundrtp = function(result) {
        if (!isSafari) return;
        if (result.type !== 'inbound-rtp') return;

        var mediaType = result.mediaType || 'audio';
        var sendrecvType = result.isRemote ? 'recv' : 'send';

        if (!sendrecvType) return;

        if (!!result.bytesSent) {
            var kilobytes = 0;
            if (!getStatsResult.internal[mediaType][sendrecvType].prevBytesSent) {
                getStatsResult.internal[mediaType][sendrecvType].prevBytesSent = result.bytesSent;
            }

            var bytes = result.bytesSent - getStatsResult.internal[mediaType][sendrecvType].prevBytesSent;
            getStatsResult.internal[mediaType][sendrecvType].prevBytesSent = result.bytesSent;

            kilobytes = bytes / 1024;

            getStatsResult[mediaType][sendrecvType].availableBandwidth = kilobytes.toFixed(1);
            getStatsResult[mediaType].bytesSent = kilobytes.toFixed(1);
        }

        if (!!result.bytesReceived) {
            var kilobytes = 0;
            if (!getStatsResult.internal[mediaType][sendrecvType].prevBytesReceived) {
                getStatsResult.internal[mediaType][sendrecvType].prevBytesReceived = result.bytesReceived;
            }

            var bytes = result.bytesReceived - getStatsResult.internal[mediaType][sendrecvType].prevBytesReceived;
            getStatsResult.internal[mediaType][sendrecvType].prevBytesReceived = result.bytesReceived;

            kilobytes = bytes / 1024;
            // getStatsResult[mediaType][sendrecvType].availableBandwidth = kilobytes.toFixed(1);
            getStatsResult[mediaType].bytesReceived = kilobytes.toFixed(1);
        }
    };

    getStatsParser.outboundrtp = function(result) {
        if (!isSafari) return;
        if (result.type !== 'outbound-rtp') return;

        var mediaType = result.mediaType || 'audio';
        var sendrecvType = result.isRemote ? 'recv' : 'send';

        if (!sendrecvType) return;

        if (!!result.bytesSent) {
            var kilobytes = 0;
            if (!getStatsResult.internal[mediaType][sendrecvType].prevBytesSent) {
                getStatsResult.internal[mediaType][sendrecvType].prevBytesSent = result.bytesSent;
            }

            var bytes = result.bytesSent - getStatsResult.internal[mediaType][sendrecvType].prevBytesSent;
            getStatsResult.internal[mediaType][sendrecvType].prevBytesSent = result.bytesSent;

            kilobytes = bytes / 1024;

            getStatsResult[mediaType][sendrecvType].availableBandwidth = kilobytes.toFixed(1);
            getStatsResult[mediaType].bytesSent = kilobytes.toFixed(1);
        }

        if (!!result.bytesReceived) {
            var kilobytes = 0;
            if (!getStatsResult.internal[mediaType][sendrecvType].prevBytesReceived) {
                getStatsResult.internal[mediaType][sendrecvType].prevBytesReceived = result.bytesReceived;
            }

            var bytes = result.bytesReceived - getStatsResult.internal[mediaType][sendrecvType].prevBytesReceived;
            getStatsResult.internal[mediaType][sendrecvType].prevBytesReceived = result.bytesReceived;

            kilobytes = bytes / 1024;
            // getStatsResult[mediaType][sendrecvType].availableBandwidth = kilobytes.toFixed(1);
            getStatsResult[mediaType].bytesReceived = kilobytes.toFixed(1);
        }
    };

    getStatsParser.track = function(result) {
        if (!isSafari) return;
        if (result.type !== 'track') return;

        var sendrecvType = result.remoteSource === true ? 'send' : 'recv';

        if (result.frameWidth && result.frameHeight) {
            getStatsResult.resolutions[sendrecvType].width = result.frameWidth;
            getStatsResult.resolutions[sendrecvType].height = result.frameHeight;
        }

        // framesSent, framesReceived
    };

    var SSRC = {
        audio: {
            send: [],
            recv: []
        },
        video: {
            send: [],
            recv: []
        }
    };

    getStatsParser.ssrc = function(result) {
        if (!result.googCodecName || (result.mediaType !== 'video' && result.mediaType !== 'audio')) return;
        if (result.type !== 'ssrc') return;
        var sendrecvType = result.id.split('_').pop();

        if (SSRC[result.mediaType][sendrecvType].indexOf(result.ssrc) === -1) {
            SSRC[result.mediaType][sendrecvType].push(result.ssrc)
        }

        getStatsResult[result.mediaType][sendrecvType].streams = SSRC[result.mediaType][sendrecvType].length;
    };

    getStatsLooper();

};

if (true /* && !!module.exports*/ ) {
    module.exports = getStats;
}

if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
        return getStats;
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/has-binary2/index.js":
/*!*******************************************!*\
  !*** ./node_modules/has-binary2/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {/* global Blob File */

/*
 * Module requirements.
 */

var isArray = __webpack_require__(/*! isarray */ "./node_modules/has-binary2/node_modules/isarray/index.js");

var toString = Object.prototype.toString;
var withNativeBlob = typeof Blob === 'function' ||
                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';
var withNativeFile = typeof File === 'function' ||
                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';

/**
 * Module exports.
 */

module.exports = hasBinary;

/**
 * Checks for binary data.
 *
 * Supports Buffer, ArrayBuffer, Blob and File.
 *
 * @param {Object} anything
 * @api public
 */

function hasBinary (obj) {
  if (!obj || typeof obj !== 'object') {
    return false;
  }

  if (isArray(obj)) {
    for (var i = 0, l = obj.length; i < l; i++) {
      if (hasBinary(obj[i])) {
        return true;
      }
    }
    return false;
  }

  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||
    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||
    (withNativeBlob && obj instanceof Blob) ||
    (withNativeFile && obj instanceof File)
  ) {
    return true;
  }

  // see: https://github.com/Automattic/has-binary/pull/4
  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {
    return hasBinary(obj.toJSON(), true);
  }

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
      return true;
    }
  }

  return false;
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/has-binary2/node_modules/isarray/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/has-binary2/node_modules/isarray/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/has-cors/index.js":
/*!****************************************!*\
  !*** ./node_modules/has-cors/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * Module exports.
 *
 * Logic borrowed from Modernizr:
 *
 *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js
 */

try {
  module.exports = typeof XMLHttpRequest !== 'undefined' &&
    'withCredentials' in new XMLHttpRequest();
} catch (err) {
  // if XMLHttp support is disabled in IE then it will throw
  // when trying to create
  module.exports = false;
}


/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/indexof/index.js":
/*!***************************************!*\
  !*** ./node_modules/indexof/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {


var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}


/***/ }),

/***/ "./node_modules/parseqs/index.js":
/*!***************************************!*\
  !*** ./node_modules/parseqs/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Compiles a querystring
 * Returns string representation of the object
 *
 * @param {Object}
 * @api private
 */

exports.encode = function (obj) {
  var str = '';

  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      if (str.length) str += '&';
      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
    }
  }

  return str;
};

/**
 * Parses a simple querystring into an object
 *
 * @param {String} qs
 * @api private
 */

exports.decode = function(qs){
  var qry = {};
  var pairs = qs.split('&');
  for (var i = 0, l = pairs.length; i < l; i++) {
    var pair = pairs[i].split('=');
    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
  }
  return qry;
};


/***/ }),

/***/ "./node_modules/parseuri/index.js":
/*!****************************************!*\
  !*** ./node_modules/parseuri/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Parses an URI
 *
 * @author Steven Levithan <stevenlevithan.com> (MIT license)
 * @api private
 */

var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;

var parts = [
    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'
];

module.exports = function parseuri(str) {
    var src = str,
        b = str.indexOf('['),
        e = str.indexOf(']');

    if (b != -1 && e != -1) {
        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
    }

    var m = re.exec(str || ''),
        uri = {},
        i = 14;

    while (i--) {
        uri[parts[i]] = m[i] || '';
    }

    if (b != -1 && e != -1) {
        uri.source = src;
        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
        uri.ipv6uri = true;
    }

    return uri;
};


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js":
/*!******************************************************************!*\
  !*** ./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
 /* eslint-env node */


var SDPUtils = __webpack_require__(/*! sdp */ "./node_modules/sdp/sdp.js");

function fixStatsType(stat) {
  return {
    inboundrtp: 'inbound-rtp',
    outboundrtp: 'outbound-rtp',
    candidatepair: 'candidate-pair',
    localcandidate: 'local-candidate',
    remotecandidate: 'remote-candidate'
  }[stat.type] || stat.type;
}

function writeMediaSection(transceiver, caps, type, stream, dtlsRole) {
  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);

  // Map ICE parameters (ufrag, pwd) to SDP.
  sdp += SDPUtils.writeIceParameters(
      transceiver.iceGatherer.getLocalParameters());

  // Map DTLS parameters to SDP.
  sdp += SDPUtils.writeDtlsParameters(
      transceiver.dtlsTransport.getLocalParameters(),
      type === 'offer' ? 'actpass' : dtlsRole || 'active');

  sdp += 'a=mid:' + transceiver.mid + '\r\n';

  if (transceiver.rtpSender && transceiver.rtpReceiver) {
    sdp += 'a=sendrecv\r\n';
  } else if (transceiver.rtpSender) {
    sdp += 'a=sendonly\r\n';
  } else if (transceiver.rtpReceiver) {
    sdp += 'a=recvonly\r\n';
  } else {
    sdp += 'a=inactive\r\n';
  }

  if (transceiver.rtpSender) {
    var trackId = transceiver.rtpSender._initialTrackId ||
        transceiver.rtpSender.track.id;
    transceiver.rtpSender._initialTrackId = trackId;
    // spec.
    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +
        trackId + '\r\n';
    sdp += 'a=' + msid;
    // for Chrome. Legacy should no longer be required.
    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +
        ' ' + msid;

    // RTX
    if (transceiver.sendEncodingParameters[0].rtx) {
      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +
          ' ' + msid;
      sdp += 'a=ssrc-group:FID ' +
          transceiver.sendEncodingParameters[0].ssrc + ' ' +
          transceiver.sendEncodingParameters[0].rtx.ssrc +
          '\r\n';
    }
  }
  // FIXME: this should be written by writeRtpDescription.
  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +
      ' cname:' + SDPUtils.localCName + '\r\n';
  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {
    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +
        ' cname:' + SDPUtils.localCName + '\r\n';
  }
  return sdp;
}

// Edge does not like
// 1) stun: filtered after 14393 unless ?transport=udp is present
// 2) turn: that does not have all of turn:host:port?transport=udp
// 3) turn: with ipv6 addresses
// 4) turn: occurring muliple times
function filterIceServers(iceServers, edgeVersion) {
  var hasTurn = false;
  iceServers = JSON.parse(JSON.stringify(iceServers));
  return iceServers.filter(function(server) {
    if (server && (server.urls || server.url)) {
      var urls = server.urls || server.url;
      if (server.url && !server.urls) {
        console.warn('RTCIceServer.url is deprecated! Use urls instead.');
      }
      var isString = typeof urls === 'string';
      if (isString) {
        urls = [urls];
      }
      urls = urls.filter(function(url) {
        var validTurn = url.indexOf('turn:') === 0 &&
            url.indexOf('transport=udp') !== -1 &&
            url.indexOf('turn:[') === -1 &&
            !hasTurn;

        if (validTurn) {
          hasTurn = true;
          return true;
        }
        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&
            url.indexOf('?transport=udp') === -1;
      });

      delete server.url;
      server.urls = isString ? urls[0] : urls;
      return !!urls.length;
    }
  });
}

// Determines the intersection of local and remote capabilities.
function getCommonCapabilities(localCapabilities, remoteCapabilities) {
  var commonCapabilities = {
    codecs: [],
    headerExtensions: [],
    fecMechanisms: []
  };

  var findCodecByPayloadType = function(pt, codecs) {
    pt = parseInt(pt, 10);
    for (var i = 0; i < codecs.length; i++) {
      if (codecs[i].payloadType === pt ||
          codecs[i].preferredPayloadType === pt) {
        return codecs[i];
      }
    }
  };

  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {
    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);
    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);
    return lCodec && rCodec &&
        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();
  };

  localCapabilities.codecs.forEach(function(lCodec) {
    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {
      var rCodec = remoteCapabilities.codecs[i];
      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&
          lCodec.clockRate === rCodec.clockRate) {
        if (lCodec.name.toLowerCase() === 'rtx' &&
            lCodec.parameters && rCodec.parameters.apt) {
          // for RTX we need to find the local rtx that has a apt
          // which points to the same local codec as the remote one.
          if (!rtxCapabilityMatches(lCodec, rCodec,
              localCapabilities.codecs, remoteCapabilities.codecs)) {
            continue;
          }
        }
        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy
        // number of channels is the highest common number of channels
        rCodec.numChannels = Math.min(lCodec.numChannels,
            rCodec.numChannels);
        // push rCodec so we reply with offerer payload type
        commonCapabilities.codecs.push(rCodec);

        // determine common feedback mechanisms
        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {
          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {
            if (lCodec.rtcpFeedback[j].type === fb.type &&
                lCodec.rtcpFeedback[j].parameter === fb.parameter) {
              return true;
            }
          }
          return false;
        });
        // FIXME: also need to determine .parameters
        //  see https://github.com/openpeer/ortc/issues/569
        break;
      }
    }
  });

  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {
    for (var i = 0; i < remoteCapabilities.headerExtensions.length;
         i++) {
      var rHeaderExtension = remoteCapabilities.headerExtensions[i];
      if (lHeaderExtension.uri === rHeaderExtension.uri) {
        commonCapabilities.headerExtensions.push(rHeaderExtension);
        break;
      }
    }
  });

  // FIXME: fecMechanisms
  return commonCapabilities;
}

// is action=setLocalDescription with type allowed in signalingState
function isActionAllowedInSignalingState(action, type, signalingState) {
  return {
    offer: {
      setLocalDescription: ['stable', 'have-local-offer'],
      setRemoteDescription: ['stable', 'have-remote-offer']
    },
    answer: {
      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],
      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']
    }
  }[type][action].indexOf(signalingState) !== -1;
}

function maybeAddCandidate(iceTransport, candidate) {
  // Edge's internal representation adds some fields therefore
  // not all fieldѕ are taken into account.
  var alreadyAdded = iceTransport.getRemoteCandidates()
      .find(function(remoteCandidate) {
        return candidate.foundation === remoteCandidate.foundation &&
            candidate.ip === remoteCandidate.ip &&
            candidate.port === remoteCandidate.port &&
            candidate.priority === remoteCandidate.priority &&
            candidate.protocol === remoteCandidate.protocol &&
            candidate.type === remoteCandidate.type;
      });
  if (!alreadyAdded) {
    iceTransport.addRemoteCandidate(candidate);
  }
  return !alreadyAdded;
}


function makeError(name, description) {
  var e = new Error(description);
  e.name = name;
  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names
  e.code = {
    NotSupportedError: 9,
    InvalidStateError: 11,
    InvalidAccessError: 15,
    TypeError: undefined,
    OperationError: undefined
  }[name];
  return e;
}

module.exports = function(window, edgeVersion) {
  // https://w3c.github.io/mediacapture-main/#mediastream
  // Helper function to add the track to the stream and
  // dispatch the event ourselves.
  function addTrackToStreamAndFireEvent(track, stream) {
    stream.addTrack(track);
    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',
        {track: track}));
  }

  function removeTrackFromStreamAndFireEvent(track, stream) {
    stream.removeTrack(track);
    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',
        {track: track}));
  }

  function fireAddTrack(pc, track, receiver, streams) {
    var trackEvent = new Event('track');
    trackEvent.track = track;
    trackEvent.receiver = receiver;
    trackEvent.transceiver = {receiver: receiver};
    trackEvent.streams = streams;
    window.setTimeout(function() {
      pc._dispatchEvent('track', trackEvent);
    });
  }

  var RTCPeerConnection = function(config) {
    var pc = this;

    var _eventTarget = document.createDocumentFragment();
    ['addEventListener', 'removeEventListener', 'dispatchEvent']
        .forEach(function(method) {
          pc[method] = _eventTarget[method].bind(_eventTarget);
        });

    this.canTrickleIceCandidates = null;

    this.needNegotiation = false;

    this.localStreams = [];
    this.remoteStreams = [];

    this._localDescription = null;
    this._remoteDescription = null;

    this.signalingState = 'stable';
    this.iceConnectionState = 'new';
    this.connectionState = 'new';
    this.iceGatheringState = 'new';

    config = JSON.parse(JSON.stringify(config || {}));

    this.usingBundle = config.bundlePolicy === 'max-bundle';
    if (config.rtcpMuxPolicy === 'negotiate') {
      throw(makeError('NotSupportedError',
          'rtcpMuxPolicy \'negotiate\' is not supported'));
    } else if (!config.rtcpMuxPolicy) {
      config.rtcpMuxPolicy = 'require';
    }

    switch (config.iceTransportPolicy) {
      case 'all':
      case 'relay':
        break;
      default:
        config.iceTransportPolicy = 'all';
        break;
    }

    switch (config.bundlePolicy) {
      case 'balanced':
      case 'max-compat':
      case 'max-bundle':
        break;
      default:
        config.bundlePolicy = 'balanced';
        break;
    }

    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);

    this._iceGatherers = [];
    if (config.iceCandidatePoolSize) {
      for (var i = config.iceCandidatePoolSize; i > 0; i--) {
        this._iceGatherers.push(new window.RTCIceGatherer({
          iceServers: config.iceServers,
          gatherPolicy: config.iceTransportPolicy
        }));
      }
    } else {
      config.iceCandidatePoolSize = 0;
    }

    this._config = config;

    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...
    // everything that is needed to describe a SDP m-line.
    this.transceivers = [];

    this._sdpSessionId = SDPUtils.generateSessionId();
    this._sdpSessionVersion = 0;

    this._dtlsRole = undefined; // role for a=setup to use in answers.

    this._isClosed = false;
  };

  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {
    configurable: true,
    get: function() {
      return this._localDescription;
    }
  });
  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {
    configurable: true,
    get: function() {
      return this._remoteDescription;
    }
  });

  // set up event handlers on prototype
  RTCPeerConnection.prototype.onicecandidate = null;
  RTCPeerConnection.prototype.onaddstream = null;
  RTCPeerConnection.prototype.ontrack = null;
  RTCPeerConnection.prototype.onremovestream = null;
  RTCPeerConnection.prototype.onsignalingstatechange = null;
  RTCPeerConnection.prototype.oniceconnectionstatechange = null;
  RTCPeerConnection.prototype.onconnectionstatechange = null;
  RTCPeerConnection.prototype.onicegatheringstatechange = null;
  RTCPeerConnection.prototype.onnegotiationneeded = null;
  RTCPeerConnection.prototype.ondatachannel = null;

  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {
    if (this._isClosed) {
      return;
    }
    this.dispatchEvent(event);
    if (typeof this['on' + name] === 'function') {
      this['on' + name](event);
    }
  };

  RTCPeerConnection.prototype._emitGatheringStateChange = function() {
    var event = new Event('icegatheringstatechange');
    this._dispatchEvent('icegatheringstatechange', event);
  };

  RTCPeerConnection.prototype.getConfiguration = function() {
    return this._config;
  };

  RTCPeerConnection.prototype.getLocalStreams = function() {
    return this.localStreams;
  };

  RTCPeerConnection.prototype.getRemoteStreams = function() {
    return this.remoteStreams;
  };

  // internal helper to create a transceiver object.
  // (which is not yet the same as the WebRTC 1.0 transceiver)
  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {
    var hasBundleTransport = this.transceivers.length > 0;
    var transceiver = {
      track: null,
      iceGatherer: null,
      iceTransport: null,
      dtlsTransport: null,
      localCapabilities: null,
      remoteCapabilities: null,
      rtpSender: null,
      rtpReceiver: null,
      kind: kind,
      mid: null,
      sendEncodingParameters: null,
      recvEncodingParameters: null,
      stream: null,
      associatedRemoteMediaStreams: [],
      wantReceive: true
    };
    if (this.usingBundle && hasBundleTransport) {
      transceiver.iceTransport = this.transceivers[0].iceTransport;
      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;
    } else {
      var transports = this._createIceAndDtlsTransports();
      transceiver.iceTransport = transports.iceTransport;
      transceiver.dtlsTransport = transports.dtlsTransport;
    }
    if (!doNotAdd) {
      this.transceivers.push(transceiver);
    }
    return transceiver;
  };

  RTCPeerConnection.prototype.addTrack = function(track, stream) {
    if (this._isClosed) {
      throw makeError('InvalidStateError',
          'Attempted to call addTrack on a closed peerconnection.');
    }

    var alreadyExists = this.transceivers.find(function(s) {
      return s.track === track;
    });

    if (alreadyExists) {
      throw makeError('InvalidAccessError', 'Track already exists.');
    }

    var transceiver;
    for (var i = 0; i < this.transceivers.length; i++) {
      if (!this.transceivers[i].track &&
          this.transceivers[i].kind === track.kind) {
        transceiver = this.transceivers[i];
      }
    }
    if (!transceiver) {
      transceiver = this._createTransceiver(track.kind);
    }

    this._maybeFireNegotiationNeeded();

    if (this.localStreams.indexOf(stream) === -1) {
      this.localStreams.push(stream);
    }

    transceiver.track = track;
    transceiver.stream = stream;
    transceiver.rtpSender = new window.RTCRtpSender(track,
        transceiver.dtlsTransport);
    return transceiver.rtpSender;
  };

  RTCPeerConnection.prototype.addStream = function(stream) {
    var pc = this;
    if (edgeVersion >= 15025) {
      stream.getTracks().forEach(function(track) {
        pc.addTrack(track, stream);
      });
    } else {
      // Clone is necessary for local demos mostly, attaching directly
      // to two different senders does not work (build 10547).
      // Fixed in 15025 (or earlier)
      var clonedStream = stream.clone();
      stream.getTracks().forEach(function(track, idx) {
        var clonedTrack = clonedStream.getTracks()[idx];
        track.addEventListener('enabled', function(event) {
          clonedTrack.enabled = event.enabled;
        });
      });
      clonedStream.getTracks().forEach(function(track) {
        pc.addTrack(track, clonedStream);
      });
    }
  };

  RTCPeerConnection.prototype.removeTrack = function(sender) {
    if (this._isClosed) {
      throw makeError('InvalidStateError',
          'Attempted to call removeTrack on a closed peerconnection.');
    }

    if (!(sender instanceof window.RTCRtpSender)) {
      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +
          'does not implement interface RTCRtpSender.');
    }

    var transceiver = this.transceivers.find(function(t) {
      return t.rtpSender === sender;
    });

    if (!transceiver) {
      throw makeError('InvalidAccessError',
          'Sender was not created by this connection.');
    }
    var stream = transceiver.stream;

    transceiver.rtpSender.stop();
    transceiver.rtpSender = null;
    transceiver.track = null;
    transceiver.stream = null;

    // remove the stream from the set of local streams
    var localStreams = this.transceivers.map(function(t) {
      return t.stream;
    });
    if (localStreams.indexOf(stream) === -1 &&
        this.localStreams.indexOf(stream) > -1) {
      this.localStreams.splice(this.localStreams.indexOf(stream), 1);
    }

    this._maybeFireNegotiationNeeded();
  };

  RTCPeerConnection.prototype.removeStream = function(stream) {
    var pc = this;
    stream.getTracks().forEach(function(track) {
      var sender = pc.getSenders().find(function(s) {
        return s.track === track;
      });
      if (sender) {
        pc.removeTrack(sender);
      }
    });
  };

  RTCPeerConnection.prototype.getSenders = function() {
    return this.transceivers.filter(function(transceiver) {
      return !!transceiver.rtpSender;
    })
    .map(function(transceiver) {
      return transceiver.rtpSender;
    });
  };

  RTCPeerConnection.prototype.getReceivers = function() {
    return this.transceivers.filter(function(transceiver) {
      return !!transceiver.rtpReceiver;
    })
    .map(function(transceiver) {
      return transceiver.rtpReceiver;
    });
  };


  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,
      usingBundle) {
    var pc = this;
    if (usingBundle && sdpMLineIndex > 0) {
      return this.transceivers[0].iceGatherer;
    } else if (this._iceGatherers.length) {
      return this._iceGatherers.shift();
    }
    var iceGatherer = new window.RTCIceGatherer({
      iceServers: this._config.iceServers,
      gatherPolicy: this._config.iceTransportPolicy
    });
    Object.defineProperty(iceGatherer, 'state',
        {value: 'new', writable: true}
    );

    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];
    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {
      var end = !event.candidate || Object.keys(event.candidate).length === 0;
      // polyfill since RTCIceGatherer.state is not implemented in
      // Edge 10547 yet.
      iceGatherer.state = end ? 'completed' : 'gathering';
      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {
        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);
      }
    };
    iceGatherer.addEventListener('localcandidate',
      this.transceivers[sdpMLineIndex].bufferCandidates);
    return iceGatherer;
  };

  // start gathering from an RTCIceGatherer.
  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {
    var pc = this;
    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;
    if (iceGatherer.onlocalcandidate) {
      return;
    }
    var bufferedCandidateEvents =
      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;
    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;
    iceGatherer.removeEventListener('localcandidate',
      this.transceivers[sdpMLineIndex].bufferCandidates);
    iceGatherer.onlocalcandidate = function(evt) {
      if (pc.usingBundle && sdpMLineIndex > 0) {
        // if we know that we use bundle we can drop candidates with
        // ѕdpMLineIndex > 0. If we don't do this then our state gets
        // confused since we dispose the extra ice gatherer.
        return;
      }
      var event = new Event('icecandidate');
      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};

      var cand = evt.candidate;
      // Edge emits an empty object for RTCIceCandidateComplete‥
      var end = !cand || Object.keys(cand).length === 0;
      if (end) {
        // polyfill since RTCIceGatherer.state is not implemented in
        // Edge 10547 yet.
        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {
          iceGatherer.state = 'completed';
        }
      } else {
        if (iceGatherer.state === 'new') {
          iceGatherer.state = 'gathering';
        }
        // RTCIceCandidate doesn't have a component, needs to be added
        cand.component = 1;
        // also the usernameFragment. TODO: update SDP to take both variants.
        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;

        var serializedCandidate = SDPUtils.writeCandidate(cand);
        event.candidate = Object.assign(event.candidate,
            SDPUtils.parseCandidate(serializedCandidate));

        event.candidate.candidate = serializedCandidate;
        event.candidate.toJSON = function() {
          return {
            candidate: event.candidate.candidate,
            sdpMid: event.candidate.sdpMid,
            sdpMLineIndex: event.candidate.sdpMLineIndex,
            usernameFragment: event.candidate.usernameFragment
          };
        };
      }

      // update local description.
      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);
      if (!end) {
        sections[event.candidate.sdpMLineIndex] +=
            'a=' + event.candidate.candidate + '\r\n';
      } else {
        sections[event.candidate.sdpMLineIndex] +=
            'a=end-of-candidates\r\n';
      }
      pc._localDescription.sdp =
          SDPUtils.getDescription(pc._localDescription.sdp) +
          sections.join('');
      var complete = pc.transceivers.every(function(transceiver) {
        return transceiver.iceGatherer &&
            transceiver.iceGatherer.state === 'completed';
      });

      if (pc.iceGatheringState !== 'gathering') {
        pc.iceGatheringState = 'gathering';
        pc._emitGatheringStateChange();
      }

      // Emit candidate. Also emit null candidate when all gatherers are
      // complete.
      if (!end) {
        pc._dispatchEvent('icecandidate', event);
      }
      if (complete) {
        pc._dispatchEvent('icecandidate', new Event('icecandidate'));
        pc.iceGatheringState = 'complete';
        pc._emitGatheringStateChange();
      }
    };

    // emit already gathered candidates.
    window.setTimeout(function() {
      bufferedCandidateEvents.forEach(function(e) {
        iceGatherer.onlocalcandidate(e);
      });
    }, 0);
  };

  // Create ICE transport and DTLS transport.
  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {
    var pc = this;
    var iceTransport = new window.RTCIceTransport(null);
    iceTransport.onicestatechange = function() {
      pc._updateIceConnectionState();
      pc._updateConnectionState();
    };

    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);
    dtlsTransport.ondtlsstatechange = function() {
      pc._updateConnectionState();
    };
    dtlsTransport.onerror = function() {
      // onerror does not set state to failed by itself.
      Object.defineProperty(dtlsTransport, 'state',
          {value: 'failed', writable: true});
      pc._updateConnectionState();
    };

    return {
      iceTransport: iceTransport,
      dtlsTransport: dtlsTransport
    };
  };

  // Destroy ICE gatherer, ICE transport and DTLS transport.
  // Without triggering the callbacks.
  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(
      sdpMLineIndex) {
    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;
    if (iceGatherer) {
      delete iceGatherer.onlocalcandidate;
      delete this.transceivers[sdpMLineIndex].iceGatherer;
    }
    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;
    if (iceTransport) {
      delete iceTransport.onicestatechange;
      delete this.transceivers[sdpMLineIndex].iceTransport;
    }
    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;
    if (dtlsTransport) {
      delete dtlsTransport.ondtlsstatechange;
      delete dtlsTransport.onerror;
      delete this.transceivers[sdpMLineIndex].dtlsTransport;
    }
  };

  // Start the RTP Sender and Receiver for a transceiver.
  RTCPeerConnection.prototype._transceive = function(transceiver,
      send, recv) {
    var params = getCommonCapabilities(transceiver.localCapabilities,
        transceiver.remoteCapabilities);
    if (send && transceiver.rtpSender) {
      params.encodings = transceiver.sendEncodingParameters;
      params.rtcp = {
        cname: SDPUtils.localCName,
        compound: transceiver.rtcpParameters.compound
      };
      if (transceiver.recvEncodingParameters.length) {
        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;
      }
      transceiver.rtpSender.send(params);
    }
    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {
      // remove RTX field in Edge 14942
      if (transceiver.kind === 'video'
          && transceiver.recvEncodingParameters
          && edgeVersion < 15019) {
        transceiver.recvEncodingParameters.forEach(function(p) {
          delete p.rtx;
        });
      }
      if (transceiver.recvEncodingParameters.length) {
        params.encodings = transceiver.recvEncodingParameters;
      } else {
        params.encodings = [{}];
      }
      params.rtcp = {
        compound: transceiver.rtcpParameters.compound
      };
      if (transceiver.rtcpParameters.cname) {
        params.rtcp.cname = transceiver.rtcpParameters.cname;
      }
      if (transceiver.sendEncodingParameters.length) {
        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;
      }
      transceiver.rtpReceiver.receive(params);
    }
  };

  RTCPeerConnection.prototype.setLocalDescription = function(description) {
    var pc = this;

    // Note: pranswer is not supported.
    if (['offer', 'answer'].indexOf(description.type) === -1) {
      return Promise.reject(makeError('TypeError',
          'Unsupported type "' + description.type + '"'));
    }

    if (!isActionAllowedInSignalingState('setLocalDescription',
        description.type, pc.signalingState) || pc._isClosed) {
      return Promise.reject(makeError('InvalidStateError',
          'Can not set local ' + description.type +
          ' in state ' + pc.signalingState));
    }

    var sections;
    var sessionpart;
    if (description.type === 'offer') {
      // VERY limited support for SDP munging. Limited to:
      // * changing the order of codecs
      sections = SDPUtils.splitSections(description.sdp);
      sessionpart = sections.shift();
      sections.forEach(function(mediaSection, sdpMLineIndex) {
        var caps = SDPUtils.parseRtpParameters(mediaSection);
        pc.transceivers[sdpMLineIndex].localCapabilities = caps;
      });

      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {
        pc._gather(transceiver.mid, sdpMLineIndex);
      });
    } else if (description.type === 'answer') {
      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);
      sessionpart = sections.shift();
      var isIceLite = SDPUtils.matchPrefix(sessionpart,
          'a=ice-lite').length > 0;
      sections.forEach(function(mediaSection, sdpMLineIndex) {
        var transceiver = pc.transceivers[sdpMLineIndex];
        var iceGatherer = transceiver.iceGatherer;
        var iceTransport = transceiver.iceTransport;
        var dtlsTransport = transceiver.dtlsTransport;
        var localCapabilities = transceiver.localCapabilities;
        var remoteCapabilities = transceiver.remoteCapabilities;

        // treat bundle-only as not-rejected.
        var rejected = SDPUtils.isRejected(mediaSection) &&
            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;

        if (!rejected && !transceiver.rejected) {
          var remoteIceParameters = SDPUtils.getIceParameters(
              mediaSection, sessionpart);
          var remoteDtlsParameters = SDPUtils.getDtlsParameters(
              mediaSection, sessionpart);
          if (isIceLite) {
            remoteDtlsParameters.role = 'server';
          }

          if (!pc.usingBundle || sdpMLineIndex === 0) {
            pc._gather(transceiver.mid, sdpMLineIndex);
            if (iceTransport.state === 'new') {
              iceTransport.start(iceGatherer, remoteIceParameters,
                  isIceLite ? 'controlling' : 'controlled');
            }
            if (dtlsTransport.state === 'new') {
              dtlsTransport.start(remoteDtlsParameters);
            }
          }

          // Calculate intersection of capabilities.
          var params = getCommonCapabilities(localCapabilities,
              remoteCapabilities);

          // Start the RTCRtpSender. The RTCRtpReceiver for this
          // transceiver has already been started in setRemoteDescription.
          pc._transceive(transceiver,
              params.codecs.length > 0,
              false);
        }
      });
    }

    pc._localDescription = {
      type: description.type,
      sdp: description.sdp
    };
    if (description.type === 'offer') {
      pc._updateSignalingState('have-local-offer');
    } else {
      pc._updateSignalingState('stable');
    }

    return Promise.resolve();
  };

  RTCPeerConnection.prototype.setRemoteDescription = function(description) {
    var pc = this;

    // Note: pranswer is not supported.
    if (['offer', 'answer'].indexOf(description.type) === -1) {
      return Promise.reject(makeError('TypeError',
          'Unsupported type "' + description.type + '"'));
    }

    if (!isActionAllowedInSignalingState('setRemoteDescription',
        description.type, pc.signalingState) || pc._isClosed) {
      return Promise.reject(makeError('InvalidStateError',
          'Can not set remote ' + description.type +
          ' in state ' + pc.signalingState));
    }

    var streams = {};
    pc.remoteStreams.forEach(function(stream) {
      streams[stream.id] = stream;
    });
    var receiverList = [];
    var sections = SDPUtils.splitSections(description.sdp);
    var sessionpart = sections.shift();
    var isIceLite = SDPUtils.matchPrefix(sessionpart,
        'a=ice-lite').length > 0;
    var usingBundle = SDPUtils.matchPrefix(sessionpart,
        'a=group:BUNDLE ').length > 0;
    pc.usingBundle = usingBundle;
    var iceOptions = SDPUtils.matchPrefix(sessionpart,
        'a=ice-options:')[0];
    if (iceOptions) {
      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')
          .indexOf('trickle') >= 0;
    } else {
      pc.canTrickleIceCandidates = false;
    }

    sections.forEach(function(mediaSection, sdpMLineIndex) {
      var lines = SDPUtils.splitLines(mediaSection);
      var kind = SDPUtils.getKind(mediaSection);
      // treat bundle-only as not-rejected.
      var rejected = SDPUtils.isRejected(mediaSection) &&
          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;
      var protocol = lines[0].substr(2).split(' ')[2];

      var direction = SDPUtils.getDirection(mediaSection, sessionpart);
      var remoteMsid = SDPUtils.parseMsid(mediaSection);

      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();

      // Reject datachannels which are not implemented yet.
      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||
          protocol === 'UDP/DTLS/SCTP'))) {
        // TODO: this is dangerous in the case where a non-rejected m-line
        //     becomes rejected.
        pc.transceivers[sdpMLineIndex] = {
          mid: mid,
          kind: kind,
          protocol: protocol,
          rejected: true
        };
        return;
      }

      if (!rejected && pc.transceivers[sdpMLineIndex] &&
          pc.transceivers[sdpMLineIndex].rejected) {
        // recycle a rejected transceiver.
        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);
      }

      var transceiver;
      var iceGatherer;
      var iceTransport;
      var dtlsTransport;
      var rtpReceiver;
      var sendEncodingParameters;
      var recvEncodingParameters;
      var localCapabilities;

      var track;
      // FIXME: ensure the mediaSection has rtcp-mux set.
      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);
      var remoteIceParameters;
      var remoteDtlsParameters;
      if (!rejected) {
        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,
            sessionpart);
        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,
            sessionpart);
        remoteDtlsParameters.role = 'client';
      }
      recvEncodingParameters =
          SDPUtils.parseRtpEncodingParameters(mediaSection);

      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);

      var isComplete = SDPUtils.matchPrefix(mediaSection,
          'a=end-of-candidates', sessionpart).length > 0;
      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')
          .map(function(cand) {
            return SDPUtils.parseCandidate(cand);
          })
          .filter(function(cand) {
            return cand.component === 1;
          });

      // Check if we can use BUNDLE and dispose transports.
      if ((description.type === 'offer' || description.type === 'answer') &&
          !rejected && usingBundle && sdpMLineIndex > 0 &&
          pc.transceivers[sdpMLineIndex]) {
        pc._disposeIceAndDtlsTransports(sdpMLineIndex);
        pc.transceivers[sdpMLineIndex].iceGatherer =
            pc.transceivers[0].iceGatherer;
        pc.transceivers[sdpMLineIndex].iceTransport =
            pc.transceivers[0].iceTransport;
        pc.transceivers[sdpMLineIndex].dtlsTransport =
            pc.transceivers[0].dtlsTransport;
        if (pc.transceivers[sdpMLineIndex].rtpSender) {
          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(
              pc.transceivers[0].dtlsTransport);
        }
        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {
          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(
              pc.transceivers[0].dtlsTransport);
        }
      }
      if (description.type === 'offer' && !rejected) {
        transceiver = pc.transceivers[sdpMLineIndex] ||
            pc._createTransceiver(kind);
        transceiver.mid = mid;

        if (!transceiver.iceGatherer) {
          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,
              usingBundle);
        }

        if (cands.length && transceiver.iceTransport.state === 'new') {
          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {
            transceiver.iceTransport.setRemoteCandidates(cands);
          } else {
            cands.forEach(function(candidate) {
              maybeAddCandidate(transceiver.iceTransport, candidate);
            });
          }
        }

        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);

        // filter RTX until additional stuff needed for RTX is implemented
        // in adapter.js
        if (edgeVersion < 15019) {
          localCapabilities.codecs = localCapabilities.codecs.filter(
              function(codec) {
                return codec.name !== 'rtx';
              });
        }

        sendEncodingParameters = transceiver.sendEncodingParameters || [{
          ssrc: (2 * sdpMLineIndex + 2) * 1001
        }];

        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams
        var isNewTrack = false;
        if (direction === 'sendrecv' || direction === 'sendonly') {
          isNewTrack = !transceiver.rtpReceiver;
          rtpReceiver = transceiver.rtpReceiver ||
              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);

          if (isNewTrack) {
            var stream;
            track = rtpReceiver.track;
            // FIXME: does not work with Plan B.
            if (remoteMsid && remoteMsid.stream === '-') {
              // no-op. a stream id of '-' means: no associated stream.
            } else if (remoteMsid) {
              if (!streams[remoteMsid.stream]) {
                streams[remoteMsid.stream] = new window.MediaStream();
                Object.defineProperty(streams[remoteMsid.stream], 'id', {
                  get: function() {
                    return remoteMsid.stream;
                  }
                });
              }
              Object.defineProperty(track, 'id', {
                get: function() {
                  return remoteMsid.track;
                }
              });
              stream = streams[remoteMsid.stream];
            } else {
              if (!streams.default) {
                streams.default = new window.MediaStream();
              }
              stream = streams.default;
            }
            if (stream) {
              addTrackToStreamAndFireEvent(track, stream);
              transceiver.associatedRemoteMediaStreams.push(stream);
            }
            receiverList.push([track, rtpReceiver, stream]);
          }
        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {
          transceiver.associatedRemoteMediaStreams.forEach(function(s) {
            var nativeTrack = s.getTracks().find(function(t) {
              return t.id === transceiver.rtpReceiver.track.id;
            });
            if (nativeTrack) {
              removeTrackFromStreamAndFireEvent(nativeTrack, s);
            }
          });
          transceiver.associatedRemoteMediaStreams = [];
        }

        transceiver.localCapabilities = localCapabilities;
        transceiver.remoteCapabilities = remoteCapabilities;
        transceiver.rtpReceiver = rtpReceiver;
        transceiver.rtcpParameters = rtcpParameters;
        transceiver.sendEncodingParameters = sendEncodingParameters;
        transceiver.recvEncodingParameters = recvEncodingParameters;

        // Start the RTCRtpReceiver now. The RTPSender is started in
        // setLocalDescription.
        pc._transceive(pc.transceivers[sdpMLineIndex],
            false,
            isNewTrack);
      } else if (description.type === 'answer' && !rejected) {
        transceiver = pc.transceivers[sdpMLineIndex];
        iceGatherer = transceiver.iceGatherer;
        iceTransport = transceiver.iceTransport;
        dtlsTransport = transceiver.dtlsTransport;
        rtpReceiver = transceiver.rtpReceiver;
        sendEncodingParameters = transceiver.sendEncodingParameters;
        localCapabilities = transceiver.localCapabilities;

        pc.transceivers[sdpMLineIndex].recvEncodingParameters =
            recvEncodingParameters;
        pc.transceivers[sdpMLineIndex].remoteCapabilities =
            remoteCapabilities;
        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;

        if (cands.length && iceTransport.state === 'new') {
          if ((isIceLite || isComplete) &&
              (!usingBundle || sdpMLineIndex === 0)) {
            iceTransport.setRemoteCandidates(cands);
          } else {
            cands.forEach(function(candidate) {
              maybeAddCandidate(transceiver.iceTransport, candidate);
            });
          }
        }

        if (!usingBundle || sdpMLineIndex === 0) {
          if (iceTransport.state === 'new') {
            iceTransport.start(iceGatherer, remoteIceParameters,
                'controlling');
          }
          if (dtlsTransport.state === 'new') {
            dtlsTransport.start(remoteDtlsParameters);
          }
        }

        // If the offer contained RTX but the answer did not,
        // remove RTX from sendEncodingParameters.
        var commonCapabilities = getCommonCapabilities(
          transceiver.localCapabilities,
          transceiver.remoteCapabilities);

        var hasRtx = commonCapabilities.codecs.filter(function(c) {
          return c.name.toLowerCase() === 'rtx';
        }).length;
        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {
          delete transceiver.sendEncodingParameters[0].rtx;
        }

        pc._transceive(transceiver,
            direction === 'sendrecv' || direction === 'recvonly',
            direction === 'sendrecv' || direction === 'sendonly');

        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams
        if (rtpReceiver &&
            (direction === 'sendrecv' || direction === 'sendonly')) {
          track = rtpReceiver.track;
          if (remoteMsid) {
            if (!streams[remoteMsid.stream]) {
              streams[remoteMsid.stream] = new window.MediaStream();
            }
            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);
            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);
          } else {
            if (!streams.default) {
              streams.default = new window.MediaStream();
            }
            addTrackToStreamAndFireEvent(track, streams.default);
            receiverList.push([track, rtpReceiver, streams.default]);
          }
        } else {
          // FIXME: actually the receiver should be created later.
          delete transceiver.rtpReceiver;
        }
      }
    });

    if (pc._dtlsRole === undefined) {
      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';
    }

    pc._remoteDescription = {
      type: description.type,
      sdp: description.sdp
    };
    if (description.type === 'offer') {
      pc._updateSignalingState('have-remote-offer');
    } else {
      pc._updateSignalingState('stable');
    }
    Object.keys(streams).forEach(function(sid) {
      var stream = streams[sid];
      if (stream.getTracks().length) {
        if (pc.remoteStreams.indexOf(stream) === -1) {
          pc.remoteStreams.push(stream);
          var event = new Event('addstream');
          event.stream = stream;
          window.setTimeout(function() {
            pc._dispatchEvent('addstream', event);
          });
        }

        receiverList.forEach(function(item) {
          var track = item[0];
          var receiver = item[1];
          if (stream.id !== item[2].id) {
            return;
          }
          fireAddTrack(pc, track, receiver, [stream]);
        });
      }
    });
    receiverList.forEach(function(item) {
      if (item[2]) {
        return;
      }
      fireAddTrack(pc, item[0], item[1], []);
    });

    // check whether addIceCandidate({}) was called within four seconds after
    // setRemoteDescription.
    window.setTimeout(function() {
      if (!(pc && pc.transceivers)) {
        return;
      }
      pc.transceivers.forEach(function(transceiver) {
        if (transceiver.iceTransport &&
            transceiver.iceTransport.state === 'new' &&
            transceiver.iceTransport.getRemoteCandidates().length > 0) {
          console.warn('Timeout for addRemoteCandidate. Consider sending ' +
              'an end-of-candidates notification');
          transceiver.iceTransport.addRemoteCandidate({});
        }
      });
    }, 4000);

    return Promise.resolve();
  };

  RTCPeerConnection.prototype.close = function() {
    this.transceivers.forEach(function(transceiver) {
      /* not yet
      if (transceiver.iceGatherer) {
        transceiver.iceGatherer.close();
      }
      */
      if (transceiver.iceTransport) {
        transceiver.iceTransport.stop();
      }
      if (transceiver.dtlsTransport) {
        transceiver.dtlsTransport.stop();
      }
      if (transceiver.rtpSender) {
        transceiver.rtpSender.stop();
      }
      if (transceiver.rtpReceiver) {
        transceiver.rtpReceiver.stop();
      }
    });
    // FIXME: clean up tracks, local streams, remote streams, etc
    this._isClosed = true;
    this._updateSignalingState('closed');
  };

  // Update the signaling state.
  RTCPeerConnection.prototype._updateSignalingState = function(newState) {
    this.signalingState = newState;
    var event = new Event('signalingstatechange');
    this._dispatchEvent('signalingstatechange', event);
  };

  // Determine whether to fire the negotiationneeded event.
  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {
    var pc = this;
    if (this.signalingState !== 'stable' || this.needNegotiation === true) {
      return;
    }
    this.needNegotiation = true;
    window.setTimeout(function() {
      if (pc.needNegotiation) {
        pc.needNegotiation = false;
        var event = new Event('negotiationneeded');
        pc._dispatchEvent('negotiationneeded', event);
      }
    }, 0);
  };

  // Update the ice connection state.
  RTCPeerConnection.prototype._updateIceConnectionState = function() {
    var newState;
    var states = {
      'new': 0,
      closed: 0,
      checking: 0,
      connected: 0,
      completed: 0,
      disconnected: 0,
      failed: 0
    };
    this.transceivers.forEach(function(transceiver) {
      if (transceiver.iceTransport && !transceiver.rejected) {
        states[transceiver.iceTransport.state]++;
      }
    });

    newState = 'new';
    if (states.failed > 0) {
      newState = 'failed';
    } else if (states.checking > 0) {
      newState = 'checking';
    } else if (states.disconnected > 0) {
      newState = 'disconnected';
    } else if (states.new > 0) {
      newState = 'new';
    } else if (states.connected > 0) {
      newState = 'connected';
    } else if (states.completed > 0) {
      newState = 'completed';
    }

    if (newState !== this.iceConnectionState) {
      this.iceConnectionState = newState;
      var event = new Event('iceconnectionstatechange');
      this._dispatchEvent('iceconnectionstatechange', event);
    }
  };

  // Update the connection state.
  RTCPeerConnection.prototype._updateConnectionState = function() {
    var newState;
    var states = {
      'new': 0,
      closed: 0,
      connecting: 0,
      connected: 0,
      completed: 0,
      disconnected: 0,
      failed: 0
    };
    this.transceivers.forEach(function(transceiver) {
      if (transceiver.iceTransport && transceiver.dtlsTransport &&
          !transceiver.rejected) {
        states[transceiver.iceTransport.state]++;
        states[transceiver.dtlsTransport.state]++;
      }
    });
    // ICETransport.completed and connected are the same for this purpose.
    states.connected += states.completed;

    newState = 'new';
    if (states.failed > 0) {
      newState = 'failed';
    } else if (states.connecting > 0) {
      newState = 'connecting';
    } else if (states.disconnected > 0) {
      newState = 'disconnected';
    } else if (states.new > 0) {
      newState = 'new';
    } else if (states.connected > 0) {
      newState = 'connected';
    }

    if (newState !== this.connectionState) {
      this.connectionState = newState;
      var event = new Event('connectionstatechange');
      this._dispatchEvent('connectionstatechange', event);
    }
  };

  RTCPeerConnection.prototype.createOffer = function() {
    var pc = this;

    if (pc._isClosed) {
      return Promise.reject(makeError('InvalidStateError',
          'Can not call createOffer after close'));
    }

    var numAudioTracks = pc.transceivers.filter(function(t) {
      return t.kind === 'audio';
    }).length;
    var numVideoTracks = pc.transceivers.filter(function(t) {
      return t.kind === 'video';
    }).length;

    // Determine number of audio and video tracks we need to send/recv.
    var offerOptions = arguments[0];
    if (offerOptions) {
      // Reject Chrome legacy constraints.
      if (offerOptions.mandatory || offerOptions.optional) {
        throw new TypeError(
            'Legacy mandatory/optional constraints not supported.');
      }
      if (offerOptions.offerToReceiveAudio !== undefined) {
        if (offerOptions.offerToReceiveAudio === true) {
          numAudioTracks = 1;
        } else if (offerOptions.offerToReceiveAudio === false) {
          numAudioTracks = 0;
        } else {
          numAudioTracks = offerOptions.offerToReceiveAudio;
        }
      }
      if (offerOptions.offerToReceiveVideo !== undefined) {
        if (offerOptions.offerToReceiveVideo === true) {
          numVideoTracks = 1;
        } else if (offerOptions.offerToReceiveVideo === false) {
          numVideoTracks = 0;
        } else {
          numVideoTracks = offerOptions.offerToReceiveVideo;
        }
      }
    }

    pc.transceivers.forEach(function(transceiver) {
      if (transceiver.kind === 'audio') {
        numAudioTracks--;
        if (numAudioTracks < 0) {
          transceiver.wantReceive = false;
        }
      } else if (transceiver.kind === 'video') {
        numVideoTracks--;
        if (numVideoTracks < 0) {
          transceiver.wantReceive = false;
        }
      }
    });

    // Create M-lines for recvonly streams.
    while (numAudioTracks > 0 || numVideoTracks > 0) {
      if (numAudioTracks > 0) {
        pc._createTransceiver('audio');
        numAudioTracks--;
      }
      if (numVideoTracks > 0) {
        pc._createTransceiver('video');
        numVideoTracks--;
      }
    }

    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,
        pc._sdpSessionVersion++);
    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {
      // For each track, create an ice gatherer, ice transport,
      // dtls transport, potentially rtpsender and rtpreceiver.
      var track = transceiver.track;
      var kind = transceiver.kind;
      var mid = transceiver.mid || SDPUtils.generateIdentifier();
      transceiver.mid = mid;

      if (!transceiver.iceGatherer) {
        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,
            pc.usingBundle);
      }

      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);
      // filter RTX until additional stuff needed for RTX is implemented
      // in adapter.js
      if (edgeVersion < 15019) {
        localCapabilities.codecs = localCapabilities.codecs.filter(
            function(codec) {
              return codec.name !== 'rtx';
            });
      }
      localCapabilities.codecs.forEach(function(codec) {
        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552
        // by adding level-asymmetry-allowed=1
        if (codec.name === 'H264' &&
            codec.parameters['level-asymmetry-allowed'] === undefined) {
          codec.parameters['level-asymmetry-allowed'] = '1';
        }

        // for subsequent offers, we might have to re-use the payload
        // type of the last offer.
        if (transceiver.remoteCapabilities &&
            transceiver.remoteCapabilities.codecs) {
          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {
            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&
                codec.clockRate === remoteCodec.clockRate) {
              codec.preferredPayloadType = remoteCodec.payloadType;
            }
          });
        }
      });
      localCapabilities.headerExtensions.forEach(function(hdrExt) {
        var remoteExtensions = transceiver.remoteCapabilities &&
            transceiver.remoteCapabilities.headerExtensions || [];
        remoteExtensions.forEach(function(rHdrExt) {
          if (hdrExt.uri === rHdrExt.uri) {
            hdrExt.id = rHdrExt.id;
          }
        });
      });

      // generate an ssrc now, to be used later in rtpSender.send
      var sendEncodingParameters = transceiver.sendEncodingParameters || [{
        ssrc: (2 * sdpMLineIndex + 1) * 1001
      }];
      if (track) {
        // add RTX
        if (edgeVersion >= 15019 && kind === 'video' &&
            !sendEncodingParameters[0].rtx) {
          sendEncodingParameters[0].rtx = {
            ssrc: sendEncodingParameters[0].ssrc + 1
          };
        }
      }

      if (transceiver.wantReceive) {
        transceiver.rtpReceiver = new window.RTCRtpReceiver(
            transceiver.dtlsTransport, kind);
      }

      transceiver.localCapabilities = localCapabilities;
      transceiver.sendEncodingParameters = sendEncodingParameters;
    });

    // always offer BUNDLE and dispose on return if not supported.
    if (pc._config.bundlePolicy !== 'max-compat') {
      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {
        return t.mid;
      }).join(' ') + '\r\n';
    }
    sdp += 'a=ice-options:trickle\r\n';

    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {
      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,
          'offer', transceiver.stream, pc._dtlsRole);
      sdp += 'a=rtcp-rsize\r\n';

      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&
          (sdpMLineIndex === 0 || !pc.usingBundle)) {
        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {
          cand.component = 1;
          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\r\n';
        });

        if (transceiver.iceGatherer.state === 'completed') {
          sdp += 'a=end-of-candidates\r\n';
        }
      }
    });

    var desc = new window.RTCSessionDescription({
      type: 'offer',
      sdp: sdp
    });
    return Promise.resolve(desc);
  };

  RTCPeerConnection.prototype.createAnswer = function() {
    var pc = this;

    if (pc._isClosed) {
      return Promise.reject(makeError('InvalidStateError',
          'Can not call createAnswer after close'));
    }

    if (!(pc.signalingState === 'have-remote-offer' ||
        pc.signalingState === 'have-local-pranswer')) {
      return Promise.reject(makeError('InvalidStateError',
          'Can not call createAnswer in signalingState ' + pc.signalingState));
    }

    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,
        pc._sdpSessionVersion++);
    if (pc.usingBundle) {
      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {
        return t.mid;
      }).join(' ') + '\r\n';
    }
    sdp += 'a=ice-options:trickle\r\n';

    var mediaSectionsInOffer = SDPUtils.getMediaSections(
        pc._remoteDescription.sdp).length;
    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {
      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {
        return;
      }
      if (transceiver.rejected) {
        if (transceiver.kind === 'application') {
          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt
            sdp += 'm=application 0 DTLS/SCTP 5000\r\n';
          } else {
            sdp += 'm=application 0 ' + transceiver.protocol +
                ' webrtc-datachannel\r\n';
          }
        } else if (transceiver.kind === 'audio') {
          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\r\n' +
              'a=rtpmap:0 PCMU/8000\r\n';
        } else if (transceiver.kind === 'video') {
          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\r\n' +
              'a=rtpmap:120 VP8/90000\r\n';
        }
        sdp += 'c=IN IP4 0.0.0.0\r\n' +
            'a=inactive\r\n' +
            'a=mid:' + transceiver.mid + '\r\n';
        return;
      }

      // FIXME: look at direction.
      if (transceiver.stream) {
        var localTrack;
        if (transceiver.kind === 'audio') {
          localTrack = transceiver.stream.getAudioTracks()[0];
        } else if (transceiver.kind === 'video') {
          localTrack = transceiver.stream.getVideoTracks()[0];
        }
        if (localTrack) {
          // add RTX
          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&
              !transceiver.sendEncodingParameters[0].rtx) {
            transceiver.sendEncodingParameters[0].rtx = {
              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1
            };
          }
        }
      }

      // Calculate intersection of capabilities.
      var commonCapabilities = getCommonCapabilities(
          transceiver.localCapabilities,
          transceiver.remoteCapabilities);

      var hasRtx = commonCapabilities.codecs.filter(function(c) {
        return c.name.toLowerCase() === 'rtx';
      }).length;
      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {
        delete transceiver.sendEncodingParameters[0].rtx;
      }

      sdp += writeMediaSection(transceiver, commonCapabilities,
          'answer', transceiver.stream, pc._dtlsRole);
      if (transceiver.rtcpParameters &&
          transceiver.rtcpParameters.reducedSize) {
        sdp += 'a=rtcp-rsize\r\n';
      }
    });

    var desc = new window.RTCSessionDescription({
      type: 'answer',
      sdp: sdp
    });
    return Promise.resolve(desc);
  };

  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {
    var pc = this;
    var sections;
    if (candidate && !(candidate.sdpMLineIndex !== undefined ||
        candidate.sdpMid)) {
      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));
    }

    // TODO: needs to go into ops queue.
    return new Promise(function(resolve, reject) {
      if (!pc._remoteDescription) {
        return reject(makeError('InvalidStateError',
            'Can not add ICE candidate without a remote description'));
      } else if (!candidate || candidate.candidate === '') {
        for (var j = 0; j < pc.transceivers.length; j++) {
          if (pc.transceivers[j].rejected) {
            continue;
          }
          pc.transceivers[j].iceTransport.addRemoteCandidate({});
          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);
          sections[j] += 'a=end-of-candidates\r\n';
          pc._remoteDescription.sdp =
              SDPUtils.getDescription(pc._remoteDescription.sdp) +
              sections.join('');
          if (pc.usingBundle) {
            break;
          }
        }
      } else {
        var sdpMLineIndex = candidate.sdpMLineIndex;
        if (candidate.sdpMid) {
          for (var i = 0; i < pc.transceivers.length; i++) {
            if (pc.transceivers[i].mid === candidate.sdpMid) {
              sdpMLineIndex = i;
              break;
            }
          }
        }
        var transceiver = pc.transceivers[sdpMLineIndex];
        if (transceiver) {
          if (transceiver.rejected) {
            return resolve();
          }
          var cand = Object.keys(candidate.candidate).length > 0 ?
              SDPUtils.parseCandidate(candidate.candidate) : {};
          // Ignore Chrome's invalid candidates since Edge does not like them.
          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {
            return resolve();
          }
          // Ignore RTCP candidates, we assume RTCP-MUX.
          if (cand.component && cand.component !== 1) {
            return resolve();
          }
          // when using bundle, avoid adding candidates to the wrong
          // ice transport. And avoid adding candidates added in the SDP.
          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&
              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {
            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {
              return reject(makeError('OperationError',
                  'Can not add ICE candidate'));
            }
          }

          // update the remoteDescription.
          var candidateString = candidate.candidate.trim();
          if (candidateString.indexOf('a=') === 0) {
            candidateString = candidateString.substr(2);
          }
          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);
          sections[sdpMLineIndex] += 'a=' +
              (cand.type ? candidateString : 'end-of-candidates')
              + '\r\n';
          pc._remoteDescription.sdp =
              SDPUtils.getDescription(pc._remoteDescription.sdp) +
              sections.join('');
        } else {
          return reject(makeError('OperationError',
              'Can not add ICE candidate'));
        }
      }
      resolve();
    });
  };

  RTCPeerConnection.prototype.getStats = function(selector) {
    if (selector && selector instanceof window.MediaStreamTrack) {
      var senderOrReceiver = null;
      this.transceivers.forEach(function(transceiver) {
        if (transceiver.rtpSender &&
            transceiver.rtpSender.track === selector) {
          senderOrReceiver = transceiver.rtpSender;
        } else if (transceiver.rtpReceiver &&
            transceiver.rtpReceiver.track === selector) {
          senderOrReceiver = transceiver.rtpReceiver;
        }
      });
      if (!senderOrReceiver) {
        throw makeError('InvalidAccessError', 'Invalid selector.');
      }
      return senderOrReceiver.getStats();
    }

    var promises = [];
    this.transceivers.forEach(function(transceiver) {
      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',
          'dtlsTransport'].forEach(function(method) {
            if (transceiver[method]) {
              promises.push(transceiver[method].getStats());
            }
          });
    });
    return Promise.all(promises).then(function(allStats) {
      var results = new Map();
      allStats.forEach(function(stats) {
        stats.forEach(function(stat) {
          results.set(stat.id, stat);
        });
      });
      return results;
    });
  };

  // fix low-level stat names and return Map instead of object.
  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',
    'RTCIceTransport', 'RTCDtlsTransport'];
  ortcObjects.forEach(function(ortcObjectName) {
    var obj = window[ortcObjectName];
    if (obj && obj.prototype && obj.prototype.getStats) {
      var nativeGetstats = obj.prototype.getStats;
      obj.prototype.getStats = function() {
        return nativeGetstats.apply(this)
        .then(function(nativeStats) {
          var mapStats = new Map();
          Object.keys(nativeStats).forEach(function(id) {
            nativeStats[id].type = fixStatsType(nativeStats[id]);
            mapStats.set(id, nativeStats[id]);
          });
          return mapStats;
        });
      };
    }
  });

  // legacy callback shims. Should be moved to adapter.js some days.
  var methods = ['createOffer', 'createAnswer'];
  methods.forEach(function(method) {
    var nativeMethod = RTCPeerConnection.prototype[method];
    RTCPeerConnection.prototype[method] = function() {
      var args = arguments;
      if (typeof args[0] === 'function' ||
          typeof args[1] === 'function') { // legacy
        return nativeMethod.apply(this, [arguments[2]])
        .then(function(description) {
          if (typeof args[0] === 'function') {
            args[0].apply(null, [description]);
          }
        }, function(error) {
          if (typeof args[1] === 'function') {
            args[1].apply(null, [error]);
          }
        });
      }
      return nativeMethod.apply(this, arguments);
    };
  });

  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];
  methods.forEach(function(method) {
    var nativeMethod = RTCPeerConnection.prototype[method];
    RTCPeerConnection.prototype[method] = function() {
      var args = arguments;
      if (typeof args[1] === 'function' ||
          typeof args[2] === 'function') { // legacy
        return nativeMethod.apply(this, arguments)
        .then(function() {
          if (typeof args[1] === 'function') {
            args[1].apply(null);
          }
        }, function(error) {
          if (typeof args[2] === 'function') {
            args[2].apply(null, [error]);
          }
        });
      }
      return nativeMethod.apply(this, arguments);
    };
  });

  // getStats is special. It doesn't have a spec legacy method yet we support
  // getStats(something, cb) without error callbacks.
  ['getStats'].forEach(function(method) {
    var nativeMethod = RTCPeerConnection.prototype[method];
    RTCPeerConnection.prototype[method] = function() {
      var args = arguments;
      if (typeof args[1] === 'function') {
        return nativeMethod.apply(this, arguments)
        .then(function() {
          if (typeof args[1] === 'function') {
            args[1].apply(null);
          }
        });
      }
      return nativeMethod.apply(this, arguments);
    };
  });

  return RTCPeerConnection;
};


/***/ }),

/***/ "./node_modules/sdp/sdp.js":
/*!*********************************!*\
  !*** ./node_modules/sdp/sdp.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 /* eslint-env node */


// SDP helpers.
var SDPUtils = {};

// Generate an alphanumeric identifier for cname or mids.
// TODO: use UUIDs instead? https://gist.github.com/jed/982883
SDPUtils.generateIdentifier = function() {
  return Math.random().toString(36).substr(2, 10);
};

// The RTCP CNAME used by all peerconnections from the same JS.
SDPUtils.localCName = SDPUtils.generateIdentifier();

// Splits SDP into lines, dealing with both CRLF and LF.
SDPUtils.splitLines = function(blob) {
  return blob.trim().split('\n').map(function(line) {
    return line.trim();
  });
};
// Splits SDP into sessionpart and mediasections. Ensures CRLF.
SDPUtils.splitSections = function(blob) {
  var parts = blob.split('\nm=');
  return parts.map(function(part, index) {
    return (index > 0 ? 'm=' + part : part).trim() + '\r\n';
  });
};

// returns the session description.
SDPUtils.getDescription = function(blob) {
  var sections = SDPUtils.splitSections(blob);
  return sections && sections[0];
};

// returns the individual media sections.
SDPUtils.getMediaSections = function(blob) {
  var sections = SDPUtils.splitSections(blob);
  sections.shift();
  return sections;
};

// Returns lines that start with a certain prefix.
SDPUtils.matchPrefix = function(blob, prefix) {
  return SDPUtils.splitLines(blob).filter(function(line) {
    return line.indexOf(prefix) === 0;
  });
};

// Parses an ICE candidate line. Sample input:
// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8
// rport 55996"
SDPUtils.parseCandidate = function(line) {
  var parts;
  // Parse both variants.
  if (line.indexOf('a=candidate:') === 0) {
    parts = line.substring(12).split(' ');
  } else {
    parts = line.substring(10).split(' ');
  }

  var candidate = {
    foundation: parts[0],
    component: parseInt(parts[1], 10),
    protocol: parts[2].toLowerCase(),
    priority: parseInt(parts[3], 10),
    ip: parts[4],
    address: parts[4], // address is an alias for ip.
    port: parseInt(parts[5], 10),
    // skip parts[6] == 'typ'
    type: parts[7]
  };

  for (var i = 8; i < parts.length; i += 2) {
    switch (parts[i]) {
      case 'raddr':
        candidate.relatedAddress = parts[i + 1];
        break;
      case 'rport':
        candidate.relatedPort = parseInt(parts[i + 1], 10);
        break;
      case 'tcptype':
        candidate.tcpType = parts[i + 1];
        break;
      case 'ufrag':
        candidate.ufrag = parts[i + 1]; // for backward compability.
        candidate.usernameFragment = parts[i + 1];
        break;
      default: // extension handling, in particular ufrag
        candidate[parts[i]] = parts[i + 1];
        break;
    }
  }
  return candidate;
};

// Translates a candidate object into SDP candidate attribute.
SDPUtils.writeCandidate = function(candidate) {
  var sdp = [];
  sdp.push(candidate.foundation);
  sdp.push(candidate.component);
  sdp.push(candidate.protocol.toUpperCase());
  sdp.push(candidate.priority);
  sdp.push(candidate.address || candidate.ip);
  sdp.push(candidate.port);

  var type = candidate.type;
  sdp.push('typ');
  sdp.push(type);
  if (type !== 'host' && candidate.relatedAddress &&
      candidate.relatedPort) {
    sdp.push('raddr');
    sdp.push(candidate.relatedAddress);
    sdp.push('rport');
    sdp.push(candidate.relatedPort);
  }
  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {
    sdp.push('tcptype');
    sdp.push(candidate.tcpType);
  }
  if (candidate.usernameFragment || candidate.ufrag) {
    sdp.push('ufrag');
    sdp.push(candidate.usernameFragment || candidate.ufrag);
  }
  return 'candidate:' + sdp.join(' ');
};

// Parses an ice-options line, returns an array of option tags.
// a=ice-options:foo bar
SDPUtils.parseIceOptions = function(line) {
  return line.substr(14).split(' ');
};

// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:
// a=rtpmap:111 opus/48000/2
SDPUtils.parseRtpMap = function(line) {
  var parts = line.substr(9).split(' ');
  var parsed = {
    payloadType: parseInt(parts.shift(), 10) // was: id
  };

  parts = parts[0].split('/');

  parsed.name = parts[0];
  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate
  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;
  // legacy alias, got renamed back to channels in ORTC.
  parsed.numChannels = parsed.channels;
  return parsed;
};

// Generate an a=rtpmap line from RTCRtpCodecCapability or
// RTCRtpCodecParameters.
SDPUtils.writeRtpMap = function(codec) {
  var pt = codec.payloadType;
  if (codec.preferredPayloadType !== undefined) {
    pt = codec.preferredPayloadType;
  }
  var channels = codec.channels || codec.numChannels || 1;
  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +
      (channels !== 1 ? '/' + channels : '') + '\r\n';
};

// Parses an a=extmap line (headerextension from RFC 5285). Sample input:
// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset
// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset
SDPUtils.parseExtmap = function(line) {
  var parts = line.substr(9).split(' ');
  return {
    id: parseInt(parts[0], 10),
    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',
    uri: parts[1]
  };
};

// Generates a=extmap line from RTCRtpHeaderExtensionParameters or
// RTCRtpHeaderExtension.
SDPUtils.writeExtmap = function(headerExtension) {
  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +
      (headerExtension.direction && headerExtension.direction !== 'sendrecv'
          ? '/' + headerExtension.direction
          : '') +
      ' ' + headerExtension.uri + '\r\n';
};

// Parses an ftmp line, returns dictionary. Sample input:
// a=fmtp:96 vbr=on;cng=on
// Also deals with vbr=on; cng=on
SDPUtils.parseFmtp = function(line) {
  var parsed = {};
  var kv;
  var parts = line.substr(line.indexOf(' ') + 1).split(';');
  for (var j = 0; j < parts.length; j++) {
    kv = parts[j].trim().split('=');
    parsed[kv[0].trim()] = kv[1];
  }
  return parsed;
};

// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.
SDPUtils.writeFmtp = function(codec) {
  var line = '';
  var pt = codec.payloadType;
  if (codec.preferredPayloadType !== undefined) {
    pt = codec.preferredPayloadType;
  }
  if (codec.parameters && Object.keys(codec.parameters).length) {
    var params = [];
    Object.keys(codec.parameters).forEach(function(param) {
      if (codec.parameters[param]) {
        params.push(param + '=' + codec.parameters[param]);
      } else {
        params.push(param);
      }
    });
    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\r\n';
  }
  return line;
};

// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:
// a=rtcp-fb:98 nack rpsi
SDPUtils.parseRtcpFb = function(line) {
  var parts = line.substr(line.indexOf(' ') + 1).split(' ');
  return {
    type: parts.shift(),
    parameter: parts.join(' ')
  };
};
// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.
SDPUtils.writeRtcpFb = function(codec) {
  var lines = '';
  var pt = codec.payloadType;
  if (codec.preferredPayloadType !== undefined) {
    pt = codec.preferredPayloadType;
  }
  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {
    // FIXME: special handling for trr-int?
    codec.rtcpFeedback.forEach(function(fb) {
      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +
      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +
          '\r\n';
    });
  }
  return lines;
};

// Parses an RFC 5576 ssrc media attribute. Sample input:
// a=ssrc:3735928559 cname:something
SDPUtils.parseSsrcMedia = function(line) {
  var sp = line.indexOf(' ');
  var parts = {
    ssrc: parseInt(line.substr(7, sp - 7), 10)
  };
  var colon = line.indexOf(':', sp);
  if (colon > -1) {
    parts.attribute = line.substr(sp + 1, colon - sp - 1);
    parts.value = line.substr(colon + 1);
  } else {
    parts.attribute = line.substr(sp + 1);
  }
  return parts;
};

SDPUtils.parseSsrcGroup = function(line) {
  var parts = line.substr(13).split(' ');
  return {
    semantics: parts.shift(),
    ssrcs: parts.map(function(ssrc) {
      return parseInt(ssrc, 10);
    })
  };
};

// Extracts the MID (RFC 5888) from a media section.
// returns the MID or undefined if no mid line was found.
SDPUtils.getMid = function(mediaSection) {
  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];
  if (mid) {
    return mid.substr(6);
  }
};

SDPUtils.parseFingerprint = function(line) {
  var parts = line.substr(14).split(' ');
  return {
    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.
    value: parts[1]
  };
};

// Extracts DTLS parameters from SDP media section or sessionpart.
// FIXME: for consistency with other functions this should only
//   get the fingerprint line as input. See also getIceParameters.
SDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {
  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,
      'a=fingerprint:');
  // Note: a=setup line is ignored since we use the 'auto' role.
  // Note2: 'algorithm' is not case sensitive except in Edge.
  return {
    role: 'auto',
    fingerprints: lines.map(SDPUtils.parseFingerprint)
  };
};

// Serializes DTLS parameters to SDP.
SDPUtils.writeDtlsParameters = function(params, setupType) {
  var sdp = 'a=setup:' + setupType + '\r\n';
  params.fingerprints.forEach(function(fp) {
    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\r\n';
  });
  return sdp;
};
// Parses ICE information from SDP media section or sessionpart.
// FIXME: for consistency with other functions this should only
//   get the ice-ufrag and ice-pwd lines as input.
SDPUtils.getIceParameters = function(mediaSection, sessionpart) {
  var lines = SDPUtils.splitLines(mediaSection);
  // Search in session part, too.
  lines = lines.concat(SDPUtils.splitLines(sessionpart));
  var iceParameters = {
    usernameFragment: lines.filter(function(line) {
      return line.indexOf('a=ice-ufrag:') === 0;
    })[0].substr(12),
    password: lines.filter(function(line) {
      return line.indexOf('a=ice-pwd:') === 0;
    })[0].substr(10)
  };
  return iceParameters;
};

// Serializes ICE parameters to SDP.
SDPUtils.writeIceParameters = function(params) {
  return 'a=ice-ufrag:' + params.usernameFragment + '\r\n' +
      'a=ice-pwd:' + params.password + '\r\n';
};

// Parses the SDP media section and returns RTCRtpParameters.
SDPUtils.parseRtpParameters = function(mediaSection) {
  var description = {
    codecs: [],
    headerExtensions: [],
    fecMechanisms: [],
    rtcp: []
  };
  var lines = SDPUtils.splitLines(mediaSection);
  var mline = lines[0].split(' ');
  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]
    var pt = mline[i];
    var rtpmapline = SDPUtils.matchPrefix(
        mediaSection, 'a=rtpmap:' + pt + ' ')[0];
    if (rtpmapline) {
      var codec = SDPUtils.parseRtpMap(rtpmapline);
      var fmtps = SDPUtils.matchPrefix(
          mediaSection, 'a=fmtp:' + pt + ' ');
      // Only the first a=fmtp:<pt> is considered.
      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};
      codec.rtcpFeedback = SDPUtils.matchPrefix(
          mediaSection, 'a=rtcp-fb:' + pt + ' ')
        .map(SDPUtils.parseRtcpFb);
      description.codecs.push(codec);
      // parse FEC mechanisms from rtpmap lines.
      switch (codec.name.toUpperCase()) {
        case 'RED':
        case 'ULPFEC':
          description.fecMechanisms.push(codec.name.toUpperCase());
          break;
        default: // only RED and ULPFEC are recognized as FEC mechanisms.
          break;
      }
    }
  }
  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {
    description.headerExtensions.push(SDPUtils.parseExtmap(line));
  });
  // FIXME: parse rtcp.
  return description;
};

// Generates parts of the SDP media section describing the capabilities /
// parameters.
SDPUtils.writeRtpDescription = function(kind, caps) {
  var sdp = '';

  // Build the mline.
  sdp += 'm=' + kind + ' ';
  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.
  sdp += ' UDP/TLS/RTP/SAVPF ';
  sdp += caps.codecs.map(function(codec) {
    if (codec.preferredPayloadType !== undefined) {
      return codec.preferredPayloadType;
    }
    return codec.payloadType;
  }).join(' ') + '\r\n';

  sdp += 'c=IN IP4 0.0.0.0\r\n';
  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\r\n';

  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.
  caps.codecs.forEach(function(codec) {
    sdp += SDPUtils.writeRtpMap(codec);
    sdp += SDPUtils.writeFmtp(codec);
    sdp += SDPUtils.writeRtcpFb(codec);
  });
  var maxptime = 0;
  caps.codecs.forEach(function(codec) {
    if (codec.maxptime > maxptime) {
      maxptime = codec.maxptime;
    }
  });
  if (maxptime > 0) {
    sdp += 'a=maxptime:' + maxptime + '\r\n';
  }
  sdp += 'a=rtcp-mux\r\n';

  if (caps.headerExtensions) {
    caps.headerExtensions.forEach(function(extension) {
      sdp += SDPUtils.writeExtmap(extension);
    });
  }
  // FIXME: write fecMechanisms.
  return sdp;
};

// Parses the SDP media section and returns an array of
// RTCRtpEncodingParameters.
SDPUtils.parseRtpEncodingParameters = function(mediaSection) {
  var encodingParameters = [];
  var description = SDPUtils.parseRtpParameters(mediaSection);
  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;
  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;

  // filter a=ssrc:... cname:, ignore PlanB-msid
  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')
  .map(function(line) {
    return SDPUtils.parseSsrcMedia(line);
  })
  .filter(function(parts) {
    return parts.attribute === 'cname';
  });
  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;
  var secondarySsrc;

  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')
  .map(function(line) {
    var parts = line.substr(17).split(' ');
    return parts.map(function(part) {
      return parseInt(part, 10);
    });
  });
  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {
    secondarySsrc = flows[0][1];
  }

  description.codecs.forEach(function(codec) {
    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {
      var encParam = {
        ssrc: primarySsrc,
        codecPayloadType: parseInt(codec.parameters.apt, 10)
      };
      if (primarySsrc && secondarySsrc) {
        encParam.rtx = {ssrc: secondarySsrc};
      }
      encodingParameters.push(encParam);
      if (hasRed) {
        encParam = JSON.parse(JSON.stringify(encParam));
        encParam.fec = {
          ssrc: primarySsrc,
          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'
        };
        encodingParameters.push(encParam);
      }
    }
  });
  if (encodingParameters.length === 0 && primarySsrc) {
    encodingParameters.push({
      ssrc: primarySsrc
    });
  }

  // we support both b=AS and b=TIAS but interpret AS as TIAS.
  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');
  if (bandwidth.length) {
    if (bandwidth[0].indexOf('b=TIAS:') === 0) {
      bandwidth = parseInt(bandwidth[0].substr(7), 10);
    } else if (bandwidth[0].indexOf('b=AS:') === 0) {
      // use formula from JSEP to convert b=AS to TIAS value.
      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95
          - (50 * 40 * 8);
    } else {
      bandwidth = undefined;
    }
    encodingParameters.forEach(function(params) {
      params.maxBitrate = bandwidth;
    });
  }
  return encodingParameters;
};

// parses http://draft.ortc.org/#rtcrtcpparameters*
SDPUtils.parseRtcpParameters = function(mediaSection) {
  var rtcpParameters = {};

  // Gets the first SSRC. Note tha with RTX there might be multiple
  // SSRCs.
  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')
      .map(function(line) {
        return SDPUtils.parseSsrcMedia(line);
      })
      .filter(function(obj) {
        return obj.attribute === 'cname';
      })[0];
  if (remoteSsrc) {
    rtcpParameters.cname = remoteSsrc.value;
    rtcpParameters.ssrc = remoteSsrc.ssrc;
  }

  // Edge uses the compound attribute instead of reducedSize
  // compound is !reducedSize
  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');
  rtcpParameters.reducedSize = rsize.length > 0;
  rtcpParameters.compound = rsize.length === 0;

  // parses the rtcp-mux attrіbute.
  // Note that Edge does not support unmuxed RTCP.
  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');
  rtcpParameters.mux = mux.length > 0;

  return rtcpParameters;
};

// parses either a=msid: or a=ssrc:... msid lines and returns
// the id of the MediaStream and MediaStreamTrack.
SDPUtils.parseMsid = function(mediaSection) {
  var parts;
  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');
  if (spec.length === 1) {
    parts = spec[0].substr(7).split(' ');
    return {stream: parts[0], track: parts[1]};
  }
  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')
  .map(function(line) {
    return SDPUtils.parseSsrcMedia(line);
  })
  .filter(function(msidParts) {
    return msidParts.attribute === 'msid';
  });
  if (planB.length > 0) {
    parts = planB[0].value.split(' ');
    return {stream: parts[0], track: parts[1]};
  }
};

// Generate a session ID for SDP.
// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1
// recommends using a cryptographically random +ve 64-bit value
// but right now this should be acceptable and within the right range
SDPUtils.generateSessionId = function() {
  return Math.random().toString().substr(2, 21);
};

// Write boilder plate for start of SDP
// sessId argument is optional - if not supplied it will
// be generated randomly
// sessVersion is optional and defaults to 2
// sessUser is optional and defaults to 'thisisadapterortc'
SDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {
  var sessionId;
  var version = sessVer !== undefined ? sessVer : 2;
  if (sessId) {
    sessionId = sessId;
  } else {
    sessionId = SDPUtils.generateSessionId();
  }
  var user = sessUser || 'thisisadapterortc';
  // FIXME: sess-id should be an NTP timestamp.
  return 'v=0\r\n' +
      'o=' + user + ' ' + sessionId + ' ' + version +
        ' IN IP4 127.0.0.1\r\n' +
      's=-\r\n' +
      't=0 0\r\n';
};

SDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {
  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);

  // Map ICE parameters (ufrag, pwd) to SDP.
  sdp += SDPUtils.writeIceParameters(
      transceiver.iceGatherer.getLocalParameters());

  // Map DTLS parameters to SDP.
  sdp += SDPUtils.writeDtlsParameters(
      transceiver.dtlsTransport.getLocalParameters(),
      type === 'offer' ? 'actpass' : 'active');

  sdp += 'a=mid:' + transceiver.mid + '\r\n';

  if (transceiver.direction) {
    sdp += 'a=' + transceiver.direction + '\r\n';
  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {
    sdp += 'a=sendrecv\r\n';
  } else if (transceiver.rtpSender) {
    sdp += 'a=sendonly\r\n';
  } else if (transceiver.rtpReceiver) {
    sdp += 'a=recvonly\r\n';
  } else {
    sdp += 'a=inactive\r\n';
  }

  if (transceiver.rtpSender) {
    // spec.
    var msid = 'msid:' + stream.id + ' ' +
        transceiver.rtpSender.track.id + '\r\n';
    sdp += 'a=' + msid;

    // for Chrome.
    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +
        ' ' + msid;
    if (transceiver.sendEncodingParameters[0].rtx) {
      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +
          ' ' + msid;
      sdp += 'a=ssrc-group:FID ' +
          transceiver.sendEncodingParameters[0].ssrc + ' ' +
          transceiver.sendEncodingParameters[0].rtx.ssrc +
          '\r\n';
    }
  }
  // FIXME: this should be written by writeRtpDescription.
  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +
      ' cname:' + SDPUtils.localCName + '\r\n';
  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {
    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +
        ' cname:' + SDPUtils.localCName + '\r\n';
  }
  return sdp;
};

// Gets the direction from the mediaSection or the sessionpart.
SDPUtils.getDirection = function(mediaSection, sessionpart) {
  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.
  var lines = SDPUtils.splitLines(mediaSection);
  for (var i = 0; i < lines.length; i++) {
    switch (lines[i]) {
      case 'a=sendrecv':
      case 'a=sendonly':
      case 'a=recvonly':
      case 'a=inactive':
        return lines[i].substr(2);
      default:
        // FIXME: What should happen here?
    }
  }
  if (sessionpart) {
    return SDPUtils.getDirection(sessionpart);
  }
  return 'sendrecv';
};

SDPUtils.getKind = function(mediaSection) {
  var lines = SDPUtils.splitLines(mediaSection);
  var mline = lines[0].split(' ');
  return mline[0].substr(2);
};

SDPUtils.isRejected = function(mediaSection) {
  return mediaSection.split(' ', 2)[1] === '0';
};

SDPUtils.parseMLine = function(mediaSection) {
  var lines = SDPUtils.splitLines(mediaSection);
  var parts = lines[0].substr(2).split(' ');
  return {
    kind: parts[0],
    port: parseInt(parts[1], 10),
    protocol: parts[2],
    fmt: parts.slice(3).join(' ')
  };
};

SDPUtils.parseOLine = function(mediaSection) {
  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];
  var parts = line.substr(2).split(' ');
  return {
    username: parts[0],
    sessionId: parts[1],
    sessionVersion: parseInt(parts[2], 10),
    netType: parts[3],
    addressType: parts[4],
    address: parts[5]
  };
};

// a very naive interpretation of a valid SDP.
SDPUtils.isValidSDP = function(blob) {
  if (typeof blob !== 'string' || blob.length === 0) {
    return false;
  }
  var lines = SDPUtils.splitLines(blob);
  for (var i = 0; i < lines.length; i++) {
    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {
      return false;
    }
    // TODO: check the modifier a bit more.
  }
  return true;
};

// Expose public methods.
if (true) {
  module.exports = SDPUtils;
}


/***/ }),

/***/ "./node_modules/socket.io-client/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/socket.io-client/lib/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var url = __webpack_require__(/*! ./url */ "./node_modules/socket.io-client/lib/url.js");
var parser = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-client/node_modules/socket.io-parser/index.js");
var Manager = __webpack_require__(/*! ./manager */ "./node_modules/socket.io-client/lib/manager.js");
var debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")('socket.io-client');

/**
 * Module exports.
 */

module.exports = exports = lookup;

/**
 * Managers cache.
 */

var cache = exports.managers = {};

/**
 * Looks up an existing `Manager` for multiplexing.
 * If the user summons:
 *
 *   `io('http://localhost/a');`
 *   `io('http://localhost/b');`
 *
 * We reuse the existing instance based on same scheme/port/host,
 * and we initialize sockets for each namespace.
 *
 * @api public
 */

function lookup (uri, opts) {
  if (typeof uri === 'object') {
    opts = uri;
    uri = undefined;
  }

  opts = opts || {};

  var parsed = url(uri);
  var source = parsed.source;
  var id = parsed.id;
  var path = parsed.path;
  var sameNamespace = cache[id] && path in cache[id].nsps;
  var newConnection = opts.forceNew || opts['force new connection'] ||
                      false === opts.multiplex || sameNamespace;

  var io;

  if (newConnection) {
    debug('ignoring socket cache for %s', source);
    io = Manager(source, opts);
  } else {
    if (!cache[id]) {
      debug('new io instance for %s', source);
      cache[id] = Manager(source, opts);
    }
    io = cache[id];
  }
  if (parsed.query && !opts.query) {
    opts.query = parsed.query;
  }
  return io.socket(parsed.path, opts);
}

/**
 * Protocol version.
 *
 * @api public
 */

exports.protocol = parser.protocol;

/**
 * `connect`.
 *
 * @param {String} uri
 * @api public
 */

exports.connect = lookup;

/**
 * Expose constructors for standalone build.
 *
 * @api public
 */

exports.Manager = __webpack_require__(/*! ./manager */ "./node_modules/socket.io-client/lib/manager.js");
exports.Socket = __webpack_require__(/*! ./socket */ "./node_modules/socket.io-client/lib/socket.js");


/***/ }),

/***/ "./node_modules/socket.io-client/lib/manager.js":
/*!******************************************************!*\
  !*** ./node_modules/socket.io-client/lib/manager.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var eio = __webpack_require__(/*! engine.io-client */ "./node_modules/engine.io-client/lib/index.js");
var Socket = __webpack_require__(/*! ./socket */ "./node_modules/socket.io-client/lib/socket.js");
var Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");
var parser = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-client/node_modules/socket.io-parser/index.js");
var on = __webpack_require__(/*! ./on */ "./node_modules/socket.io-client/lib/on.js");
var bind = __webpack_require__(/*! component-bind */ "./node_modules/component-bind/index.js");
var debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")('socket.io-client:manager');
var indexOf = __webpack_require__(/*! indexof */ "./node_modules/indexof/index.js");
var Backoff = __webpack_require__(/*! backo2 */ "./node_modules/backo2/index.js");

/**
 * IE6+ hasOwnProperty
 */

var has = Object.prototype.hasOwnProperty;

/**
 * Module exports
 */

module.exports = Manager;

/**
 * `Manager` constructor.
 *
 * @param {String} engine instance or engine uri/opts
 * @param {Object} options
 * @api public
 */

function Manager (uri, opts) {
  if (!(this instanceof Manager)) return new Manager(uri, opts);
  if (uri && ('object' === typeof uri)) {
    opts = uri;
    uri = undefined;
  }
  opts = opts || {};

  opts.path = opts.path || '/socket.io';
  this.nsps = {};
  this.subs = [];
  this.opts = opts;
  this.reconnection(opts.reconnection !== false);
  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
  this.reconnectionDelay(opts.reconnectionDelay || 1000);
  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
  this.randomizationFactor(opts.randomizationFactor || 0.5);
  this.backoff = new Backoff({
    min: this.reconnectionDelay(),
    max: this.reconnectionDelayMax(),
    jitter: this.randomizationFactor()
  });
  this.timeout(null == opts.timeout ? 20000 : opts.timeout);
  this.readyState = 'closed';
  this.uri = uri;
  this.connecting = [];
  this.lastPing = null;
  this.encoding = false;
  this.packetBuffer = [];
  var _parser = opts.parser || parser;
  this.encoder = new _parser.Encoder();
  this.decoder = new _parser.Decoder();
  this.autoConnect = opts.autoConnect !== false;
  if (this.autoConnect) this.open();
}

/**
 * Propagate given event to sockets and emit on `this`
 *
 * @api private
 */

Manager.prototype.emitAll = function () {
  this.emit.apply(this, arguments);
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
    }
  }
};

/**
 * Update `socket.id` of all sockets
 *
 * @api private
 */

Manager.prototype.updateSocketIds = function () {
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].id = this.generateId(nsp);
    }
  }
};

/**
 * generate `socket.id` for the given `nsp`
 *
 * @param {String} nsp
 * @return {String}
 * @api private
 */

Manager.prototype.generateId = function (nsp) {
  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;
};

/**
 * Mix in `Emitter`.
 */

Emitter(Manager.prototype);

/**
 * Sets the `reconnection` config.
 *
 * @param {Boolean} true/false if it should automatically reconnect
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnection = function (v) {
  if (!arguments.length) return this._reconnection;
  this._reconnection = !!v;
  return this;
};

/**
 * Sets the reconnection attempts config.
 *
 * @param {Number} max reconnection attempts before giving up
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionAttempts = function (v) {
  if (!arguments.length) return this._reconnectionAttempts;
  this._reconnectionAttempts = v;
  return this;
};

/**
 * Sets the delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelay = function (v) {
  if (!arguments.length) return this._reconnectionDelay;
  this._reconnectionDelay = v;
  this.backoff && this.backoff.setMin(v);
  return this;
};

Manager.prototype.randomizationFactor = function (v) {
  if (!arguments.length) return this._randomizationFactor;
  this._randomizationFactor = v;
  this.backoff && this.backoff.setJitter(v);
  return this;
};

/**
 * Sets the maximum delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelayMax = function (v) {
  if (!arguments.length) return this._reconnectionDelayMax;
  this._reconnectionDelayMax = v;
  this.backoff && this.backoff.setMax(v);
  return this;
};

/**
 * Sets the connection timeout. `false` to disable
 *
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.timeout = function (v) {
  if (!arguments.length) return this._timeout;
  this._timeout = v;
  return this;
};

/**
 * Starts trying to reconnect if reconnection is enabled and we have not
 * started reconnecting yet
 *
 * @api private
 */

Manager.prototype.maybeReconnectOnOpen = function () {
  // Only try to reconnect if it's the first time we're connecting
  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
    // keeps reconnection from firing twice for the same reconnection loop
    this.reconnect();
  }
};

/**
 * Sets the current transport `socket`.
 *
 * @param {Function} optional, callback
 * @return {Manager} self
 * @api public
 */

Manager.prototype.open =
Manager.prototype.connect = function (fn, opts) {
  debug('readyState %s', this.readyState);
  if (~this.readyState.indexOf('open')) return this;

  debug('opening %s', this.uri);
  this.engine = eio(this.uri, this.opts);
  var socket = this.engine;
  var self = this;
  this.readyState = 'opening';
  this.skipReconnect = false;

  // emit `open`
  var openSub = on(socket, 'open', function () {
    self.onopen();
    fn && fn();
  });

  // emit `connect_error`
  var errorSub = on(socket, 'error', function (data) {
    debug('connect_error');
    self.cleanup();
    self.readyState = 'closed';
    self.emitAll('connect_error', data);
    if (fn) {
      var err = new Error('Connection error');
      err.data = data;
      fn(err);
    } else {
      // Only do this if there is no fn to handle the error
      self.maybeReconnectOnOpen();
    }
  });

  // emit `connect_timeout`
  if (false !== this._timeout) {
    var timeout = this._timeout;
    debug('connect attempt will timeout after %d', timeout);

    // set timer
    var timer = setTimeout(function () {
      debug('connect attempt timed out after %d', timeout);
      openSub.destroy();
      socket.close();
      socket.emit('error', 'timeout');
      self.emitAll('connect_timeout', timeout);
    }, timeout);

    this.subs.push({
      destroy: function () {
        clearTimeout(timer);
      }
    });
  }

  this.subs.push(openSub);
  this.subs.push(errorSub);

  return this;
};

/**
 * Called upon transport open.
 *
 * @api private
 */

Manager.prototype.onopen = function () {
  debug('open');

  // clear old subs
  this.cleanup();

  // mark as open
  this.readyState = 'open';
  this.emit('open');

  // add new subs
  var socket = this.engine;
  this.subs.push(on(socket, 'data', bind(this, 'ondata')));
  this.subs.push(on(socket, 'ping', bind(this, 'onping')));
  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
  this.subs.push(on(socket, 'error', bind(this, 'onerror')));
  this.subs.push(on(socket, 'close', bind(this, 'onclose')));
  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
};

/**
 * Called upon a ping.
 *
 * @api private
 */

Manager.prototype.onping = function () {
  this.lastPing = new Date();
  this.emitAll('ping');
};

/**
 * Called upon a packet.
 *
 * @api private
 */

Manager.prototype.onpong = function () {
  this.emitAll('pong', new Date() - this.lastPing);
};

/**
 * Called with data.
 *
 * @api private
 */

Manager.prototype.ondata = function (data) {
  this.decoder.add(data);
};

/**
 * Called when parser fully decodes a packet.
 *
 * @api private
 */

Manager.prototype.ondecoded = function (packet) {
  this.emit('packet', packet);
};

/**
 * Called upon socket error.
 *
 * @api private
 */

Manager.prototype.onerror = function (err) {
  debug('error', err);
  this.emitAll('error', err);
};

/**
 * Creates a new socket for the given `nsp`.
 *
 * @return {Socket}
 * @api public
 */

Manager.prototype.socket = function (nsp, opts) {
  var socket = this.nsps[nsp];
  if (!socket) {
    socket = new Socket(this, nsp, opts);
    this.nsps[nsp] = socket;
    var self = this;
    socket.on('connecting', onConnecting);
    socket.on('connect', function () {
      socket.id = self.generateId(nsp);
    });

    if (this.autoConnect) {
      // manually call here since connecting event is fired before listening
      onConnecting();
    }
  }

  function onConnecting () {
    if (!~indexOf(self.connecting, socket)) {
      self.connecting.push(socket);
    }
  }

  return socket;
};

/**
 * Called upon a socket close.
 *
 * @param {Socket} socket
 */

Manager.prototype.destroy = function (socket) {
  var index = indexOf(this.connecting, socket);
  if (~index) this.connecting.splice(index, 1);
  if (this.connecting.length) return;

  this.close();
};

/**
 * Writes a packet.
 *
 * @param {Object} packet
 * @api private
 */

Manager.prototype.packet = function (packet) {
  debug('writing packet %j', packet);
  var self = this;
  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;

  if (!self.encoding) {
    // encode, then write to engine with result
    self.encoding = true;
    this.encoder.encode(packet, function (encodedPackets) {
      for (var i = 0; i < encodedPackets.length; i++) {
        self.engine.write(encodedPackets[i], packet.options);
      }
      self.encoding = false;
      self.processPacketQueue();
    });
  } else { // add packet to the queue
    self.packetBuffer.push(packet);
  }
};

/**
 * If packet buffer is non-empty, begins encoding the
 * next packet in line.
 *
 * @api private
 */

Manager.prototype.processPacketQueue = function () {
  if (this.packetBuffer.length > 0 && !this.encoding) {
    var pack = this.packetBuffer.shift();
    this.packet(pack);
  }
};

/**
 * Clean up transport subscriptions and packet buffer.
 *
 * @api private
 */

Manager.prototype.cleanup = function () {
  debug('cleanup');

  var subsLength = this.subs.length;
  for (var i = 0; i < subsLength; i++) {
    var sub = this.subs.shift();
    sub.destroy();
  }

  this.packetBuffer = [];
  this.encoding = false;
  this.lastPing = null;

  this.decoder.destroy();
};

/**
 * Close the current socket.
 *
 * @api private
 */

Manager.prototype.close =
Manager.prototype.disconnect = function () {
  debug('disconnect');
  this.skipReconnect = true;
  this.reconnecting = false;
  if ('opening' === this.readyState) {
    // `onclose` will not fire because
    // an open event never happened
    this.cleanup();
  }
  this.backoff.reset();
  this.readyState = 'closed';
  if (this.engine) this.engine.close();
};

/**
 * Called upon engine close.
 *
 * @api private
 */

Manager.prototype.onclose = function (reason) {
  debug('onclose');

  this.cleanup();
  this.backoff.reset();
  this.readyState = 'closed';
  this.emit('close', reason);

  if (this._reconnection && !this.skipReconnect) {
    this.reconnect();
  }
};

/**
 * Attempt a reconnection.
 *
 * @api private
 */

Manager.prototype.reconnect = function () {
  if (this.reconnecting || this.skipReconnect) return this;

  var self = this;

  if (this.backoff.attempts >= this._reconnectionAttempts) {
    debug('reconnect failed');
    this.backoff.reset();
    this.emitAll('reconnect_failed');
    this.reconnecting = false;
  } else {
    var delay = this.backoff.duration();
    debug('will wait %dms before reconnect attempt', delay);

    this.reconnecting = true;
    var timer = setTimeout(function () {
      if (self.skipReconnect) return;

      debug('attempting reconnect');
      self.emitAll('reconnect_attempt', self.backoff.attempts);
      self.emitAll('reconnecting', self.backoff.attempts);

      // check again for the case socket closed in above events
      if (self.skipReconnect) return;

      self.open(function (err) {
        if (err) {
          debug('reconnect attempt error');
          self.reconnecting = false;
          self.reconnect();
          self.emitAll('reconnect_error', err.data);
        } else {
          debug('reconnect success');
          self.onreconnect();
        }
      });
    }, delay);

    this.subs.push({
      destroy: function () {
        clearTimeout(timer);
      }
    });
  }
};

/**
 * Called upon successful reconnect.
 *
 * @api private
 */

Manager.prototype.onreconnect = function () {
  var attempt = this.backoff.attempts;
  this.reconnecting = false;
  this.backoff.reset();
  this.updateSocketIds();
  this.emitAll('reconnect', attempt);
};


/***/ }),

/***/ "./node_modules/socket.io-client/lib/on.js":
/*!*************************************************!*\
  !*** ./node_modules/socket.io-client/lib/on.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * Module exports.
 */

module.exports = on;

/**
 * Helper for subscriptions.
 *
 * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`
 * @param {String} event name
 * @param {Function} callback
 * @api public
 */

function on (obj, ev, fn) {
  obj.on(ev, fn);
  return {
    destroy: function () {
      obj.removeListener(ev, fn);
    }
  };
}


/***/ }),

/***/ "./node_modules/socket.io-client/lib/socket.js":
/*!*****************************************************!*\
  !*** ./node_modules/socket.io-client/lib/socket.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var parser = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-client/node_modules/socket.io-parser/index.js");
var Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");
var toArray = __webpack_require__(/*! to-array */ "./node_modules/to-array/index.js");
var on = __webpack_require__(/*! ./on */ "./node_modules/socket.io-client/lib/on.js");
var bind = __webpack_require__(/*! component-bind */ "./node_modules/component-bind/index.js");
var debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")('socket.io-client:socket');
var parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");
var hasBin = __webpack_require__(/*! has-binary2 */ "./node_modules/has-binary2/index.js");

/**
 * Module exports.
 */

module.exports = exports = Socket;

/**
 * Internal events (blacklisted).
 * These events can't be emitted by the user.
 *
 * @api private
 */

var events = {
  connect: 1,
  connect_error: 1,
  connect_timeout: 1,
  connecting: 1,
  disconnect: 1,
  error: 1,
  reconnect: 1,
  reconnect_attempt: 1,
  reconnect_failed: 1,
  reconnect_error: 1,
  reconnecting: 1,
  ping: 1,
  pong: 1
};

/**
 * Shortcut to `Emitter#emit`.
 */

var emit = Emitter.prototype.emit;

/**
 * `Socket` constructor.
 *
 * @api public
 */

function Socket (io, nsp, opts) {
  this.io = io;
  this.nsp = nsp;
  this.json = this; // compat
  this.ids = 0;
  this.acks = {};
  this.receiveBuffer = [];
  this.sendBuffer = [];
  this.connected = false;
  this.disconnected = true;
  this.flags = {};
  if (opts && opts.query) {
    this.query = opts.query;
  }
  if (this.io.autoConnect) this.open();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Subscribe to open, close and packet events
 *
 * @api private
 */

Socket.prototype.subEvents = function () {
  if (this.subs) return;

  var io = this.io;
  this.subs = [
    on(io, 'open', bind(this, 'onopen')),
    on(io, 'packet', bind(this, 'onpacket')),
    on(io, 'close', bind(this, 'onclose'))
  ];
};

/**
 * "Opens" the socket.
 *
 * @api public
 */

Socket.prototype.open =
Socket.prototype.connect = function () {
  if (this.connected) return this;

  this.subEvents();
  this.io.open(); // ensure open
  if ('open' === this.io.readyState) this.onopen();
  this.emit('connecting');
  return this;
};

/**
 * Sends a `message` event.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.send = function () {
  var args = toArray(arguments);
  args.unshift('message');
  this.emit.apply(this, args);
  return this;
};

/**
 * Override `emit`.
 * If the event is in `events`, it's emitted normally.
 *
 * @param {String} event name
 * @return {Socket} self
 * @api public
 */

Socket.prototype.emit = function (ev) {
  if (events.hasOwnProperty(ev)) {
    emit.apply(this, arguments);
    return this;
  }

  var args = toArray(arguments);
  var packet = {
    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,
    data: args
  };

  packet.options = {};
  packet.options.compress = !this.flags || false !== this.flags.compress;

  // event ack callback
  if ('function' === typeof args[args.length - 1]) {
    debug('emitting packet with ack id %d', this.ids);
    this.acks[this.ids] = args.pop();
    packet.id = this.ids++;
  }

  if (this.connected) {
    this.packet(packet);
  } else {
    this.sendBuffer.push(packet);
  }

  this.flags = {};

  return this;
};

/**
 * Sends a packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.packet = function (packet) {
  packet.nsp = this.nsp;
  this.io.packet(packet);
};

/**
 * Called upon engine `open`.
 *
 * @api private
 */

Socket.prototype.onopen = function () {
  debug('transport is open - connecting');

  // write connect packet if necessary
  if ('/' !== this.nsp) {
    if (this.query) {
      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;
      debug('sending connect packet with query %s', query);
      this.packet({type: parser.CONNECT, query: query});
    } else {
      this.packet({type: parser.CONNECT});
    }
  }
};

/**
 * Called upon engine `close`.
 *
 * @param {String} reason
 * @api private
 */

Socket.prototype.onclose = function (reason) {
  debug('close (%s)', reason);
  this.connected = false;
  this.disconnected = true;
  delete this.id;
  this.emit('disconnect', reason);
};

/**
 * Called with socket packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onpacket = function (packet) {
  var sameNamespace = packet.nsp === this.nsp;
  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';

  if (!sameNamespace && !rootNamespaceError) return;

  switch (packet.type) {
    case parser.CONNECT:
      this.onconnect();
      break;

    case parser.EVENT:
      this.onevent(packet);
      break;

    case parser.BINARY_EVENT:
      this.onevent(packet);
      break;

    case parser.ACK:
      this.onack(packet);
      break;

    case parser.BINARY_ACK:
      this.onack(packet);
      break;

    case parser.DISCONNECT:
      this.ondisconnect();
      break;

    case parser.ERROR:
      this.emit('error', packet.data);
      break;
  }
};

/**
 * Called upon a server event.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onevent = function (packet) {
  var args = packet.data || [];
  debug('emitting event %j', args);

  if (null != packet.id) {
    debug('attaching ack callback to event');
    args.push(this.ack(packet.id));
  }

  if (this.connected) {
    emit.apply(this, args);
  } else {
    this.receiveBuffer.push(args);
  }
};

/**
 * Produces an ack callback to emit with an event.
 *
 * @api private
 */

Socket.prototype.ack = function (id) {
  var self = this;
  var sent = false;
  return function () {
    // prevent double callbacks
    if (sent) return;
    sent = true;
    var args = toArray(arguments);
    debug('sending ack %j', args);

    self.packet({
      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,
      id: id,
      data: args
    });
  };
};

/**
 * Called upon a server acknowlegement.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onack = function (packet) {
  var ack = this.acks[packet.id];
  if ('function' === typeof ack) {
    debug('calling ack %s with %j', packet.id, packet.data);
    ack.apply(this, packet.data);
    delete this.acks[packet.id];
  } else {
    debug('bad ack %s', packet.id);
  }
};

/**
 * Called upon server connect.
 *
 * @api private
 */

Socket.prototype.onconnect = function () {
  this.connected = true;
  this.disconnected = false;
  this.emit('connect');
  this.emitBuffered();
};

/**
 * Emit buffered events (received and emitted).
 *
 * @api private
 */

Socket.prototype.emitBuffered = function () {
  var i;
  for (i = 0; i < this.receiveBuffer.length; i++) {
    emit.apply(this, this.receiveBuffer[i]);
  }
  this.receiveBuffer = [];

  for (i = 0; i < this.sendBuffer.length; i++) {
    this.packet(this.sendBuffer[i]);
  }
  this.sendBuffer = [];
};

/**
 * Called upon server disconnect.
 *
 * @api private
 */

Socket.prototype.ondisconnect = function () {
  debug('server disconnect (%s)', this.nsp);
  this.destroy();
  this.onclose('io server disconnect');
};

/**
 * Called upon forced client/server side disconnections,
 * this method ensures the manager stops tracking us and
 * that reconnections don't get triggered for this.
 *
 * @api private.
 */

Socket.prototype.destroy = function () {
  if (this.subs) {
    // clean subscriptions to avoid reconnections
    for (var i = 0; i < this.subs.length; i++) {
      this.subs[i].destroy();
    }
    this.subs = null;
  }

  this.io.destroy(this);
};

/**
 * Disconnects the socket manually.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.close =
Socket.prototype.disconnect = function () {
  if (this.connected) {
    debug('performing disconnect (%s)', this.nsp);
    this.packet({ type: parser.DISCONNECT });
  }

  // remove socket from pool
  this.destroy();

  if (this.connected) {
    // fire events
    this.onclose('io client disconnect');
  }
  return this;
};

/**
 * Sets the compress flag.
 *
 * @param {Boolean} if `true`, compresses the sending data
 * @return {Socket} self
 * @api public
 */

Socket.prototype.compress = function (compress) {
  this.flags.compress = compress;
  return this;
};

/**
 * Sets the binary flag
 *
 * @param {Boolean} whether the emitted data contains binary
 * @return {Socket} self
 * @api public
 */

Socket.prototype.binary = function (binary) {
  this.flags.binary = binary;
  return this;
};


/***/ }),

/***/ "./node_modules/socket.io-client/lib/url.js":
/*!**************************************************!*\
  !*** ./node_modules/socket.io-client/lib/url.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var parseuri = __webpack_require__(/*! parseuri */ "./node_modules/parseuri/index.js");
var debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")('socket.io-client:url');

/**
 * Module exports.
 */

module.exports = url;

/**
 * URL parser.
 *
 * @param {String} url
 * @param {Object} An object meant to mimic window.location.
 *                 Defaults to window.location.
 * @api public
 */

function url (uri, loc) {
  var obj = uri;

  // default to window.location
  loc = loc || (typeof location !== 'undefined' && location);
  if (null == uri) uri = loc.protocol + '//' + loc.host;

  // relative path support
  if ('string' === typeof uri) {
    if ('/' === uri.charAt(0)) {
      if ('/' === uri.charAt(1)) {
        uri = loc.protocol + uri;
      } else {
        uri = loc.host + uri;
      }
    }

    if (!/^(https?|wss?):\/\//.test(uri)) {
      debug('protocol-less url %s', uri);
      if ('undefined' !== typeof loc) {
        uri = loc.protocol + '//' + uri;
      } else {
        uri = 'https://' + uri;
      }
    }

    // parse
    debug('parse %s', uri);
    obj = parseuri(uri);
  }

  // make sure we treat `localhost:80` and `localhost` equally
  if (!obj.port) {
    if (/^(http|ws)$/.test(obj.protocol)) {
      obj.port = '80';
    } else if (/^(http|ws)s$/.test(obj.protocol)) {
      obj.port = '443';
    }
  }

  obj.path = obj.path || '/';

  var ipv6 = obj.host.indexOf(':') !== -1;
  var host = ipv6 ? '[' + obj.host + ']' : obj.host;

  // define unique id
  obj.id = obj.protocol + '://' + host + ':' + obj.port;
  // define href
  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));

  return obj;
}


/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/debug/src/browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/debug/src/browser.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(/*! ./debug */ "./node_modules/socket.io-client/node_modules/debug/src/debug.js");
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/debug/src/debug.js":
/*!***********************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/debug/src/debug.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __webpack_require__(/*! ms */ "./node_modules/ms/index.js");

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/isarray/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/isarray/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/socket.io-parser/binary.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/socket.io-parser/binary.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*global Blob,File*/

/**
 * Module requirements
 */

var isArray = __webpack_require__(/*! isarray */ "./node_modules/socket.io-client/node_modules/isarray/index.js");
var isBuf = __webpack_require__(/*! ./is-buffer */ "./node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js");
var toString = Object.prototype.toString;
var withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');
var withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');

/**
 * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.
 * Anything with blobs or files should be fed through removeBlobs before coming
 * here.
 *
 * @param {Object} packet - socket.io event packet
 * @return {Object} with deconstructed packet and list of buffers
 * @api public
 */

exports.deconstructPacket = function(packet) {
  var buffers = [];
  var packetData = packet.data;
  var pack = packet;
  pack.data = _deconstructPacket(packetData, buffers);
  pack.attachments = buffers.length; // number of binary 'attachments'
  return {packet: pack, buffers: buffers};
};

function _deconstructPacket(data, buffers) {
  if (!data) return data;

  if (isBuf(data)) {
    var placeholder = { _placeholder: true, num: buffers.length };
    buffers.push(data);
    return placeholder;
  } else if (isArray(data)) {
    var newData = new Array(data.length);
    for (var i = 0; i < data.length; i++) {
      newData[i] = _deconstructPacket(data[i], buffers);
    }
    return newData;
  } else if (typeof data === 'object' && !(data instanceof Date)) {
    var newData = {};
    for (var key in data) {
      newData[key] = _deconstructPacket(data[key], buffers);
    }
    return newData;
  }
  return data;
}

/**
 * Reconstructs a binary packet from its placeholder packet and buffers
 *
 * @param {Object} packet - event packet with placeholders
 * @param {Array} buffers - binary buffers to put in placeholder positions
 * @return {Object} reconstructed packet
 * @api public
 */

exports.reconstructPacket = function(packet, buffers) {
  packet.data = _reconstructPacket(packet.data, buffers);
  packet.attachments = undefined; // no longer useful
  return packet;
};

function _reconstructPacket(data, buffers) {
  if (!data) return data;

  if (data && data._placeholder) {
    return buffers[data.num]; // appropriate buffer (should be natural order anyway)
  } else if (isArray(data)) {
    for (var i = 0; i < data.length; i++) {
      data[i] = _reconstructPacket(data[i], buffers);
    }
  } else if (typeof data === 'object') {
    for (var key in data) {
      data[key] = _reconstructPacket(data[key], buffers);
    }
  }

  return data;
}

/**
 * Asynchronously removes Blobs or Files from data via
 * FileReader's readAsArrayBuffer method. Used before encoding
 * data as msgpack. Calls callback with the blobless data.
 *
 * @param {Object} data
 * @param {Function} callback
 * @api private
 */

exports.removeBlobs = function(data, callback) {
  function _removeBlobs(obj, curKey, containingObject) {
    if (!obj) return obj;

    // convert any blob
    if ((withNativeBlob && obj instanceof Blob) ||
        (withNativeFile && obj instanceof File)) {
      pendingBlobs++;

      // async filereader
      var fileReader = new FileReader();
      fileReader.onload = function() { // this.result == arraybuffer
        if (containingObject) {
          containingObject[curKey] = this.result;
        }
        else {
          bloblessData = this.result;
        }

        // if nothing pending its callback time
        if(! --pendingBlobs) {
          callback(bloblessData);
        }
      };

      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer
    } else if (isArray(obj)) { // handle array
      for (var i = 0; i < obj.length; i++) {
        _removeBlobs(obj[i], i, obj);
      }
    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object
      for (var key in obj) {
        _removeBlobs(obj[key], key, obj);
      }
    }
  }

  var pendingBlobs = 0;
  var bloblessData = data;
  _removeBlobs(bloblessData);
  if (!pendingBlobs) {
    callback(bloblessData);
  }
};


/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/socket.io-parser/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/socket.io-parser/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")('socket.io-parser');
var Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");
var binary = __webpack_require__(/*! ./binary */ "./node_modules/socket.io-client/node_modules/socket.io-parser/binary.js");
var isArray = __webpack_require__(/*! isarray */ "./node_modules/socket.io-client/node_modules/isarray/index.js");
var isBuf = __webpack_require__(/*! ./is-buffer */ "./node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js");

/**
 * Protocol version.
 *
 * @api public
 */

exports.protocol = 4;

/**
 * Packet types.
 *
 * @api public
 */

exports.types = [
  'CONNECT',
  'DISCONNECT',
  'EVENT',
  'ACK',
  'ERROR',
  'BINARY_EVENT',
  'BINARY_ACK'
];

/**
 * Packet type `connect`.
 *
 * @api public
 */

exports.CONNECT = 0;

/**
 * Packet type `disconnect`.
 *
 * @api public
 */

exports.DISCONNECT = 1;

/**
 * Packet type `event`.
 *
 * @api public
 */

exports.EVENT = 2;

/**
 * Packet type `ack`.
 *
 * @api public
 */

exports.ACK = 3;

/**
 * Packet type `error`.
 *
 * @api public
 */

exports.ERROR = 4;

/**
 * Packet type 'binary event'
 *
 * @api public
 */

exports.BINARY_EVENT = 5;

/**
 * Packet type `binary ack`. For acks with binary arguments.
 *
 * @api public
 */

exports.BINARY_ACK = 6;

/**
 * Encoder constructor.
 *
 * @api public
 */

exports.Encoder = Encoder;

/**
 * Decoder constructor.
 *
 * @api public
 */

exports.Decoder = Decoder;

/**
 * A socket.io Encoder instance
 *
 * @api public
 */

function Encoder() {}

var ERROR_PACKET = exports.ERROR + '"encode error"';

/**
 * Encode a packet as a single string if non-binary, or as a
 * buffer sequence, depending on packet type.
 *
 * @param {Object} obj - packet object
 * @param {Function} callback - function to handle encodings (likely engine.write)
 * @return Calls callback with Array of encodings
 * @api public
 */

Encoder.prototype.encode = function(obj, callback){
  debug('encoding packet %j', obj);

  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
    encodeAsBinary(obj, callback);
  } else {
    var encoding = encodeAsString(obj);
    callback([encoding]);
  }
};

/**
 * Encode packet as string.
 *
 * @param {Object} packet
 * @return {String} encoded
 * @api private
 */

function encodeAsString(obj) {

  // first is type
  var str = '' + obj.type;

  // attachments if we have them
  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
    str += obj.attachments + '-';
  }

  // if we have a namespace other than `/`
  // we append it followed by a comma `,`
  if (obj.nsp && '/' !== obj.nsp) {
    str += obj.nsp + ',';
  }

  // immediately followed by the id
  if (null != obj.id) {
    str += obj.id;
  }

  // json data
  if (null != obj.data) {
    var payload = tryStringify(obj.data);
    if (payload !== false) {
      str += payload;
    } else {
      return ERROR_PACKET;
    }
  }

  debug('encoded %j as %s', obj, str);
  return str;
}

function tryStringify(str) {
  try {
    return JSON.stringify(str);
  } catch(e){
    return false;
  }
}

/**
 * Encode packet as 'buffer sequence' by removing blobs, and
 * deconstructing packet into object with placeholders and
 * a list of buffers.
 *
 * @param {Object} packet
 * @return {Buffer} encoded
 * @api private
 */

function encodeAsBinary(obj, callback) {

  function writeEncoding(bloblessData) {
    var deconstruction = binary.deconstructPacket(bloblessData);
    var pack = encodeAsString(deconstruction.packet);
    var buffers = deconstruction.buffers;

    buffers.unshift(pack); // add packet info to beginning of data list
    callback(buffers); // write all the buffers
  }

  binary.removeBlobs(obj, writeEncoding);
}

/**
 * A socket.io Decoder instance
 *
 * @return {Object} decoder
 * @api public
 */

function Decoder() {
  this.reconstructor = null;
}

/**
 * Mix in `Emitter` with Decoder.
 */

Emitter(Decoder.prototype);

/**
 * Decodes an encoded packet string into packet JSON.
 *
 * @param {String} obj - encoded packet
 * @return {Object} packet
 * @api public
 */

Decoder.prototype.add = function(obj) {
  var packet;
  if (typeof obj === 'string') {
    packet = decodeString(obj);
    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json
      this.reconstructor = new BinaryReconstructor(packet);

      // no attachments, labeled binary but no binary data to follow
      if (this.reconstructor.reconPack.attachments === 0) {
        this.emit('decoded', packet);
      }
    } else { // non-binary full packet
      this.emit('decoded', packet);
    }
  } else if (isBuf(obj) || obj.base64) { // raw binary data
    if (!this.reconstructor) {
      throw new Error('got binary data when not reconstructing a packet');
    } else {
      packet = this.reconstructor.takeBinaryData(obj);
      if (packet) { // received final buffer
        this.reconstructor = null;
        this.emit('decoded', packet);
      }
    }
  } else {
    throw new Error('Unknown type: ' + obj);
  }
};

/**
 * Decode a packet String (JSON data)
 *
 * @param {String} str
 * @return {Object} packet
 * @api private
 */

function decodeString(str) {
  var i = 0;
  // look up type
  var p = {
    type: Number(str.charAt(0))
  };

  if (null == exports.types[p.type]) {
    return error('unknown packet type ' + p.type);
  }

  // look up attachments if type binary
  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {
    var buf = '';
    while (str.charAt(++i) !== '-') {
      buf += str.charAt(i);
      if (i == str.length) break;
    }
    if (buf != Number(buf) || str.charAt(i) !== '-') {
      throw new Error('Illegal attachments');
    }
    p.attachments = Number(buf);
  }

  // look up namespace (if any)
  if ('/' === str.charAt(i + 1)) {
    p.nsp = '';
    while (++i) {
      var c = str.charAt(i);
      if (',' === c) break;
      p.nsp += c;
      if (i === str.length) break;
    }
  } else {
    p.nsp = '/';
  }

  // look up id
  var next = str.charAt(i + 1);
  if ('' !== next && Number(next) == next) {
    p.id = '';
    while (++i) {
      var c = str.charAt(i);
      if (null == c || Number(c) != c) {
        --i;
        break;
      }
      p.id += str.charAt(i);
      if (i === str.length) break;
    }
    p.id = Number(p.id);
  }

  // look up json data
  if (str.charAt(++i)) {
    var payload = tryParse(str.substr(i));
    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));
    if (isPayloadValid) {
      p.data = payload;
    } else {
      return error('invalid payload');
    }
  }

  debug('decoded %s as %j', str, p);
  return p;
}

function tryParse(str) {
  try {
    return JSON.parse(str);
  } catch(e){
    return false;
  }
}

/**
 * Deallocates a parser's resources
 *
 * @api public
 */

Decoder.prototype.destroy = function() {
  if (this.reconstructor) {
    this.reconstructor.finishedReconstruction();
  }
};

/**
 * A manager of a binary event's 'buffer sequence'. Should
 * be constructed whenever a packet of type BINARY_EVENT is
 * decoded.
 *
 * @param {Object} packet
 * @return {BinaryReconstructor} initialized reconstructor
 * @api private
 */

function BinaryReconstructor(packet) {
  this.reconPack = packet;
  this.buffers = [];
}

/**
 * Method to be called when binary data received from connection
 * after a BINARY_EVENT packet.
 *
 * @param {Buffer | ArrayBuffer} binData - the raw binary data received
 * @return {null | Object} returns null if more binary data is expected or
 *   a reconstructed packet object if all buffers have been received.
 * @api private
 */

BinaryReconstructor.prototype.takeBinaryData = function(binData) {
  this.buffers.push(binData);
  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list
    var packet = binary.reconstructPacket(this.reconPack, this.buffers);
    this.finishedReconstruction();
    return packet;
  }
  return null;
};

/**
 * Cleans up binary packet reconstruction variables.
 *
 * @api private
 */

BinaryReconstructor.prototype.finishedReconstruction = function() {
  this.reconPack = null;
  this.buffers = [];
};

function error(msg) {
  return {
    type: exports.ERROR,
    data: 'parser error: ' + msg
  };
}


/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {
module.exports = isBuf;

var withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';
var withNativeArrayBuffer = typeof ArrayBuffer === 'function';

var isView = function (obj) {
  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);
};

/**
 * Returns true if obj is a buffer or an arraybuffer.
 *
 * @api private
 */

function isBuf(obj) {
  return (withNativeBuffer && Buffer.isBuffer(obj)) ||
          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/to-array/index.js":
/*!****************************************!*\
  !*** ./node_modules/to-array/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = toArray

function toArray(list, index) {
    var array = []

    index = index || 0

    for (var i = index || 0; i < list.length; i++) {
        array[i - index] = list[i]
    }

    return array
}


/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/adapter_core.js":
/*!************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/adapter_core.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adapter_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adapter_factory.js */ "./node_modules/webrtc-adapter/src/js/adapter_factory.js");
/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
/* eslint-env node */





const adapter = Object(_adapter_factory_js__WEBPACK_IMPORTED_MODULE_0__["adapterFactory"])({window});
/* harmony default export */ __webpack_exports__["default"] = (adapter);


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/adapter_factory.js":
/*!***************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/adapter_factory.js ***!
  \***************************************************************/
/*! exports provided: adapterFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adapterFactory", function() { return adapterFactory; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ "./node_modules/webrtc-adapter/src/js/utils.js");
/* harmony import */ var _chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chrome/chrome_shim */ "./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js");
/* harmony import */ var _edge_edge_shim__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./edge/edge_shim */ "./node_modules/webrtc-adapter/src/js/edge/edge_shim.js");
/* harmony import */ var _firefox_firefox_shim__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./firefox/firefox_shim */ "./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js");
/* harmony import */ var _safari_safari_shim__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./safari/safari_shim */ "./node_modules/webrtc-adapter/src/js/safari/safari_shim.js");
/* harmony import */ var _common_shim__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common_shim */ "./node_modules/webrtc-adapter/src/js/common_shim.js");
/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */


  // Browser shims.






// Shimming starts here.
function adapterFactory({window} = {}, options = {
  shimChrome: true,
  shimFirefox: true,
  shimEdge: true,
  shimSafari: true,
}) {
  // Utils.
  const logging = _utils__WEBPACK_IMPORTED_MODULE_0__["log"];
  const browserDetails = _utils__WEBPACK_IMPORTED_MODULE_0__["detectBrowser"](window);

  const adapter = {
    browserDetails,
    commonShim: _common_shim__WEBPACK_IMPORTED_MODULE_5__,
    extractVersion: _utils__WEBPACK_IMPORTED_MODULE_0__["extractVersion"],
    disableLog: _utils__WEBPACK_IMPORTED_MODULE_0__["disableLog"],
    disableWarnings: _utils__WEBPACK_IMPORTED_MODULE_0__["disableWarnings"]
  };

  // Shim browser if found.
  switch (browserDetails.browser) {
    case 'chrome':
      if (!_chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__ || !_chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__["shimPeerConnection"] ||
          !options.shimChrome) {
        logging('Chrome shim is not included in this adapter release.');
        return adapter;
      }
      logging('adapter.js shimming chrome.');
      // Export to the adapter global object visible in the browser.
      adapter.browserShim = _chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__;

      _chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__["shimGetUserMedia"](window);
      _chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__["shimMediaStream"](window);
      _chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__["shimPeerConnection"](window);
      _chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__["shimOnTrack"](window);
      _chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__["shimAddTrackRemoveTrack"](window);
      _chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__["shimGetSendersWithDtmf"](window);
      _chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__["shimSenderReceiverGetStats"](window);
      _chrome_chrome_shim__WEBPACK_IMPORTED_MODULE_1__["fixNegotiationNeeded"](window);

      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimRTCIceCandidate"](window);
      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimConnectionState"](window);
      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimMaxMessageSize"](window);
      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimSendThrowTypeError"](window);
      _common_shim__WEBPACK_IMPORTED_MODULE_5__["removeAllowExtmapMixed"](window);
      break;
    case 'firefox':
      if (!_firefox_firefox_shim__WEBPACK_IMPORTED_MODULE_3__ || !_firefox_firefox_shim__WEBPACK_IMPORTED_MODULE_3__["shimPeerConnection"] ||
          !options.shimFirefox) {
        logging('Firefox shim is not included in this adapter release.');
        return adapter;
      }
      logging('adapter.js shimming firefox.');
      // Export to the adapter global object visible in the browser.
      adapter.browserShim = _firefox_firefox_shim__WEBPACK_IMPORTED_MODULE_3__;

      _firefox_firefox_shim__WEBPACK_IMPORTED_MODULE_3__["shimGetUserMedia"](window);
      _firefox_firefox_shim__WEBPACK_IMPORTED_MODULE_3__["shimPeerConnection"](window);
      _firefox_firefox_shim__WEBPACK_IMPORTED_MODULE_3__["shimOnTrack"](window);
      _firefox_firefox_shim__WEBPACK_IMPORTED_MODULE_3__["shimRemoveStream"](window);
      _firefox_firefox_shim__WEBPACK_IMPORTED_MODULE_3__["shimSenderGetStats"](window);
      _firefox_firefox_shim__WEBPACK_IMPORTED_MODULE_3__["shimReceiverGetStats"](window);
      _firefox_firefox_shim__WEBPACK_IMPORTED_MODULE_3__["shimRTCDataChannel"](window);

      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimRTCIceCandidate"](window);
      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimConnectionState"](window);
      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimMaxMessageSize"](window);
      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimSendThrowTypeError"](window);
      break;
    case 'edge':
      if (!_edge_edge_shim__WEBPACK_IMPORTED_MODULE_2__ || !_edge_edge_shim__WEBPACK_IMPORTED_MODULE_2__["shimPeerConnection"] || !options.shimEdge) {
        logging('MS edge shim is not included in this adapter release.');
        return adapter;
      }
      logging('adapter.js shimming edge.');
      // Export to the adapter global object visible in the browser.
      adapter.browserShim = _edge_edge_shim__WEBPACK_IMPORTED_MODULE_2__;

      _edge_edge_shim__WEBPACK_IMPORTED_MODULE_2__["shimGetUserMedia"](window);
      _edge_edge_shim__WEBPACK_IMPORTED_MODULE_2__["shimGetDisplayMedia"](window);
      _edge_edge_shim__WEBPACK_IMPORTED_MODULE_2__["shimPeerConnection"](window);
      _edge_edge_shim__WEBPACK_IMPORTED_MODULE_2__["shimReplaceTrack"](window);

      // the edge shim implements the full RTCIceCandidate object.

      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimMaxMessageSize"](window);
      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimSendThrowTypeError"](window);
      break;
    case 'safari':
      if (!_safari_safari_shim__WEBPACK_IMPORTED_MODULE_4__ || !options.shimSafari) {
        logging('Safari shim is not included in this adapter release.');
        return adapter;
      }
      logging('adapter.js shimming safari.');
      // Export to the adapter global object visible in the browser.
      adapter.browserShim = _safari_safari_shim__WEBPACK_IMPORTED_MODULE_4__;

      _safari_safari_shim__WEBPACK_IMPORTED_MODULE_4__["shimRTCIceServerUrls"](window);
      _safari_safari_shim__WEBPACK_IMPORTED_MODULE_4__["shimCreateOfferLegacy"](window);
      _safari_safari_shim__WEBPACK_IMPORTED_MODULE_4__["shimCallbacksAPI"](window);
      _safari_safari_shim__WEBPACK_IMPORTED_MODULE_4__["shimLocalStreamsAPI"](window);
      _safari_safari_shim__WEBPACK_IMPORTED_MODULE_4__["shimRemoteStreamsAPI"](window);
      _safari_safari_shim__WEBPACK_IMPORTED_MODULE_4__["shimTrackEventTransceiver"](window);
      _safari_safari_shim__WEBPACK_IMPORTED_MODULE_4__["shimGetUserMedia"](window);

      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimRTCIceCandidate"](window);
      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimMaxMessageSize"](window);
      _common_shim__WEBPACK_IMPORTED_MODULE_5__["shimSendThrowTypeError"](window);
      _common_shim__WEBPACK_IMPORTED_MODULE_5__["removeAllowExtmapMixed"](window);
      break;
    default:
      logging('Unsupported browser!');
      break;
  }

  return adapter;
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js":
/*!******************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js ***!
  \******************************************************************/
/*! exports provided: shimGetUserMedia, shimGetDisplayMedia, shimMediaStream, shimOnTrack, shimGetSendersWithDtmf, shimSenderReceiverGetStats, shimAddTrackRemoveTrackWithNative, shimAddTrackRemoveTrack, shimPeerConnection, fixNegotiationNeeded */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimMediaStream", function() { return shimMediaStream; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimOnTrack", function() { return shimOnTrack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimGetSendersWithDtmf", function() { return shimGetSendersWithDtmf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimSenderReceiverGetStats", function() { return shimSenderReceiverGetStats; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimAddTrackRemoveTrackWithNative", function() { return shimAddTrackRemoveTrackWithNative; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimAddTrackRemoveTrack", function() { return shimAddTrackRemoveTrack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimPeerConnection", function() { return shimPeerConnection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fixNegotiationNeeded", function() { return fixNegotiationNeeded; });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/webrtc-adapter/src/js/utils.js");
/* harmony import */ var _getusermedia__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getusermedia */ "./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shimGetUserMedia", function() { return _getusermedia__WEBPACK_IMPORTED_MODULE_1__["shimGetUserMedia"]; });

/* harmony import */ var _getdisplaymedia__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getdisplaymedia */ "./node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shimGetDisplayMedia", function() { return _getdisplaymedia__WEBPACK_IMPORTED_MODULE_2__["shimGetDisplayMedia"]; });


/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
 /* eslint-env node */



/* iterates the stats graph recursively. */
function walkStats(stats, base, resultSet) {
  if (!base || resultSet.has(base.id)) {
    return;
  }
  resultSet.set(base.id, base);
  Object.keys(base).forEach(name => {
    if (name.endsWith('Id')) {
      walkStats(stats, stats.get(base[name]), resultSet);
    } else if (name.endsWith('Ids')) {
      base[name].forEach(id => {
        walkStats(stats, stats.get(id), resultSet);
      });
    }
  });
}

/* filter getStats for a sender/receiver track. */
function filterStats(result, track, outbound) {
  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';
  const filteredResult = new Map();
  if (track === null) {
    return filteredResult;
  }
  const trackStats = [];
  result.forEach(value => {
    if (value.type === 'track' &&
        value.trackIdentifier === track.id) {
      trackStats.push(value);
    }
  });
  trackStats.forEach(trackStat => {
    result.forEach(stats => {
      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {
        walkStats(result, stats, filteredResult);
      }
    });
  });
  return filteredResult;
}




function shimMediaStream(window) {
  window.MediaStream = window.MediaStream || window.webkitMediaStream;
}

function shimOnTrack(window) {
  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in
      window.RTCPeerConnection.prototype)) {
    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {
      get() {
        return this._ontrack;
      },
      set(f) {
        if (this._ontrack) {
          this.removeEventListener('track', this._ontrack);
        }
        this.addEventListener('track', this._ontrack = f);
      },
      enumerable: true,
      configurable: true
    });
    const origSetRemoteDescription =
        window.RTCPeerConnection.prototype.setRemoteDescription;
    window.RTCPeerConnection.prototype.setRemoteDescription = function() {
      if (!this._ontrackpoly) {
        this._ontrackpoly = (e) => {
          // onaddstream does not fire when a track is added to an existing
          // stream. But stream.onaddtrack is implemented so we use that.
          e.stream.addEventListener('addtrack', te => {
            let receiver;
            if (window.RTCPeerConnection.prototype.getReceivers) {
              receiver = this.getReceivers()
                .find(r => r.track && r.track.id === te.track.id);
            } else {
              receiver = {track: te.track};
            }

            const event = new Event('track');
            event.track = te.track;
            event.receiver = receiver;
            event.transceiver = {receiver};
            event.streams = [e.stream];
            this.dispatchEvent(event);
          });
          e.stream.getTracks().forEach(track => {
            let receiver;
            if (window.RTCPeerConnection.prototype.getReceivers) {
              receiver = this.getReceivers()
                .find(r => r.track && r.track.id === track.id);
            } else {
              receiver = {track};
            }
            const event = new Event('track');
            event.track = track;
            event.receiver = receiver;
            event.transceiver = {receiver};
            event.streams = [e.stream];
            this.dispatchEvent(event);
          });
        };
        this.addEventListener('addstream', this._ontrackpoly);
      }
      return origSetRemoteDescription.apply(this, arguments);
    };
  } else {
    // even if RTCRtpTransceiver is in window, it is only used and
    // emitted in unified-plan. Unfortunately this means we need
    // to unconditionally wrap the event.
    _utils_js__WEBPACK_IMPORTED_MODULE_0__["wrapPeerConnectionEvent"](window, 'track', e => {
      if (!e.transceiver) {
        Object.defineProperty(e, 'transceiver',
          {value: {receiver: e.receiver}});
      }
      return e;
    });
  }
}

function shimGetSendersWithDtmf(window) {
  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.
  if (typeof window === 'object' && window.RTCPeerConnection &&
      !('getSenders' in window.RTCPeerConnection.prototype) &&
      'createDTMFSender' in window.RTCPeerConnection.prototype) {
    const shimSenderWithDtmf = function(pc, track) {
      return {
        track,
        get dtmf() {
          if (this._dtmf === undefined) {
            if (track.kind === 'audio') {
              this._dtmf = pc.createDTMFSender(track);
            } else {
              this._dtmf = null;
            }
          }
          return this._dtmf;
        },
        _pc: pc
      };
    };

    // augment addTrack when getSenders is not available.
    if (!window.RTCPeerConnection.prototype.getSenders) {
      window.RTCPeerConnection.prototype.getSenders = function() {
        this._senders = this._senders || [];
        return this._senders.slice(); // return a copy of the internal state.
      };
      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;
      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {
        let sender = origAddTrack.apply(this, arguments);
        if (!sender) {
          sender = shimSenderWithDtmf(this, track);
          this._senders.push(sender);
        }
        return sender;
      };

      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;
      window.RTCPeerConnection.prototype.removeTrack = function(sender) {
        origRemoveTrack.apply(this, arguments);
        const idx = this._senders.indexOf(sender);
        if (idx !== -1) {
          this._senders.splice(idx, 1);
        }
      };
    }
    const origAddStream = window.RTCPeerConnection.prototype.addStream;
    window.RTCPeerConnection.prototype.addStream = function(stream) {
      this._senders = this._senders || [];
      origAddStream.apply(this, [stream]);
      stream.getTracks().forEach(track => {
        this._senders.push(shimSenderWithDtmf(this, track));
      });
    };

    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;
    window.RTCPeerConnection.prototype.removeStream = function(stream) {
      this._senders = this._senders || [];
      origRemoveStream.apply(this, [stream]);

      stream.getTracks().forEach(track => {
        const sender = this._senders.find(s => s.track === track);
        if (sender) { // remove sender
          this._senders.splice(this._senders.indexOf(sender), 1);
        }
      });
    };
  } else if (typeof window === 'object' && window.RTCPeerConnection &&
             'getSenders' in window.RTCPeerConnection.prototype &&
             'createDTMFSender' in window.RTCPeerConnection.prototype &&
             window.RTCRtpSender &&
             !('dtmf' in window.RTCRtpSender.prototype)) {
    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;
    window.RTCPeerConnection.prototype.getSenders = function() {
      const senders = origGetSenders.apply(this, []);
      senders.forEach(sender => sender._pc = this);
      return senders;
    };

    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {
      get() {
        if (this._dtmf === undefined) {
          if (this.track.kind === 'audio') {
            this._dtmf = this._pc.createDTMFSender(this.track);
          } else {
            this._dtmf = null;
          }
        }
        return this._dtmf;
      }
    });
  }
}

function shimSenderReceiverGetStats(window) {
  if (!(typeof window === 'object' && window.RTCPeerConnection &&
      window.RTCRtpSender && window.RTCRtpReceiver)) {
    return;
  }

  // shim sender stats.
  if (!('getStats' in window.RTCRtpSender.prototype)) {
    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;
    if (origGetSenders) {
      window.RTCPeerConnection.prototype.getSenders = function() {
        const senders = origGetSenders.apply(this, []);
        senders.forEach(sender => sender._pc = this);
        return senders;
      };
    }

    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;
    if (origAddTrack) {
      window.RTCPeerConnection.prototype.addTrack = function() {
        const sender = origAddTrack.apply(this, arguments);
        sender._pc = this;
        return sender;
      };
    }
    window.RTCRtpSender.prototype.getStats = function() {
      const sender = this;
      return this._pc.getStats().then(result =>
        /* Note: this will include stats of all senders that
         *   send a track with the same id as sender.track as
         *   it is not possible to identify the RTCRtpSender.
         */
        filterStats(result, sender.track, true));
    };
  }

  // shim receiver stats.
  if (!('getStats' in window.RTCRtpReceiver.prototype)) {
    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;
    if (origGetReceivers) {
      window.RTCPeerConnection.prototype.getReceivers = function() {
        const receivers = origGetReceivers.apply(this, []);
        receivers.forEach(receiver => receiver._pc = this);
        return receivers;
      };
    }
    _utils_js__WEBPACK_IMPORTED_MODULE_0__["wrapPeerConnectionEvent"](window, 'track', e => {
      e.receiver._pc = e.srcElement;
      return e;
    });
    window.RTCRtpReceiver.prototype.getStats = function() {
      const receiver = this;
      return this._pc.getStats().then(result =>
        filterStats(result, receiver.track, false));
    };
  }

  if (!('getStats' in window.RTCRtpSender.prototype &&
      'getStats' in window.RTCRtpReceiver.prototype)) {
    return;
  }

  // shim RTCPeerConnection.getStats(track).
  const origGetStats = window.RTCPeerConnection.prototype.getStats;
  window.RTCPeerConnection.prototype.getStats = function() {
    if (arguments.length > 0 &&
        arguments[0] instanceof window.MediaStreamTrack) {
      const track = arguments[0];
      let sender;
      let receiver;
      let err;
      this.getSenders().forEach(s => {
        if (s.track === track) {
          if (sender) {
            err = true;
          } else {
            sender = s;
          }
        }
      });
      this.getReceivers().forEach(r => {
        if (r.track === track) {
          if (receiver) {
            err = true;
          } else {
            receiver = r;
          }
        }
        return r.track === track;
      });
      if (err || (sender && receiver)) {
        return Promise.reject(new DOMException(
          'There are more than one sender or receiver for the track.',
          'InvalidAccessError'));
      } else if (sender) {
        return sender.getStats();
      } else if (receiver) {
        return receiver.getStats();
      }
      return Promise.reject(new DOMException(
        'There is no sender or receiver for the track.',
        'InvalidAccessError'));
    }
    return origGetStats.apply(this, arguments);
  };
}

function shimAddTrackRemoveTrackWithNative(window) {
  // shim addTrack/removeTrack with native variants in order to make
  // the interactions with legacy getLocalStreams behave as in other browsers.
  // Keeps a mapping stream.id => [stream, rtpsenders...]
  window.RTCPeerConnection.prototype.getLocalStreams = function() {
    this._shimmedLocalStreams = this._shimmedLocalStreams || {};
    return Object.keys(this._shimmedLocalStreams)
      .map(streamId => this._shimmedLocalStreams[streamId][0]);
  };

  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;
  window.RTCPeerConnection.prototype.addTrack = function(track, stream) {
    if (!stream) {
      return origAddTrack.apply(this, arguments);
    }
    this._shimmedLocalStreams = this._shimmedLocalStreams || {};

    const sender = origAddTrack.apply(this, arguments);
    if (!this._shimmedLocalStreams[stream.id]) {
      this._shimmedLocalStreams[stream.id] = [stream, sender];
    } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {
      this._shimmedLocalStreams[stream.id].push(sender);
    }
    return sender;
  };

  const origAddStream = window.RTCPeerConnection.prototype.addStream;
  window.RTCPeerConnection.prototype.addStream = function(stream) {
    this._shimmedLocalStreams = this._shimmedLocalStreams || {};

    stream.getTracks().forEach(track => {
      const alreadyExists = this.getSenders().find(s => s.track === track);
      if (alreadyExists) {
        throw new DOMException('Track already exists.',
            'InvalidAccessError');
      }
    });
    const existingSenders = this.getSenders();
    origAddStream.apply(this, arguments);
    const newSenders = this.getSenders()
      .filter(newSender => existingSenders.indexOf(newSender) === -1);
    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);
  };

  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;
  window.RTCPeerConnection.prototype.removeStream = function(stream) {
    this._shimmedLocalStreams = this._shimmedLocalStreams || {};
    delete this._shimmedLocalStreams[stream.id];
    return origRemoveStream.apply(this, arguments);
  };

  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;
  window.RTCPeerConnection.prototype.removeTrack = function(sender) {
    this._shimmedLocalStreams = this._shimmedLocalStreams || {};
    if (sender) {
      Object.keys(this._shimmedLocalStreams).forEach(streamId => {
        const idx = this._shimmedLocalStreams[streamId].indexOf(sender);
        if (idx !== -1) {
          this._shimmedLocalStreams[streamId].splice(idx, 1);
        }
        if (this._shimmedLocalStreams[streamId].length === 1) {
          delete this._shimmedLocalStreams[streamId];
        }
      });
    }
    return origRemoveTrack.apply(this, arguments);
  };
}

function shimAddTrackRemoveTrack(window) {
  if (!window.RTCPeerConnection) {
    return;
  }
  const browserDetails = _utils_js__WEBPACK_IMPORTED_MODULE_0__["detectBrowser"](window);
  // shim addTrack and removeTrack.
  if (window.RTCPeerConnection.prototype.addTrack &&
      browserDetails.version >= 65) {
    return shimAddTrackRemoveTrackWithNative(window);
  }

  // also shim pc.getLocalStreams when addTrack is shimmed
  // to return the original streams.
  const origGetLocalStreams = window.RTCPeerConnection.prototype
      .getLocalStreams;
  window.RTCPeerConnection.prototype.getLocalStreams = function() {
    const nativeStreams = origGetLocalStreams.apply(this);
    this._reverseStreams = this._reverseStreams || {};
    return nativeStreams.map(stream => this._reverseStreams[stream.id]);
  };

  const origAddStream = window.RTCPeerConnection.prototype.addStream;
  window.RTCPeerConnection.prototype.addStream = function(stream) {
    this._streams = this._streams || {};
    this._reverseStreams = this._reverseStreams || {};

    stream.getTracks().forEach(track => {
      const alreadyExists = this.getSenders().find(s => s.track === track);
      if (alreadyExists) {
        throw new DOMException('Track already exists.',
            'InvalidAccessError');
      }
    });
    // Add identity mapping for consistency with addTrack.
    // Unless this is being used with a stream from addTrack.
    if (!this._reverseStreams[stream.id]) {
      const newStream = new window.MediaStream(stream.getTracks());
      this._streams[stream.id] = newStream;
      this._reverseStreams[newStream.id] = stream;
      stream = newStream;
    }
    origAddStream.apply(this, [stream]);
  };

  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;
  window.RTCPeerConnection.prototype.removeStream = function(stream) {
    this._streams = this._streams || {};
    this._reverseStreams = this._reverseStreams || {};

    origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);
    delete this._reverseStreams[(this._streams[stream.id] ?
        this._streams[stream.id].id : stream.id)];
    delete this._streams[stream.id];
  };

  window.RTCPeerConnection.prototype.addTrack = function(track, stream) {
    if (this.signalingState === 'closed') {
      throw new DOMException(
        'The RTCPeerConnection\'s signalingState is \'closed\'.',
        'InvalidStateError');
    }
    const streams = [].slice.call(arguments, 1);
    if (streams.length !== 1 ||
        !streams[0].getTracks().find(t => t === track)) {
      // this is not fully correct but all we can manage without
      // [[associated MediaStreams]] internal slot.
      throw new DOMException(
        'The adapter.js addTrack polyfill only supports a single ' +
        ' stream which is associated with the specified track.',
        'NotSupportedError');
    }

    const alreadyExists = this.getSenders().find(s => s.track === track);
    if (alreadyExists) {
      throw new DOMException('Track already exists.',
          'InvalidAccessError');
    }

    this._streams = this._streams || {};
    this._reverseStreams = this._reverseStreams || {};
    const oldStream = this._streams[stream.id];
    if (oldStream) {
      // this is using odd Chrome behaviour, use with caution:
      // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815
      // Note: we rely on the high-level addTrack/dtmf shim to
      // create the sender with a dtmf sender.
      oldStream.addTrack(track);

      // Trigger ONN async.
      Promise.resolve().then(() => {
        this.dispatchEvent(new Event('negotiationneeded'));
      });
    } else {
      const newStream = new window.MediaStream([track]);
      this._streams[stream.id] = newStream;
      this._reverseStreams[newStream.id] = stream;
      this.addStream(newStream);
    }
    return this.getSenders().find(s => s.track === track);
  };

  // replace the internal stream id with the external one and
  // vice versa.
  function replaceInternalStreamId(pc, description) {
    let sdp = description.sdp;
    Object.keys(pc._reverseStreams || []).forEach(internalId => {
      const externalStream = pc._reverseStreams[internalId];
      const internalStream = pc._streams[externalStream.id];
      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),
          externalStream.id);
    });
    return new RTCSessionDescription({
      type: description.type,
      sdp
    });
  }
  function replaceExternalStreamId(pc, description) {
    let sdp = description.sdp;
    Object.keys(pc._reverseStreams || []).forEach(internalId => {
      const externalStream = pc._reverseStreams[internalId];
      const internalStream = pc._streams[externalStream.id];
      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),
          internalStream.id);
    });
    return new RTCSessionDescription({
      type: description.type,
      sdp
    });
  }
  ['createOffer', 'createAnswer'].forEach(function(method) {
    const nativeMethod = window.RTCPeerConnection.prototype[method];
    window.RTCPeerConnection.prototype[method] = function() {
      const args = arguments;
      const isLegacyCall = arguments.length &&
          typeof arguments[0] === 'function';
      if (isLegacyCall) {
        return nativeMethod.apply(this, [
          (description) => {
            const desc = replaceInternalStreamId(this, description);
            args[0].apply(null, [desc]);
          },
          (err) => {
            if (args[1]) {
              args[1].apply(null, err);
            }
          }, arguments[2]
        ]);
      }
      return nativeMethod.apply(this, arguments)
      .then(description => replaceInternalStreamId(this, description));
    };
  });

  const origSetLocalDescription =
      window.RTCPeerConnection.prototype.setLocalDescription;
  window.RTCPeerConnection.prototype.setLocalDescription = function() {
    if (!arguments.length || !arguments[0].type) {
      return origSetLocalDescription.apply(this, arguments);
    }
    arguments[0] = replaceExternalStreamId(this, arguments[0]);
    return origSetLocalDescription.apply(this, arguments);
  };

  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier

  const origLocalDescription = Object.getOwnPropertyDescriptor(
      window.RTCPeerConnection.prototype, 'localDescription');
  Object.defineProperty(window.RTCPeerConnection.prototype,
      'localDescription', {
        get() {
          const description = origLocalDescription.get.apply(this);
          if (description.type === '') {
            return description;
          }
          return replaceInternalStreamId(this, description);
        }
      });

  window.RTCPeerConnection.prototype.removeTrack = function(sender) {
    if (this.signalingState === 'closed') {
      throw new DOMException(
        'The RTCPeerConnection\'s signalingState is \'closed\'.',
        'InvalidStateError');
    }
    // We can not yet check for sender instanceof RTCRtpSender
    // since we shim RTPSender. So we check if sender._pc is set.
    if (!sender._pc) {
      throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +
          'does not implement interface RTCRtpSender.', 'TypeError');
    }
    const isLocal = sender._pc === this;
    if (!isLocal) {
      throw new DOMException('Sender was not created by this connection.',
          'InvalidAccessError');
    }

    // Search for the native stream the senders track belongs to.
    this._streams = this._streams || {};
    let stream;
    Object.keys(this._streams).forEach(streamid => {
      const hasTrack = this._streams[streamid].getTracks()
        .find(track => sender.track === track);
      if (hasTrack) {
        stream = this._streams[streamid];
      }
    });

    if (stream) {
      if (stream.getTracks().length === 1) {
        // if this is the last track of the stream, remove the stream. This
        // takes care of any shimmed _senders.
        this.removeStream(this._reverseStreams[stream.id]);
      } else {
        // relying on the same odd chrome behaviour as above.
        stream.removeTrack(sender.track);
      }
      this.dispatchEvent(new Event('negotiationneeded'));
    }
  };
}

function shimPeerConnection(window) {
  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {
    // very basic support for old versions.
    window.RTCPeerConnection = window.webkitRTCPeerConnection;
  }
  if (!window.RTCPeerConnection) {
    return;
  }

  const origGetStats = window.RTCPeerConnection.prototype.getStats;
  window.RTCPeerConnection.prototype.getStats = function(selector,
      successCallback, errorCallback) {
    const args = arguments;

    // If selector is a function then we are in the old style stats so just
    // pass back the original getStats format to avoid breaking old users.
    if (arguments.length > 0 && typeof selector === 'function') {
      return origGetStats.apply(this, arguments);
    }

    // When spec-style getStats is supported, return those when called with
    // either no arguments or the selector argument is null.
    if (origGetStats.length === 0 && (arguments.length === 0 ||
        typeof arguments[0] !== 'function')) {
      return origGetStats.apply(this, []);
    }

    const fixChromeStats_ = function(response) {
      const standardReport = {};
      const reports = response.result();
      reports.forEach(report => {
        const standardStats = {
          id: report.id,
          timestamp: report.timestamp,
          type: {
            localcandidate: 'local-candidate',
            remotecandidate: 'remote-candidate'
          }[report.type] || report.type
        };
        report.names().forEach(name => {
          standardStats[name] = report.stat(name);
        });
        standardReport[standardStats.id] = standardStats;
      });

      return standardReport;
    };

    // shim getStats with maplike support
    const makeMapStats = function(stats) {
      return new Map(Object.keys(stats).map(key => [key, stats[key]]));
    };

    if (arguments.length >= 2) {
      const successCallbackWrapper_ = function(response) {
        args[1](makeMapStats(fixChromeStats_(response)));
      };

      return origGetStats.apply(this, [successCallbackWrapper_,
        arguments[0]]);
    }

    // promise-support
    return new Promise((resolve, reject) => {
      origGetStats.apply(this, [
        function(response) {
          resolve(makeMapStats(fixChromeStats_(response)));
        }, reject]);
    }).then(successCallback, errorCallback);
  };

  // shim implicit creation of RTCSessionDescription/RTCIceCandidate
  ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']
      .forEach(function(method) {
        const nativeMethod = window.RTCPeerConnection.prototype[method];
        window.RTCPeerConnection.prototype[method] = function() {
          arguments[0] = new ((method === 'addIceCandidate') ?
              window.RTCIceCandidate :
              window.RTCSessionDescription)(arguments[0]);
          return nativeMethod.apply(this, arguments);
        };
      });

  // support for addIceCandidate(null or undefined)
  const nativeAddIceCandidate =
      window.RTCPeerConnection.prototype.addIceCandidate;
  window.RTCPeerConnection.prototype.addIceCandidate = function() {
    if (!arguments[0]) {
      if (arguments[1]) {
        arguments[1].apply(null);
      }
      return Promise.resolve();
    }
    return nativeAddIceCandidate.apply(this, arguments);
  };
}

function fixNegotiationNeeded(window) {
  _utils_js__WEBPACK_IMPORTED_MODULE_0__["wrapPeerConnectionEvent"](window, 'negotiationneeded', e => {
    const pc = e.target;
    if (pc.signalingState !== 'stable') {
      return;
    }
    return e;
  });
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js":
/*!**********************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js ***!
  \**********************************************************************/
/*! exports provided: shimGetDisplayMedia */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimGetDisplayMedia", function() { return shimGetDisplayMedia; });
/*
 *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
/* eslint-env node */

function shimGetDisplayMedia(window, getSourceId) {
  if (window.navigator.mediaDevices &&
    'getDisplayMedia' in window.navigator.mediaDevices) {
    return;
  }
  if (!(window.navigator.mediaDevices)) {
    return;
  }
  // getSourceId is a function that returns a promise resolving with
  // the sourceId of the screen/window/tab to be shared.
  if (typeof getSourceId !== 'function') {
    console.error('shimGetDisplayMedia: getSourceId argument is not ' +
        'a function');
    return;
  }
  window.navigator.mediaDevices.getDisplayMedia = function(constraints) {
    return getSourceId(constraints)
      .then(sourceId => {
        const widthSpecified = constraints.video && constraints.video.width;
        const heightSpecified = constraints.video && constraints.video.height;
        const frameRateSpecified = constraints.video &&
          constraints.video.frameRate;
        constraints.video = {
          mandatory: {
            chromeMediaSource: 'desktop',
            chromeMediaSourceId: sourceId,
            maxFrameRate: frameRateSpecified || 3
          }
        };
        if (widthSpecified) {
          constraints.video.mandatory.maxWidth = widthSpecified;
        }
        if (heightSpecified) {
          constraints.video.mandatory.maxHeight = heightSpecified;
        }
        return window.navigator.mediaDevices.getUserMedia(constraints);
      });
  };
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js":
/*!*******************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js ***!
  \*******************************************************************/
/*! exports provided: shimGetUserMedia */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimGetUserMedia", function() { return shimGetUserMedia; });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/webrtc-adapter/src/js/utils.js");
/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
/* eslint-env node */


const logging = _utils_js__WEBPACK_IMPORTED_MODULE_0__["log"];

function shimGetUserMedia(window) {
  const navigator = window && window.navigator;

  if (!navigator.mediaDevices) {
    return;
  }

  const browserDetails = _utils_js__WEBPACK_IMPORTED_MODULE_0__["detectBrowser"](window);

  const constraintsToChrome_ = function(c) {
    if (typeof c !== 'object' || c.mandatory || c.optional) {
      return c;
    }
    const cc = {};
    Object.keys(c).forEach(key => {
      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {
        return;
      }
      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};
      if (r.exact !== undefined && typeof r.exact === 'number') {
        r.min = r.max = r.exact;
      }
      const oldname_ = function(prefix, name) {
        if (prefix) {
          return prefix + name.charAt(0).toUpperCase() + name.slice(1);
        }
        return (name === 'deviceId') ? 'sourceId' : name;
      };
      if (r.ideal !== undefined) {
        cc.optional = cc.optional || [];
        let oc = {};
        if (typeof r.ideal === 'number') {
          oc[oldname_('min', key)] = r.ideal;
          cc.optional.push(oc);
          oc = {};
          oc[oldname_('max', key)] = r.ideal;
          cc.optional.push(oc);
        } else {
          oc[oldname_('', key)] = r.ideal;
          cc.optional.push(oc);
        }
      }
      if (r.exact !== undefined && typeof r.exact !== 'number') {
        cc.mandatory = cc.mandatory || {};
        cc.mandatory[oldname_('', key)] = r.exact;
      } else {
        ['min', 'max'].forEach(mix => {
          if (r[mix] !== undefined) {
            cc.mandatory = cc.mandatory || {};
            cc.mandatory[oldname_(mix, key)] = r[mix];
          }
        });
      }
    });
    if (c.advanced) {
      cc.optional = (cc.optional || []).concat(c.advanced);
    }
    return cc;
  };

  const shimConstraints_ = function(constraints, func) {
    if (browserDetails.version >= 61) {
      return func(constraints);
    }
    constraints = JSON.parse(JSON.stringify(constraints));
    if (constraints && typeof constraints.audio === 'object') {
      const remap = function(obj, a, b) {
        if (a in obj && !(b in obj)) {
          obj[b] = obj[a];
          delete obj[a];
        }
      };
      constraints = JSON.parse(JSON.stringify(constraints));
      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');
      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');
      constraints.audio = constraintsToChrome_(constraints.audio);
    }
    if (constraints && typeof constraints.video === 'object') {
      // Shim facingMode for mobile & surface pro.
      let face = constraints.video.facingMode;
      face = face && ((typeof face === 'object') ? face : {ideal: face});
      const getSupportedFacingModeLies = browserDetails.version < 66;

      if ((face && (face.exact === 'user' || face.exact === 'environment' ||
                    face.ideal === 'user' || face.ideal === 'environment')) &&
          !(navigator.mediaDevices.getSupportedConstraints &&
            navigator.mediaDevices.getSupportedConstraints().facingMode &&
            !getSupportedFacingModeLies)) {
        delete constraints.video.facingMode;
        let matches;
        if (face.exact === 'environment' || face.ideal === 'environment') {
          matches = ['back', 'rear'];
        } else if (face.exact === 'user' || face.ideal === 'user') {
          matches = ['front'];
        }
        if (matches) {
          // Look for matches in label, or use last cam for back (typical).
          return navigator.mediaDevices.enumerateDevices()
          .then(devices => {
            devices = devices.filter(d => d.kind === 'videoinput');
            let dev = devices.find(d => matches.some(match =>
              d.label.toLowerCase().includes(match)));
            if (!dev && devices.length && matches.includes('back')) {
              dev = devices[devices.length - 1]; // more likely the back cam
            }
            if (dev) {
              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :
                                                        {ideal: dev.deviceId};
            }
            constraints.video = constraintsToChrome_(constraints.video);
            logging('chrome: ' + JSON.stringify(constraints));
            return func(constraints);
          });
        }
      }
      constraints.video = constraintsToChrome_(constraints.video);
    }
    logging('chrome: ' + JSON.stringify(constraints));
    return func(constraints);
  };

  const shimError_ = function(e) {
    if (browserDetails.version >= 64) {
      return e;
    }
    return {
      name: {
        PermissionDeniedError: 'NotAllowedError',
        PermissionDismissedError: 'NotAllowedError',
        InvalidStateError: 'NotAllowedError',
        DevicesNotFoundError: 'NotFoundError',
        ConstraintNotSatisfiedError: 'OverconstrainedError',
        TrackStartError: 'NotReadableError',
        MediaDeviceFailedDueToShutdown: 'NotAllowedError',
        MediaDeviceKillSwitchOn: 'NotAllowedError',
        TabCaptureError: 'AbortError',
        ScreenCaptureError: 'AbortError',
        DeviceCaptureError: 'AbortError'
      }[e.name] || e.name,
      message: e.message,
      constraint: e.constraint || e.constraintName,
      toString() {
        return this.name + (this.message && ': ') + this.message;
      }
    };
  };

  const getUserMedia_ = function(constraints, onSuccess, onError) {
    shimConstraints_(constraints, c => {
      navigator.webkitGetUserMedia(c, onSuccess, e => {
        if (onError) {
          onError(shimError_(e));
        }
      });
    });
  };
  navigator.getUserMedia = getUserMedia_.bind(navigator);

  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia
  // function which returns a Promise, it does not accept spec-style
  // constraints.
  const origGetUserMedia = navigator.mediaDevices.getUserMedia.
      bind(navigator.mediaDevices);
  navigator.mediaDevices.getUserMedia = function(cs) {
    return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {
      if (c.audio && !stream.getAudioTracks().length ||
          c.video && !stream.getVideoTracks().length) {
        stream.getTracks().forEach(track => {
          track.stop();
        });
        throw new DOMException('', 'NotFoundError');
      }
      return stream;
    }, e => Promise.reject(shimError_(e))));
  };
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/common_shim.js":
/*!***********************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/common_shim.js ***!
  \***********************************************************/
/*! exports provided: shimRTCIceCandidate, shimMaxMessageSize, shimSendThrowTypeError, shimConnectionState, removeAllowExtmapMixed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimRTCIceCandidate", function() { return shimRTCIceCandidate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimMaxMessageSize", function() { return shimMaxMessageSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimSendThrowTypeError", function() { return shimSendThrowTypeError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimConnectionState", function() { return shimConnectionState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeAllowExtmapMixed", function() { return removeAllowExtmapMixed; });
/* harmony import */ var sdp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sdp */ "./node_modules/sdp/sdp.js");
/* harmony import */ var sdp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sdp__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./node_modules/webrtc-adapter/src/js/utils.js");
/*
 *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
/* eslint-env node */





function shimRTCIceCandidate(window) {
  // foundation is arbitrarily chosen as an indicator for full support for
  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface
  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in
      window.RTCIceCandidate.prototype)) {
    return;
  }

  const NativeRTCIceCandidate = window.RTCIceCandidate;
  window.RTCIceCandidate = function(args) {
    // Remove the a= which shouldn't be part of the candidate string.
    if (typeof args === 'object' && args.candidate &&
        args.candidate.indexOf('a=') === 0) {
      args = JSON.parse(JSON.stringify(args));
      args.candidate = args.candidate.substr(2);
    }

    if (args.candidate && args.candidate.length) {
      // Augment the native candidate with the parsed fields.
      const nativeCandidate = new NativeRTCIceCandidate(args);
      const parsedCandidate = sdp__WEBPACK_IMPORTED_MODULE_0___default.a.parseCandidate(args.candidate);
      const augmentedCandidate = Object.assign(nativeCandidate,
          parsedCandidate);

      // Add a serializer that does not serialize the extra attributes.
      augmentedCandidate.toJSON = function() {
        return {
          candidate: augmentedCandidate.candidate,
          sdpMid: augmentedCandidate.sdpMid,
          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,
          usernameFragment: augmentedCandidate.usernameFragment,
        };
      };
      return augmentedCandidate;
    }
    return new NativeRTCIceCandidate(args);
  };
  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;

  // Hook up the augmented candidate in onicecandidate and
  // addEventListener('icecandidate', ...)
  _utils__WEBPACK_IMPORTED_MODULE_1__["wrapPeerConnectionEvent"](window, 'icecandidate', e => {
    if (e.candidate) {
      Object.defineProperty(e, 'candidate', {
        value: new window.RTCIceCandidate(e.candidate),
        writable: 'false'
      });
    }
    return e;
  });
}

function shimMaxMessageSize(window) {
  if (window.RTCSctpTransport || !window.RTCPeerConnection) {
    return;
  }
  const browserDetails = _utils__WEBPACK_IMPORTED_MODULE_1__["detectBrowser"](window);

  if (!('sctp' in window.RTCPeerConnection.prototype)) {
    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {
      get() {
        return typeof this._sctp === 'undefined' ? null : this._sctp;
      }
    });
  }

  const sctpInDescription = function(description) {
    const sections = sdp__WEBPACK_IMPORTED_MODULE_0___default.a.splitSections(description.sdp);
    sections.shift();
    return sections.some(mediaSection => {
      const mLine = sdp__WEBPACK_IMPORTED_MODULE_0___default.a.parseMLine(mediaSection);
      return mLine && mLine.kind === 'application'
          && mLine.protocol.indexOf('SCTP') !== -1;
    });
  };

  const getRemoteFirefoxVersion = function(description) {
    // TODO: Is there a better solution for detecting Firefox?
    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/);
    if (match === null || match.length < 2) {
      return -1;
    }
    const version = parseInt(match[1], 10);
    // Test for NaN (yes, this is ugly)
    return version !== version ? -1 : version;
  };

  const getCanSendMaxMessageSize = function(remoteIsFirefox) {
    // Every implementation we know can send at least 64 KiB.
    // Note: Although Chrome is technically able to send up to 256 KiB, the
    //       data does not reach the other peer reliably.
    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419
    let canSendMaxMessageSize = 65536;
    if (browserDetails.browser === 'firefox') {
      if (browserDetails.version < 57) {
        if (remoteIsFirefox === -1) {
          // FF < 57 will send in 16 KiB chunks using the deprecated PPID
          // fragmentation.
          canSendMaxMessageSize = 16384;
        } else {
          // However, other FF (and RAWRTC) can reassemble PPID-fragmented
          // messages. Thus, supporting ~2 GiB when sending.
          canSendMaxMessageSize = 2147483637;
        }
      } else if (browserDetails.version < 60) {
        // Currently, all FF >= 57 will reset the remote maximum message size
        // to the default value when a data channel is created at a later
        // stage. :(
        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831
        canSendMaxMessageSize =
          browserDetails.version === 57 ? 65535 : 65536;
      } else {
        // FF >= 60 supports sending ~2 GiB
        canSendMaxMessageSize = 2147483637;
      }
    }
    return canSendMaxMessageSize;
  };

  const getMaxMessageSize = function(description, remoteIsFirefox) {
    // Note: 65536 bytes is the default value from the SDP spec. Also,
    //       every implementation we know supports receiving 65536 bytes.
    let maxMessageSize = 65536;

    // FF 57 has a slightly incorrect default remote max message size, so
    // we need to adjust it here to avoid a failure when sending.
    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697
    if (browserDetails.browser === 'firefox'
         && browserDetails.version === 57) {
      maxMessageSize = 65535;
    }

    const match = sdp__WEBPACK_IMPORTED_MODULE_0___default.a.matchPrefix(description.sdp,
      'a=max-message-size:');
    if (match.length > 0) {
      maxMessageSize = parseInt(match[0].substr(19), 10);
    } else if (browserDetails.browser === 'firefox' &&
                remoteIsFirefox !== -1) {
      // If the maximum message size is not present in the remote SDP and
      // both local and remote are Firefox, the remote peer can receive
      // ~2 GiB.
      maxMessageSize = 2147483637;
    }
    return maxMessageSize;
  };

  const origSetRemoteDescription =
      window.RTCPeerConnection.prototype.setRemoteDescription;
  window.RTCPeerConnection.prototype.setRemoteDescription = function() {
    this._sctp = null;

    if (sctpInDescription(arguments[0])) {
      // Check if the remote is FF.
      const isFirefox = getRemoteFirefoxVersion(arguments[0]);

      // Get the maximum message size the local peer is capable of sending
      const canSendMMS = getCanSendMaxMessageSize(isFirefox);

      // Get the maximum message size of the remote peer.
      const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);

      // Determine final maximum message size
      let maxMessageSize;
      if (canSendMMS === 0 && remoteMMS === 0) {
        maxMessageSize = Number.POSITIVE_INFINITY;
      } else if (canSendMMS === 0 || remoteMMS === 0) {
        maxMessageSize = Math.max(canSendMMS, remoteMMS);
      } else {
        maxMessageSize = Math.min(canSendMMS, remoteMMS);
      }

      // Create a dummy RTCSctpTransport object and the 'maxMessageSize'
      // attribute.
      const sctp = {};
      Object.defineProperty(sctp, 'maxMessageSize', {
        get() {
          return maxMessageSize;
        }
      });
      this._sctp = sctp;
    }

    return origSetRemoteDescription.apply(this, arguments);
  };
}

function shimSendThrowTypeError(window) {
  if (!(window.RTCPeerConnection &&
      'createDataChannel' in window.RTCPeerConnection.prototype)) {
    return;
  }

  // Note: Although Firefox >= 57 has a native implementation, the maximum
  //       message size can be reset for all data channels at a later stage.
  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831

  function wrapDcSend(dc, pc) {
    const origDataChannelSend = dc.send;
    dc.send = function() {
      const data = arguments[0];
      const length = data.length || data.size || data.byteLength;
      if (dc.readyState === 'open' &&
          pc.sctp && length > pc.sctp.maxMessageSize) {
        throw new TypeError('Message too large (can send a maximum of ' +
          pc.sctp.maxMessageSize + ' bytes)');
      }
      return origDataChannelSend.apply(dc, arguments);
    };
  }
  const origCreateDataChannel =
    window.RTCPeerConnection.prototype.createDataChannel;
  window.RTCPeerConnection.prototype.createDataChannel = function() {
    const dataChannel = origCreateDataChannel.apply(this, arguments);
    wrapDcSend(dataChannel, this);
    return dataChannel;
  };
  _utils__WEBPACK_IMPORTED_MODULE_1__["wrapPeerConnectionEvent"](window, 'datachannel', e => {
    wrapDcSend(e.channel, e.target);
    return e;
  });
}


/* shims RTCConnectionState by pretending it is the same as iceConnectionState.
 * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12
 * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect
 * since DTLS failures would be hidden. See
 * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827
 * for the Firefox tracking bug.
 */
function shimConnectionState(window) {
  if (!window.RTCPeerConnection ||
      'connectionState' in window.RTCPeerConnection.prototype) {
    return;
  }
  const proto = window.RTCPeerConnection.prototype;
  Object.defineProperty(proto, 'connectionState', {
    get() {
      return {
        completed: 'connected',
        checking: 'connecting'
      }[this.iceConnectionState] || this.iceConnectionState;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(proto, 'onconnectionstatechange', {
    get() {
      return this._onconnectionstatechange || null;
    },
    set(cb) {
      if (this._onconnectionstatechange) {
        this.removeEventListener('connectionstatechange',
            this._onconnectionstatechange);
        delete this._onconnectionstatechange;
      }
      if (cb) {
        this.addEventListener('connectionstatechange',
            this._onconnectionstatechange = cb);
      }
    },
    enumerable: true,
    configurable: true
  });

  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {
    const origMethod = proto[method];
    proto[method] = function() {
      if (!this._connectionstatechangepoly) {
        this._connectionstatechangepoly = e => {
          const pc = e.target;
          if (pc._lastConnectionState !== pc.connectionState) {
            pc._lastConnectionState = pc.connectionState;
            const newEvent = new Event('connectionstatechange', e);
            pc.dispatchEvent(newEvent);
          }
          return e;
        };
        this.addEventListener('iceconnectionstatechange',
          this._connectionstatechangepoly);
      }
      return origMethod.apply(this, arguments);
    };
  });
}

function removeAllowExtmapMixed(window) {
  /* remove a=extmap-allow-mixed for Chrome < M71 */
  if (!window.RTCPeerConnection) {
    return;
  }
  const browserDetails = _utils__WEBPACK_IMPORTED_MODULE_1__["detectBrowser"](window);
  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {
    return;
  }
  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;
  window.RTCPeerConnection.prototype.setRemoteDescription = function(desc) {
    if (desc && desc.sdp && desc.sdp.indexOf('\na=extmap-allow-mixed') !== -1) {
      desc.sdp = desc.sdp.split('\n').filter((line) => {
        return line.trim() !== 'a=extmap-allow-mixed';
      }).join('\n');
    }
    return nativeSRD.apply(this, arguments);
  };
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/edge/edge_shim.js":
/*!**************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/edge/edge_shim.js ***!
  \**************************************************************/
/*! exports provided: shimGetUserMedia, shimGetDisplayMedia, shimPeerConnection, shimReplaceTrack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimPeerConnection", function() { return shimPeerConnection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimReplaceTrack", function() { return shimReplaceTrack; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./node_modules/webrtc-adapter/src/js/utils.js");
/* harmony import */ var _filtericeservers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filtericeservers */ "./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js");
/* harmony import */ var rtcpeerconnection_shim__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rtcpeerconnection-shim */ "./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js");
/* harmony import */ var rtcpeerconnection_shim__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(rtcpeerconnection_shim__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _getusermedia__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getusermedia */ "./node_modules/webrtc-adapter/src/js/edge/getusermedia.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shimGetUserMedia", function() { return _getusermedia__WEBPACK_IMPORTED_MODULE_3__["shimGetUserMedia"]; });

/* harmony import */ var _getdisplaymedia__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getdisplaymedia */ "./node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shimGetDisplayMedia", function() { return _getdisplaymedia__WEBPACK_IMPORTED_MODULE_4__["shimGetDisplayMedia"]; });

/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
/* eslint-env node */









function shimPeerConnection(window) {
  const browserDetails = _utils__WEBPACK_IMPORTED_MODULE_0__["detectBrowser"](window);

  if (window.RTCIceGatherer) {
    if (!window.RTCIceCandidate) {
      window.RTCIceCandidate = function(args) {
        return args;
      };
    }
    if (!window.RTCSessionDescription) {
      window.RTCSessionDescription = function(args) {
        return args;
      };
    }
    // this adds an additional event listener to MediaStrackTrack that signals
    // when a tracks enabled property was changed. Workaround for a bug in
    // addStream, see below. No longer required in 15025+
    if (browserDetails.version < 15025) {
      const origMSTEnabled = Object.getOwnPropertyDescriptor(
          window.MediaStreamTrack.prototype, 'enabled');
      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {
        set(value) {
          origMSTEnabled.set.call(this, value);
          const ev = new Event('enabled');
          ev.enabled = value;
          this.dispatchEvent(ev);
        }
      });
    }
  }

  // ORTC defines the DTMF sender a bit different.
  // https://github.com/w3c/ortc/issues/714
  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {
    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {
      get() {
        if (this._dtmf === undefined) {
          if (this.track.kind === 'audio') {
            this._dtmf = new window.RTCDtmfSender(this);
          } else if (this.track.kind === 'video') {
            this._dtmf = null;
          }
        }
        return this._dtmf;
      }
    });
  }
  // Edge currently only implements the RTCDtmfSender, not the
  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*
  if (window.RTCDtmfSender && !window.RTCDTMFSender) {
    window.RTCDTMFSender = window.RTCDtmfSender;
  }

  const RTCPeerConnectionShim = rtcpeerconnection_shim__WEBPACK_IMPORTED_MODULE_2___default()(window,
      browserDetails.version);
  window.RTCPeerConnection = function(config) {
    if (config && config.iceServers) {
      config.iceServers = Object(_filtericeservers__WEBPACK_IMPORTED_MODULE_1__["filterIceServers"])(config.iceServers,
        browserDetails.version);
      _utils__WEBPACK_IMPORTED_MODULE_0__["log"]('ICE servers after filtering:', config.iceServers);
    }
    return new RTCPeerConnectionShim(config);
  };
  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;
}

function shimReplaceTrack(window) {
  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614
  if (window.RTCRtpSender &&
      !('replaceTrack' in window.RTCRtpSender.prototype)) {
    window.RTCRtpSender.prototype.replaceTrack =
        window.RTCRtpSender.prototype.setTrack;
  }
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js":
/*!*********************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js ***!
  \*********************************************************************/
/*! exports provided: filterIceServers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterIceServers", function() { return filterIceServers; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./node_modules/webrtc-adapter/src/js/utils.js");
/*
 *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
/* eslint-env node */



// Edge does not like
// 1) stun: filtered after 14393 unless ?transport=udp is present
// 2) turn: that does not have all of turn:host:port?transport=udp
// 3) turn: with ipv6 addresses
// 4) turn: occurring muliple times
function filterIceServers(iceServers, edgeVersion) {
  let hasTurn = false;
  iceServers = JSON.parse(JSON.stringify(iceServers));
  return iceServers.filter(server => {
    if (server && (server.urls || server.url)) {
      var urls = server.urls || server.url;
      if (server.url && !server.urls) {
        _utils__WEBPACK_IMPORTED_MODULE_0__["deprecated"]('RTCIceServer.url', 'RTCIceServer.urls');
      }
      const isString = typeof urls === 'string';
      if (isString) {
        urls = [urls];
      }
      urls = urls.filter(url => {
        // filter STUN unconditionally.
        if (url.indexOf('stun:') === 0) {
          return false;
        }

        const validTurn = url.startsWith('turn') &&
            !url.startsWith('turn:[') &&
            url.includes('transport=udp');
        if (validTurn && !hasTurn) {
          hasTurn = true;
          return true;
        }
        return validTurn && !hasTurn;
      });

      delete server.url;
      server.urls = isString ? urls[0] : urls;
      return !!urls.length;
    }
  });
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js":
/*!********************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js ***!
  \********************************************************************/
/*! exports provided: shimGetDisplayMedia */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimGetDisplayMedia", function() { return shimGetDisplayMedia; });
/*
 *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
 /* eslint-env node */


function shimGetDisplayMedia(window) {
  if (!('getDisplayMedia' in window.navigator)) {
    return;
  }
  if (!(window.navigator.mediaDevices)) {
    return;
  }
  if (window.navigator.mediaDevices &&
    'getDisplayMedia' in window.navigator.mediaDevices) {
    return;
  }
  window.navigator.mediaDevices.getDisplayMedia =
    window.navigator.getDisplayMedia.bind(window.navigator.mediaDevices);
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/edge/getusermedia.js":
/*!*****************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/edge/getusermedia.js ***!
  \*****************************************************************/
/*! exports provided: shimGetUserMedia */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimGetUserMedia", function() { return shimGetUserMedia; });
/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
 /* eslint-env node */


function shimGetUserMedia(window) {
  const navigator = window && window.navigator;

  const shimError_ = function(e) {
    return {
      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,
      message: e.message,
      constraint: e.constraint,
      toString() {
        return this.name;
      }
    };
  };

  // getUserMedia error shim.
  const origGetUserMedia = navigator.mediaDevices.getUserMedia.
      bind(navigator.mediaDevices);
  navigator.mediaDevices.getUserMedia = function(c) {
    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));
  };
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js":
/*!********************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js ***!
  \********************************************************************/
/*! exports provided: shimGetUserMedia, shimGetDisplayMedia, shimOnTrack, shimPeerConnection, shimSenderGetStats, shimReceiverGetStats, shimRemoveStream, shimRTCDataChannel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimOnTrack", function() { return shimOnTrack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimPeerConnection", function() { return shimPeerConnection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimSenderGetStats", function() { return shimSenderGetStats; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimReceiverGetStats", function() { return shimReceiverGetStats; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimRemoveStream", function() { return shimRemoveStream; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimRTCDataChannel", function() { return shimRTCDataChannel; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./node_modules/webrtc-adapter/src/js/utils.js");
/* harmony import */ var _getusermedia__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getusermedia */ "./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shimGetUserMedia", function() { return _getusermedia__WEBPACK_IMPORTED_MODULE_1__["shimGetUserMedia"]; });

/* harmony import */ var _getdisplaymedia__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getdisplaymedia */ "./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shimGetDisplayMedia", function() { return _getdisplaymedia__WEBPACK_IMPORTED_MODULE_2__["shimGetDisplayMedia"]; });

/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
/* eslint-env node */






function shimOnTrack(window) {
  if (typeof window === 'object' && window.RTCTrackEvent &&
      ('receiver' in window.RTCTrackEvent.prototype) &&
      !('transceiver' in window.RTCTrackEvent.prototype)) {
    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {
      get() {
        return {receiver: this.receiver};
      }
    });
  }
}

function shimPeerConnection(window) {
  const browserDetails = _utils__WEBPACK_IMPORTED_MODULE_0__["detectBrowser"](window);

  if (typeof window !== 'object' ||
      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {
    return; // probably media.peerconnection.enabled=false in about:config
  }
  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {
    // very basic support for old versions.
    window.RTCPeerConnection = window.mozRTCPeerConnection;
  }

  // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.
  ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']
      .forEach(function(method) {
        const nativeMethod = window.RTCPeerConnection.prototype[method];
        window.RTCPeerConnection.prototype[method] = function() {
          arguments[0] = new ((method === 'addIceCandidate') ?
              window.RTCIceCandidate :
              window.RTCSessionDescription)(arguments[0]);
          return nativeMethod.apply(this, arguments);
        };
      });

  // support for addIceCandidate(null or undefined)
  const nativeAddIceCandidate =
      window.RTCPeerConnection.prototype.addIceCandidate;
  window.RTCPeerConnection.prototype.addIceCandidate = function() {
    if (!arguments[0]) {
      if (arguments[1]) {
        arguments[1].apply(null);
      }
      return Promise.resolve();
    }
    return nativeAddIceCandidate.apply(this, arguments);
  };

  const modernStatsTypes = {
    inboundrtp: 'inbound-rtp',
    outboundrtp: 'outbound-rtp',
    candidatepair: 'candidate-pair',
    localcandidate: 'local-candidate',
    remotecandidate: 'remote-candidate'
  };

  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;
  window.RTCPeerConnection.prototype.getStats = function(
    selector,
    onSucc,
    onErr
  ) {
    return nativeGetStats.apply(this, [selector || null])
      .then(stats => {
        if (browserDetails.version < 53 && !onSucc) {
          // Shim only promise getStats with spec-hyphens in type names
          // Leave callback version alone; misc old uses of forEach before Map
          try {
            stats.forEach(stat => {
              stat.type = modernStatsTypes[stat.type] || stat.type;
            });
          } catch (e) {
            if (e.name !== 'TypeError') {
              throw e;
            }
            // Avoid TypeError: "type" is read-only, in old versions. 34-43ish
            stats.forEach((stat, i) => {
              stats.set(i, Object.assign({}, stat, {
                type: modernStatsTypes[stat.type] || stat.type
              }));
            });
          }
        }
        return stats;
      })
      .then(onSucc, onErr);
  };
}

function shimSenderGetStats(window) {
  if (!(typeof window === 'object' && window.RTCPeerConnection &&
      window.RTCRtpSender)) {
    return;
  }
  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {
    return;
  }
  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;
  if (origGetSenders) {
    window.RTCPeerConnection.prototype.getSenders = function() {
      const senders = origGetSenders.apply(this, []);
      senders.forEach(sender => sender._pc = this);
      return senders;
    };
  }

  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;
  if (origAddTrack) {
    window.RTCPeerConnection.prototype.addTrack = function() {
      const sender = origAddTrack.apply(this, arguments);
      sender._pc = this;
      return sender;
    };
  }
  window.RTCRtpSender.prototype.getStats = function() {
    return this.track ? this._pc.getStats(this.track) :
        Promise.resolve(new Map());
  };
}

function shimReceiverGetStats(window) {
  if (!(typeof window === 'object' && window.RTCPeerConnection &&
      window.RTCRtpSender)) {
    return;
  }
  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {
    return;
  }
  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;
  if (origGetReceivers) {
    window.RTCPeerConnection.prototype.getReceivers = function() {
      const receivers = origGetReceivers.apply(this, []);
      receivers.forEach(receiver => receiver._pc = this);
      return receivers;
    };
  }
  _utils__WEBPACK_IMPORTED_MODULE_0__["wrapPeerConnectionEvent"](window, 'track', e => {
    e.receiver._pc = e.srcElement;
    return e;
  });
  window.RTCRtpReceiver.prototype.getStats = function() {
    return this._pc.getStats(this.track);
  };
}

function shimRemoveStream(window) {
  if (!window.RTCPeerConnection ||
      'removeStream' in window.RTCPeerConnection.prototype) {
    return;
  }
  window.RTCPeerConnection.prototype.removeStream = function(stream) {
    _utils__WEBPACK_IMPORTED_MODULE_0__["deprecated"]('removeStream', 'removeTrack');
    this.getSenders().forEach(sender => {
      if (sender.track && stream.getTracks().includes(sender.track)) {
        this.removeTrack(sender);
      }
    });
  };
}

function shimRTCDataChannel(window) {
  // rename DataChannel to RTCDataChannel (native fix in FF60):
  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851
  if (window.DataChannel && !window.RTCDataChannel) {
    window.RTCDataChannel = window.DataChannel;
  }
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js":
/*!***********************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js ***!
  \***********************************************************************/
/*! exports provided: shimGetDisplayMedia */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimGetDisplayMedia", function() { return shimGetDisplayMedia; });
/*
 *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
/* eslint-env node */


function shimGetDisplayMedia(window, preferredMediaSource) {
  if (window.navigator.mediaDevices &&
    'getDisplayMedia' in window.navigator.mediaDevices) {
    return;
  }
  if (!(window.navigator.mediaDevices)) {
    return;
  }
  window.navigator.mediaDevices.getDisplayMedia = function(constraints) {
    if (!(constraints && constraints.video)) {
      const err = new DOMException('getDisplayMedia without video ' +
          'constraints is undefined');
      err.name = 'NotFoundError';
      // from https://heycam.github.io/webidl/#idl-DOMException-error-names
      err.code = 8;
      return Promise.reject(err);
    }
    if (constraints.video === true) {
      constraints.video = {mediaSource: preferredMediaSource};
    } else {
      constraints.video.mediaSource = preferredMediaSource;
    }
    return window.navigator.mediaDevices.getUserMedia(constraints);
  };
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js":
/*!********************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js ***!
  \********************************************************************/
/*! exports provided: shimGetUserMedia */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimGetUserMedia", function() { return shimGetUserMedia; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./node_modules/webrtc-adapter/src/js/utils.js");
/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
/* eslint-env node */




function shimGetUserMedia(window) {
  const browserDetails = _utils__WEBPACK_IMPORTED_MODULE_0__["detectBrowser"](window);
  const navigator = window && window.navigator;
  const MediaStreamTrack = window && window.MediaStreamTrack;

  navigator.getUserMedia = function(constraints, onSuccess, onError) {
    // Replace Firefox 44+'s deprecation warning with unprefixed version.
    _utils__WEBPACK_IMPORTED_MODULE_0__["deprecated"]('navigator.getUserMedia',
        'navigator.mediaDevices.getUserMedia');
    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);
  };

  if (!(browserDetails.version > 55 &&
      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {
    const remap = function(obj, a, b) {
      if (a in obj && !(b in obj)) {
        obj[b] = obj[a];
        delete obj[a];
      }
    };

    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.
        bind(navigator.mediaDevices);
    navigator.mediaDevices.getUserMedia = function(c) {
      if (typeof c === 'object' && typeof c.audio === 'object') {
        c = JSON.parse(JSON.stringify(c));
        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');
        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');
      }
      return nativeGetUserMedia(c);
    };

    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {
      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;
      MediaStreamTrack.prototype.getSettings = function() {
        const obj = nativeGetSettings.apply(this, arguments);
        remap(obj, 'mozAutoGainControl', 'autoGainControl');
        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');
        return obj;
      };
    }

    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {
      const nativeApplyConstraints =
        MediaStreamTrack.prototype.applyConstraints;
      MediaStreamTrack.prototype.applyConstraints = function(c) {
        if (this.kind === 'audio' && typeof c === 'object') {
          c = JSON.parse(JSON.stringify(c));
          remap(c, 'autoGainControl', 'mozAutoGainControl');
          remap(c, 'noiseSuppression', 'mozNoiseSuppression');
        }
        return nativeApplyConstraints.apply(this, [c]);
      };
    }
  }
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/safari/safari_shim.js":
/*!******************************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/safari/safari_shim.js ***!
  \******************************************************************/
/*! exports provided: shimLocalStreamsAPI, shimRemoteStreamsAPI, shimCallbacksAPI, shimGetUserMedia, shimConstraints, shimRTCIceServerUrls, shimTrackEventTransceiver, shimCreateOfferLegacy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimLocalStreamsAPI", function() { return shimLocalStreamsAPI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimRemoteStreamsAPI", function() { return shimRemoteStreamsAPI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimCallbacksAPI", function() { return shimCallbacksAPI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimGetUserMedia", function() { return shimGetUserMedia; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimConstraints", function() { return shimConstraints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimRTCIceServerUrls", function() { return shimRTCIceServerUrls; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimTrackEventTransceiver", function() { return shimTrackEventTransceiver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shimCreateOfferLegacy", function() { return shimCreateOfferLegacy; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./node_modules/webrtc-adapter/src/js/utils.js");
/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */



function shimLocalStreamsAPI(window) {
  if (typeof window !== 'object' || !window.RTCPeerConnection) {
    return;
  }
  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {
    window.RTCPeerConnection.prototype.getLocalStreams = function() {
      if (!this._localStreams) {
        this._localStreams = [];
      }
      return this._localStreams;
    };
  }
  if (!('addStream' in window.RTCPeerConnection.prototype)) {
    const _addTrack = window.RTCPeerConnection.prototype.addTrack;
    window.RTCPeerConnection.prototype.addStream = function(stream) {
      if (!this._localStreams) {
        this._localStreams = [];
      }
      if (!this._localStreams.includes(stream)) {
        this._localStreams.push(stream);
      }
      stream.getTracks().forEach(track => _addTrack.call(this, track, stream));
    };

    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {
      if (stream) {
        if (!this._localStreams) {
          this._localStreams = [stream];
        } else if (!this._localStreams.includes(stream)) {
          this._localStreams.push(stream);
        }
      }
      return _addTrack.call(this, track, stream);
    };
  }
  if (!('removeStream' in window.RTCPeerConnection.prototype)) {
    window.RTCPeerConnection.prototype.removeStream = function(stream) {
      if (!this._localStreams) {
        this._localStreams = [];
      }
      const index = this._localStreams.indexOf(stream);
      if (index === -1) {
        return;
      }
      this._localStreams.splice(index, 1);
      const tracks = stream.getTracks();
      this.getSenders().forEach(sender => {
        if (tracks.includes(sender.track)) {
          this.removeTrack(sender);
        }
      });
    };
  }
}

function shimRemoteStreamsAPI(window) {
  if (typeof window !== 'object' || !window.RTCPeerConnection) {
    return;
  }
  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {
    window.RTCPeerConnection.prototype.getRemoteStreams = function() {
      return this._remoteStreams ? this._remoteStreams : [];
    };
  }
  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {
    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {
      get() {
        return this._onaddstream;
      },
      set(f) {
        if (this._onaddstream) {
          this.removeEventListener('addstream', this._onaddstream);
          this.removeEventListener('track', this._onaddstreampoly);
        }
        this.addEventListener('addstream', this._onaddstream = f);
        this.addEventListener('track', this._onaddstreampoly = (e) => {
          e.streams.forEach(stream => {
            if (!this._remoteStreams) {
              this._remoteStreams = [];
            }
            if (this._remoteStreams.includes(stream)) {
              return;
            }
            this._remoteStreams.push(stream);
            const event = new Event('addstream');
            event.stream = stream;
            this.dispatchEvent(event);
          });
        });
      }
    });
    const origSetRemoteDescription =
      window.RTCPeerConnection.prototype.setRemoteDescription;
    window.RTCPeerConnection.prototype.setRemoteDescription = function() {
      const pc = this;
      if (!this._onaddstreampoly) {
        this.addEventListener('track', this._onaddstreampoly = function(e) {
          e.streams.forEach(stream => {
            if (!pc._remoteStreams) {
              pc._remoteStreams = [];
            }
            if (pc._remoteStreams.indexOf(stream) >= 0) {
              return;
            }
            pc._remoteStreams.push(stream);
            const event = new Event('addstream');
            event.stream = stream;
            pc.dispatchEvent(event);
          });
        });
      }
      return origSetRemoteDescription.apply(pc, arguments);
    };
  }
}

function shimCallbacksAPI(window) {
  if (typeof window !== 'object' || !window.RTCPeerConnection) {
    return;
  }
  const prototype = window.RTCPeerConnection.prototype;
  const createOffer = prototype.createOffer;
  const createAnswer = prototype.createAnswer;
  const setLocalDescription = prototype.setLocalDescription;
  const setRemoteDescription = prototype.setRemoteDescription;
  const addIceCandidate = prototype.addIceCandidate;

  prototype.createOffer = function(successCallback, failureCallback) {
    const options = (arguments.length >= 2) ? arguments[2] : arguments[0];
    const promise = createOffer.apply(this, [options]);
    if (!failureCallback) {
      return promise;
    }
    promise.then(successCallback, failureCallback);
    return Promise.resolve();
  };

  prototype.createAnswer = function(successCallback, failureCallback) {
    const options = (arguments.length >= 2) ? arguments[2] : arguments[0];
    const promise = createAnswer.apply(this, [options]);
    if (!failureCallback) {
      return promise;
    }
    promise.then(successCallback, failureCallback);
    return Promise.resolve();
  };

  let withCallback = function(description, successCallback, failureCallback) {
    const promise = setLocalDescription.apply(this, [description]);
    if (!failureCallback) {
      return promise;
    }
    promise.then(successCallback, failureCallback);
    return Promise.resolve();
  };
  prototype.setLocalDescription = withCallback;

  withCallback = function(description, successCallback, failureCallback) {
    const promise = setRemoteDescription.apply(this, [description]);
    if (!failureCallback) {
      return promise;
    }
    promise.then(successCallback, failureCallback);
    return Promise.resolve();
  };
  prototype.setRemoteDescription = withCallback;

  withCallback = function(candidate, successCallback, failureCallback) {
    const promise = addIceCandidate.apply(this, [candidate]);
    if (!failureCallback) {
      return promise;
    }
    promise.then(successCallback, failureCallback);
    return Promise.resolve();
  };
  prototype.addIceCandidate = withCallback;
}

function shimGetUserMedia(window) {
  const navigator = window && window.navigator;

  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
    // shim not needed in Safari 12.1
    const mediaDevices = navigator.mediaDevices;
    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);
    navigator.mediaDevices.getUserMedia = (constraints) => {
      return _getUserMedia(shimConstraints(constraints));
    };
  }

  if (!navigator.getUserMedia && navigator.mediaDevices &&
    navigator.mediaDevices.getUserMedia) {
    navigator.getUserMedia = function(constraints, cb, errcb) {
      navigator.mediaDevices.getUserMedia(constraints)
      .then(cb, errcb);
    }.bind(navigator);
  }
}

function shimConstraints(constraints) {
  if (constraints && constraints.video !== undefined) {
    return Object.assign({},
      constraints,
      {video: _utils__WEBPACK_IMPORTED_MODULE_0__["compactObject"](constraints.video)}
    );
  }

  return constraints;
}

function shimRTCIceServerUrls(window) {
  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls
  const OrigPeerConnection = window.RTCPeerConnection;
  window.RTCPeerConnection = function(pcConfig, pcConstraints) {
    if (pcConfig && pcConfig.iceServers) {
      const newIceServers = [];
      for (let i = 0; i < pcConfig.iceServers.length; i++) {
        let server = pcConfig.iceServers[i];
        if (!server.hasOwnProperty('urls') &&
            server.hasOwnProperty('url')) {
          _utils__WEBPACK_IMPORTED_MODULE_0__["deprecated"]('RTCIceServer.url', 'RTCIceServer.urls');
          server = JSON.parse(JSON.stringify(server));
          server.urls = server.url;
          delete server.url;
          newIceServers.push(server);
        } else {
          newIceServers.push(pcConfig.iceServers[i]);
        }
      }
      pcConfig.iceServers = newIceServers;
    }
    return new OrigPeerConnection(pcConfig, pcConstraints);
  };
  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;
  // wrap static methods. Currently just generateCertificate.
  if ('generateCertificate' in window.RTCPeerConnection) {
    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {
      get() {
        return OrigPeerConnection.generateCertificate;
      }
    });
  }
}

function shimTrackEventTransceiver(window) {
  // Add event.transceiver member over deprecated event.receiver
  if (typeof window === 'object' && window.RTCPeerConnection &&
      ('receiver' in window.RTCTrackEvent.prototype) &&
      // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is
      // defined for some reason even when window.RTCTransceiver is not.
      !window.RTCTransceiver) {
    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {
      get() {
        return {receiver: this.receiver};
      }
    });
  }
}

function shimCreateOfferLegacy(window) {
  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;
  window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {
    if (offerOptions) {
      if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {
        // support bit values
        offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;
      }
      const audioTransceiver = this.getTransceivers().find(transceiver =>
        transceiver.sender.track &&
        transceiver.sender.track.kind === 'audio');
      if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {
        if (audioTransceiver.direction === 'sendrecv') {
          if (audioTransceiver.setDirection) {
            audioTransceiver.setDirection('sendonly');
          } else {
            audioTransceiver.direction = 'sendonly';
          }
        } else if (audioTransceiver.direction === 'recvonly') {
          if (audioTransceiver.setDirection) {
            audioTransceiver.setDirection('inactive');
          } else {
            audioTransceiver.direction = 'inactive';
          }
        }
      } else if (offerOptions.offerToReceiveAudio === true &&
          !audioTransceiver) {
        this.addTransceiver('audio');
      }

      if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {
        // support bit values
        offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;
      }
      const videoTransceiver = this.getTransceivers().find(transceiver =>
        transceiver.sender.track &&
        transceiver.sender.track.kind === 'video');
      if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {
        if (videoTransceiver.direction === 'sendrecv') {
          if (videoTransceiver.setDirection) {
            videoTransceiver.setDirection('sendonly');
          } else {
            videoTransceiver.direction = 'sendonly';
          }
        } else if (videoTransceiver.direction === 'recvonly') {
          if (videoTransceiver.setDirection) {
            videoTransceiver.setDirection('inactive');
          } else {
            videoTransceiver.direction = 'inactive';
          }
        }
      } else if (offerOptions.offerToReceiveVideo === true &&
          !videoTransceiver) {
        this.addTransceiver('video');
      }
    }
    return origCreateOffer.apply(this, arguments);
  };
}


/***/ }),

/***/ "./node_modules/webrtc-adapter/src/js/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/webrtc-adapter/src/js/utils.js ***!
  \*****************************************************/
/*! exports provided: extractVersion, wrapPeerConnectionEvent, disableLog, disableWarnings, log, deprecated, detectBrowser, compactObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extractVersion", function() { return extractVersion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapPeerConnectionEvent", function() { return wrapPeerConnectionEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disableLog", function() { return disableLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disableWarnings", function() { return disableWarnings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deprecated", function() { return deprecated; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detectBrowser", function() { return detectBrowser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compactObject", function() { return compactObject; });
/*
 *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */
 /* eslint-env node */


let logDisabled_ = true;
let deprecationWarnings_ = true;

/**
 * Extract browser version out of the provided user agent string.
 *
 * @param {!string} uastring userAgent string.
 * @param {!string} expr Regular expression used as match criteria.
 * @param {!number} pos position in the version string to be returned.
 * @return {!number} browser version.
 */
function extractVersion(uastring, expr, pos) {
  const match = uastring.match(expr);
  return match && match.length >= pos && parseInt(match[pos], 10);
}

// Wraps the peerconnection event eventNameToWrap in a function
// which returns the modified event object (or false to prevent
// the event).
function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {
  if (!window.RTCPeerConnection) {
    return;
  }
  const proto = window.RTCPeerConnection.prototype;
  const nativeAddEventListener = proto.addEventListener;
  proto.addEventListener = function(nativeEventName, cb) {
    if (nativeEventName !== eventNameToWrap) {
      return nativeAddEventListener.apply(this, arguments);
    }
    const wrappedCallback = (e) => {
      const modifiedEvent = wrapper(e);
      if (modifiedEvent) {
        cb(modifiedEvent);
      }
    };
    this._eventMap = this._eventMap || {};
    this._eventMap[cb] = wrappedCallback;
    return nativeAddEventListener.apply(this, [nativeEventName,
      wrappedCallback]);
  };

  const nativeRemoveEventListener = proto.removeEventListener;
  proto.removeEventListener = function(nativeEventName, cb) {
    if (nativeEventName !== eventNameToWrap || !this._eventMap
        || !this._eventMap[cb]) {
      return nativeRemoveEventListener.apply(this, arguments);
    }
    const unwrappedCb = this._eventMap[cb];
    delete this._eventMap[cb];
    return nativeRemoveEventListener.apply(this, [nativeEventName,
      unwrappedCb]);
  };

  Object.defineProperty(proto, 'on' + eventNameToWrap, {
    get() {
      return this['_on' + eventNameToWrap];
    },
    set(cb) {
      if (this['_on' + eventNameToWrap]) {
        this.removeEventListener(eventNameToWrap,
            this['_on' + eventNameToWrap]);
        delete this['_on' + eventNameToWrap];
      }
      if (cb) {
        this.addEventListener(eventNameToWrap,
            this['_on' + eventNameToWrap] = cb);
      }
    },
    enumerable: true,
    configurable: true
  });
}

function disableLog(bool) {
  if (typeof bool !== 'boolean') {
    return new Error('Argument type: ' + typeof bool +
        '. Please use a boolean.');
  }
  logDisabled_ = bool;
  return (bool) ? 'adapter.js logging disabled' :
      'adapter.js logging enabled';
}

/**
 * Disable or enable deprecation warnings
 * @param {!boolean} bool set to true to disable warnings.
 */
function disableWarnings(bool) {
  if (typeof bool !== 'boolean') {
    return new Error('Argument type: ' + typeof bool +
        '. Please use a boolean.');
  }
  deprecationWarnings_ = !bool;
  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');
}

function log() {
  if (typeof window === 'object') {
    if (logDisabled_) {
      return;
    }
    if (typeof console !== 'undefined' && typeof console.log === 'function') {
      console.log.apply(console, arguments);
    }
  }
}

/**
 * Shows a deprecation warning suggesting the modern and spec-compatible API.
 */
function deprecated(oldMethod, newMethod) {
  if (!deprecationWarnings_) {
    return;
  }
  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +
      ' instead.');
}

/**
 * Browser detector.
 *
 * @return {object} result containing browser and version
 *     properties.
 */
function detectBrowser(window) {
  const {navigator} = window;

  // Returned result object.
  const result = {browser: null, version: null};

  // Fail early if it's not a browser
  if (typeof window === 'undefined' || !window.navigator) {
    result.browser = 'Not a browser.';
    return result;
  }

  if (navigator.mozGetUserMedia) { // Firefox.
    result.browser = 'firefox';
    result.version = extractVersion(navigator.userAgent,
        /Firefox\/(\d+)\./, 1);
  } else if (navigator.webkitGetUserMedia) {
    // Chrome, Chromium, Webview, Opera.
    // Version matches Chrome/WebRTC version.
    result.browser = 'chrome';
    result.version = extractVersion(navigator.userAgent,
        /Chrom(e|ium)\/(\d+)\./, 2);
  } else if (navigator.mediaDevices &&
      navigator.userAgent.match(/Edge\/(\d+).(\d+)$/)) { // Edge.
    result.browser = 'edge';
    result.version = extractVersion(navigator.userAgent,
        /Edge\/(\d+).(\d+)$/, 2);
  } else if (window.RTCPeerConnection &&
      navigator.userAgent.match(/AppleWebKit\/(\d+)\./)) { // Safari.
    result.browser = 'safari';
    result.version = extractVersion(navigator.userAgent,
        /AppleWebKit\/(\d+)\./, 1);
  } else { // Default fallthrough: not supported.
    result.browser = 'Not a supported browser.';
    return result;
  }

  return result;
}

/**
 * Remove all empty objects and undefined values
 * from a nested object -- an enhanced and vanilla version
 * of Lodash's `compact`.
 */
function compactObject(data) {
  if (typeof data !== 'object') {
    return data;
  }

  return Object.keys(data).reduce(function(accumulator, key) {
    const isObject = typeof data[key] === 'object';
    const value = isObject ? compactObject(data[key]) : data[key];
    const isEmptyObject = isObject && !Object.keys(value).length;
    if (value === undefined || isEmptyObject) {
      return accumulator;
    }

    return Object.assign(accumulator, {[key]: value});
  }, {});
}


/***/ }),

/***/ "./node_modules/yeast/index.js":
/*!*************************************!*\
  !*** ./node_modules/yeast/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')
  , length = 64
  , map = {}
  , seed = 0
  , i = 0
  , prev;

/**
 * Return a string representing the specified number.
 *
 * @param {Number} num The number to convert.
 * @returns {String} The string representation of the number.
 * @api public
 */
function encode(num) {
  var encoded = '';

  do {
    encoded = alphabet[num % length] + encoded;
    num = Math.floor(num / length);
  } while (num > 0);

  return encoded;
}

/**
 * Return the integer value specified by the given string.
 *
 * @param {String} str The string to convert.
 * @returns {Number} The integer value represented by the string.
 * @api public
 */
function decode(str) {
  var decoded = 0;

  for (i = 0; i < str.length; i++) {
    decoded = decoded * length + map[str.charAt(i)];
  }

  return decoded;
}

/**
 * Yeast: A tiny growing id generator.
 *
 * @returns {String} A unique id.
 * @api public
 */
function yeast() {
  var now = encode(+new Date());

  if (now !== prev) return seed = 0, prev = now;
  return now +'.'+ encode(seed++);
}

//
// Map each character to its index.
//
for (; i < length; i++) map[alphabet[i]] = i;

//
// Expose the `yeast`, `encode` and `decode` functions.
//
yeast.encode = encode;
yeast.decode = decode;
module.exports = yeast;


/***/ }),

/***/ "./src/Reach.js":
/*!**********************!*\
  !*** ./src/Reach.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_b2ari3wke=function(){var path="/home/florent/Projets/reach/src/Reach.js",hash="24e15ecaadbf445f32d4daffe45aa1425ffda6ba",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/Reach.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:14},end:{line:8,column:62}},"3":{start:{line:10,column:15},end:{line:10,column:71}},"4":{start:{line:12,column:19},end:{line:12,column:79}},"5":{start:{line:14,column:13},end:{line:14,column:69}},"6":{start:{line:16,column:13},end:{line:16,column:43}},"7":{start:{line:18,column:12},end:{line:18,column:58}},"8":{start:{line:20,column:12},end:{line:20,column:58}},"9":{start:{line:22,column:14},end:{line:22,column:62}},"10":{start:{line:24,column:15},end:{line:24,column:71}},"11":{start:{line:26,column:13},end:{line:26,column:65}},"12":{start:{line:28,column:10},end:{line:28,column:61}},"13":{start:{line:30,column:13},end:{line:30,column:65}},"14":{start:{line:32,column:40},end:{line:32,column:470}},"15":{start:{line:32,column:69},end:{line:32,column:80}},"16":{start:{line:32,column:103},end:{line:32,column:105}},"17":{start:{line:32,column:107},end:{line:32,column:431}},"18":{start:{line:32,column:126},end:{line:32,column:429}},"19":{start:{line:32,column:149},end:{line:32,column:427}},"20":{start:{line:32,column:214},end:{line:32,column:319}},"21":{start:{line:32,column:321},end:{line:32,column:425}},"22":{start:{line:32,column:349},end:{line:32,column:390}},"23":{start:{line:32,column:400},end:{line:32,column:423}},"24":{start:{line:32,column:432},end:{line:32,column:453}},"25":{start:{line:32,column:454},end:{line:32,column:468}},"26":{start:{line:34,column:39},end:{line:34,column:93}},"27":{start:{line:36,column:50},end:{line:36,column:151}},"28":{start:{line:36,column:92},end:{line:36,column:149}},"29":{start:{line:38,column:44},end:{line:38,column:315}},"30":{start:{line:38,column:102},end:{line:38,column:110}},"31":{start:{line:38,column:112},end:{line:38,column:167}},"32":{start:{line:38,column:168},end:{line:38,column:199}},"33":{start:{line:38,column:200},end:{line:38,column:254}},"34":{start:{line:38,column:227},end:{line:38,column:254}},"35":{start:{line:38,column:255},end:{line:38,column:313}},"36":{start:{line:40,column:62},end:{line:40,column:131}},"37":{start:{line:40,column:78},end:{line:40,column:131}},"38":{start:{line:40,column:132},end:{line:40,column:193}},"39":{start:{line:40,column:149},end:{line:40,column:193}},"40":{start:{line:40,column:194},end:{line:40,column:213}},"41":{start:{line:48,column:0},end:{line:476,column:3}},"42":{start:{line:63,column:14},end:{line:63,column:86}},"43":{start:{line:65,column:4},end:{line:65,column:33}},"44":{start:{line:68,column:4},end:{line:68,column:30}},"45":{start:{line:70,column:4},end:{line:70,column:32}},"46":{start:{line:77,column:4},end:{line:77,column:25}},"47":{start:{line:86,column:2},end:{line:473,column:6}},"48":{start:{line:98,column:18},end:{line:98,column:22}},"49":{start:{line:100,column:6},end:{line:106,column:40}},"50":{start:{line:101,column:8},end:{line:103,column:9}},"51":{start:{line:102,column:10},end:{line:102,column:73}},"52":{start:{line:105,column:8},end:{line:105,column:20}},"53":{start:{line:120,column:23},end:{line:120,column:96}},"54":{start:{line:122,column:14},end:{line:122,column:31}},"55":{start:{line:124,column:6},end:{line:126,column:7}},"56":{start:{line:125,column:8},end:{line:125,column:26}},"57":{start:{line:128,column:6},end:{line:139,column:37}},"58":{start:{line:129,column:8},end:{line:133,column:11}},"59":{start:{line:135,column:8},end:{line:135,column:46}},"60":{start:{line:137,column:8},end:{line:137,column:32}},"61":{start:{line:138,column:8},end:{line:138,column:17}},"62":{start:{line:149,column:19},end:{line:149,column:23}},"63":{start:{line:151,column:6},end:{line:165,column:9}},"64":{start:{line:153,column:8},end:{line:164,column:9}},"65":{start:{line:154,column:10},end:{line:161,column:13}},"66":{start:{line:155,column:12},end:{line:160,column:13}},"67":{start:{line:156,column:14},end:{line:159,column:25}},"68":{start:{line:157,column:16},end:{line:157,column:40}},"69":{start:{line:158,column:16},end:{line:158,column:27}},"70":{start:{line:163,column:10},end:{line:163,column:52}},"71":{start:{line:177,column:14},end:{line:177,column:31}},"72":{start:{line:179,column:6},end:{line:181,column:7}},"73":{start:{line:180,column:8},end:{line:180,column:26}},"74":{start:{line:183,column:6},end:{line:190,column:41}},"75":{start:{line:184,column:8},end:{line:184,column:53}},"76":{start:{line:186,column:8},end:{line:186,column:46}},"77":{start:{line:188,column:8},end:{line:188,column:32}},"78":{start:{line:189,column:8},end:{line:189,column:17}},"79":{start:{line:200,column:19},end:{line:200,column:23}},"80":{start:{line:202,column:6},end:{line:222,column:9}},"81":{start:{line:203,column:16},end:{line:203,column:33}},"82":{start:{line:205,column:8},end:{line:207,column:9}},"83":{start:{line:206,column:10},end:{line:206,column:55}},"84":{start:{line:209,column:8},end:{line:221,column:11}},"85":{start:{line:210,column:10},end:{line:212,column:13}},"86":{start:{line:211,column:12},end:{line:211,column:88}},"87":{start:{line:214,column:10},end:{line:217,column:13}},"88":{start:{line:215,column:12},end:{line:215,column:39}},"89":{start:{line:216,column:12},end:{line:216,column:22}},"90":{start:{line:219,column:10},end:{line:219,column:19}},"91":{start:{line:220,column:10},end:{line:220,column:20}},"92":{start:{line:234,column:19},end:{line:234,column:23}},"93":{start:{line:236,column:6},end:{line:238,column:7}},"94":{start:{line:237,column:8},end:{line:237,column:87}},"95":{start:{line:240,column:6},end:{line:244,column:37}},"96":{start:{line:241,column:8},end:{line:243,column:19}},"97":{start:{line:242,column:10},end:{line:242,column:49}},"98":{start:{line:255,column:6},end:{line:257,column:7}},"99":{start:{line:256,column:8},end:{line:256,column:87}},"100":{start:{line:259,column:6},end:{line:259,column:79}},"101":{start:{line:269,column:6},end:{line:271,column:7}},"102":{start:{line:270,column:8},end:{line:270,column:96}},"103":{start:{line:273,column:6},end:{line:273,column:113}},"104":{start:{line:298,column:17},end:{line:298,column:64}},"105":{start:{line:300,column:6},end:{line:316,column:7}},"106":{start:{line:301,column:18},end:{line:301,column:45}},"107":{start:{line:303,column:17},end:{line:307,column:9}},"108":{start:{line:304,column:18},end:{line:304,column:48}},"109":{start:{line:305,column:10},end:{line:305,column:51}},"110":{start:{line:306,column:10},end:{line:306,column:22}},"111":{start:{line:309,column:8},end:{line:309,column:53}},"112":{start:{line:311,column:8},end:{line:313,column:9}},"113":{start:{line:312,column:10},end:{line:312,column:38}},"114":{start:{line:315,column:8},end:{line:315,column:40}},"115":{start:{line:329,column:23},end:{line:329,column:96}},"116":{start:{line:331,column:6},end:{line:333,column:7}},"117":{start:{line:332,column:8},end:{line:332,column:97}},"118":{start:{line:335,column:6},end:{line:335,column:59}},"119":{start:{line:351,column:6},end:{line:351,column:36}},"120":{start:{line:362,column:6},end:{line:362,column:36}},"121":{start:{line:372,column:6},end:{line:372,column:33}},"122":{start:{line:382,column:6},end:{line:382,column:35}},"123":{start:{line:392,column:6},end:{line:392,column:33}},"124":{start:{line:397,column:6},end:{line:397,column:51}},"125":{start:{line:402,column:6},end:{line:405,column:8}},"126":{start:{line:415,column:6},end:{line:415,column:34}},"127":{start:{line:431,column:6},end:{line:437,column:8}},"128":{start:{line:447,column:6},end:{line:447,column:30}},"129":{start:{line:457,column:6},end:{line:457,column:28}},"130":{start:{line:468,column:6},end:{line:471,column:8}},"131":{start:{line:475,column:2},end:{line:475,column:15}},"132":{start:{line:478,column:0},end:{line:478,column:24}},"133":{start:{line:479,column:0},end:{line:479,column:23}}},fnMap:{"0":{name:"_interopRequireWildcard",decl:{start:{line:32,column:9},end:{line:32,column:32}},loc:{start:{line:32,column:38},end:{line:32,column:472}},line:32},"1":{name:"_interopRequireDefault",decl:{start:{line:34,column:9},end:{line:34,column:31}},loc:{start:{line:34,column:37},end:{line:34,column:95}},line:34},"2":{name:"_classCallCheck",decl:{start:{line:36,column:9},end:{line:36,column:24}},loc:{start:{line:36,column:48},end:{line:36,column:153}},line:36},"3":{name:"_defineProperties",decl:{start:{line:38,column:9},end:{line:38,column:26}},loc:{start:{line:38,column:42},end:{line:38,column:317}},line:38},"4":{name:"_createClass",decl:{start:{line:40,column:9},end:{line:40,column:21}},loc:{start:{line:40,column:60},end:{line:40,column:215}},line:40},"5":{name:"(anonymous_5)",decl:{start:{line:48,column:0},end:{line:48,column:1}},loc:{start:{line:48,column:12},end:{line:476,column:1}},line:48},"6":{name:"Reach",decl:{start:{line:62,column:11},end:{line:62,column:16}},loc:{start:{line:62,column:22},end:{line:78,column:3}},line:62},"7":{name:"register",decl:{start:{line:97,column:20},end:{line:97,column:28}},loc:{start:{line:97,column:64},end:{line:107,column:5}},line:97},"8":{name:"(anonymous_8)",decl:{start:{line:100,column:66},end:{line:100,column:67}},loc:{start:{line:100,column:82},end:{line:106,column:7}},line:100},"9":{name:"login",decl:{start:{line:119,column:20},end:{line:119,column:25}},loc:{start:{line:119,column:49},end:{line:140,column:5}},line:119},"10":{name:"(anonymous_10)",decl:{start:{line:128,column:20},end:{line:128,column:21}},loc:{start:{line:128,column:32},end:{line:134,column:7}},line:128},"11":{name:"(anonymous_11)",decl:{start:{line:134,column:14},end:{line:134,column:15}},loc:{start:{line:134,column:30},end:{line:136,column:7}},line:134},"12":{name:"(anonymous_12)",decl:{start:{line:136,column:14},end:{line:136,column:15}},loc:{start:{line:136,column:27},end:{line:139,column:7}},line:136},"13":{name:"resume",decl:{start:{line:148,column:20},end:{line:148,column:26}},loc:{start:{line:148,column:29},end:{line:166,column:5}},line:148},"14":{name:"(anonymous_14)",decl:{start:{line:151,column:25},end:{line:151,column:26}},loc:{start:{line:151,column:52},end:{line:165,column:7}},line:151},"15":{name:"(anonymous_15)",decl:{start:{line:154,column:37},end:{line:154,column:38}},loc:{start:{line:154,column:60},end:{line:161,column:11}},line:154},"16":{name:"(anonymous_16)",decl:{start:{line:156,column:44},end:{line:156,column:45}},loc:{start:{line:156,column:57},end:{line:159,column:15}},line:156},"17":{name:"anonymous",decl:{start:{line:175,column:20},end:{line:175,column:29}},loc:{start:{line:175,column:36},end:{line:191,column:5}},line:175},"18":{name:"(anonymous_18)",decl:{start:{line:183,column:20},end:{line:183,column:21}},loc:{start:{line:183,column:32},end:{line:185,column:7}},line:183},"19":{name:"(anonymous_19)",decl:{start:{line:185,column:14},end:{line:185,column:15}},loc:{start:{line:185,column:30},end:{line:187,column:7}},line:185},"20":{name:"(anonymous_20)",decl:{start:{line:187,column:14},end:{line:187,column:15}},loc:{start:{line:187,column:27},end:{line:190,column:7}},line:187},"21":{name:"logout",decl:{start:{line:199,column:20},end:{line:199,column:26}},loc:{start:{line:199,column:29},end:{line:223,column:5}},line:199},"22":{name:"(anonymous_22)",decl:{start:{line:202,column:25},end:{line:202,column:26}},loc:{start:{line:202,column:52},end:{line:222,column:7}},line:202},"23":{name:"(anonymous_23)",decl:{start:{line:209,column:15},end:{line:209,column:16}},loc:{start:{line:209,column:27},end:{line:218,column:9}},line:209},"24":{name:"(anonymous_24)",decl:{start:{line:210,column:49},end:{line:210,column:50}},loc:{start:{line:210,column:66},end:{line:212,column:11}},line:210},"25":{name:"(anonymous_25)",decl:{start:{line:214,column:37},end:{line:214,column:38}},loc:{start:{line:214,column:49},end:{line:217,column:11}},line:214},"26":{name:"(anonymous_26)",decl:{start:{line:218,column:17},end:{line:218,column:18}},loc:{start:{line:218,column:30},end:{line:221,column:9}},line:218},"27":{name:"users",decl:{start:{line:233,column:20},end:{line:233,column:25}},loc:{start:{line:233,column:35},end:{line:245,column:5}},line:233},"28":{name:"(anonymous_28)",decl:{start:{line:240,column:56},end:{line:240,column:57}},loc:{start:{line:240,column:73},end:{line:244,column:7}},line:240},"29":{name:"(anonymous_29)",decl:{start:{line:241,column:66},end:{line:241,column:67}},loc:{start:{line:241,column:82},end:{line:243,column:9}},line:241},"30":{name:"rooms",decl:{start:{line:254,column:20},end:{line:254,column:25}},loc:{start:{line:254,column:28},end:{line:260,column:5}},line:254},"31":{name:"invites",decl:{start:{line:268,column:20},end:{line:268,column:27}},loc:{start:{line:268,column:30},end:{line:274,column:5}},line:268},"32":{name:"on",decl:{start:{line:297,column:20},end:{line:297,column:22}},loc:{start:{line:297,column:56},end:{line:317,column:5}},line:297},"33":{name:"cb",decl:{start:{line:303,column:26},end:{line:303,column:28}},loc:{start:{line:303,column:39},end:{line:307,column:9}},line:303},"34":{name:"createRoom",decl:{start:{line:328,column:20},end:{line:328,column:30}},loc:{start:{line:328,column:44},end:{line:336,column:5}},line:328},"35":{name:"getRoom",decl:{start:{line:350,column:20},end:{line:350,column:27}},loc:{start:{line:350,column:33},end:{line:352,column:5}},line:350},"36":{name:"getUser",decl:{start:{line:361,column:20},end:{line:361,column:27}},loc:{start:{line:361,column:33},end:{line:363,column:5}},line:361},"37":{name:"get",decl:{start:{line:371,column:18},end:{line:371,column:21}},loc:{start:{line:371,column:24},end:{line:373,column:5}},line:371},"38":{name:"get",decl:{start:{line:381,column:18},end:{line:381,column:21}},loc:{start:{line:381,column:24},end:{line:383,column:5}},line:381},"39":{name:"get",decl:{start:{line:391,column:18},end:{line:391,column:21}},loc:{start:{line:391,column:24},end:{line:393,column:5}},line:391},"40":{name:"get",decl:{start:{line:396,column:18},end:{line:396,column:21}},loc:{start:{line:396,column:24},end:{line:398,column:5}},line:396},"41":{name:"get",decl:{start:{line:401,column:18},end:{line:401,column:21}},loc:{start:{line:401,column:24},end:{line:406,column:5}},line:401},"42":{name:"get",decl:{start:{line:414,column:18},end:{line:414,column:21}},loc:{start:{line:414,column:24},end:{line:416,column:5}},line:414},"43":{name:"get",decl:{start:{line:430,column:18},end:{line:430,column:21}},loc:{start:{line:430,column:24},end:{line:438,column:5}},line:430},"44":{name:"get",decl:{start:{line:446,column:18},end:{line:446,column:21}},loc:{start:{line:446,column:24},end:{line:448,column:5}},line:446},"45":{name:"get",decl:{start:{line:456,column:18},end:{line:456,column:21}},loc:{start:{line:456,column:24},end:{line:458,column:5}},line:456},"46":{name:"get",decl:{start:{line:467,column:18},end:{line:467,column:21}},loc:{start:{line:467,column:24},end:{line:472,column:5}},line:467}},branchMap:{"0":{loc:{start:{line:32,column:40},end:{line:32,column:470}},type:"if",locations:[{start:{line:32,column:40},end:{line:32,column:470}},{start:{line:32,column:40},end:{line:32,column:470}}],line:32},"1":{loc:{start:{line:32,column:44},end:{line:32,column:65}},type:"binary-expr",locations:[{start:{line:32,column:44},end:{line:32,column:47}},{start:{line:32,column:51},end:{line:32,column:65}}],line:32},"2":{loc:{start:{line:32,column:107},end:{line:32,column:431}},type:"if",locations:[{start:{line:32,column:107},end:{line:32,column:431}},{start:{line:32,column:107},end:{line:32,column:431}}],line:32},"3":{loc:{start:{line:32,column:149},end:{line:32,column:427}},type:"if",locations:[{start:{line:32,column:149},end:{line:32,column:427}},{start:{line:32,column:149},end:{line:32,column:427}}],line:32},"4":{loc:{start:{line:32,column:214},end:{line:32,column:319}},type:"cond-expr",locations:[{start:{line:32,column:273},end:{line:32,column:314}},{start:{line:32,column:317},end:{line:32,column:319}}],line:32},"5":{loc:{start:{line:32,column:214},end:{line:32,column:270}},type:"binary-expr",locations:[{start:{line:32,column:214},end:{line:32,column:235}},{start:{line:32,column:239},end:{line:32,column:270}}],line:32},"6":{loc:{start:{line:32,column:321},end:{line:32,column:425}},type:"if",locations:[{start:{line:32,column:321},end:{line:32,column:425}},{start:{line:32,column:321},end:{line:32,column:425}}],line:32},"7":{loc:{start:{line:32,column:325},end:{line:32,column:345}},type:"binary-expr",locations:[{start:{line:32,column:325},end:{line:32,column:333}},{start:{line:32,column:337},end:{line:32,column:345}}],line:32},"8":{loc:{start:{line:34,column:46},end:{line:34,column:92}},type:"cond-expr",locations:[{start:{line:34,column:70},end:{line:34,column:73}},{start:{line:34,column:76},end:{line:34,column:92}}],line:34},"9":{loc:{start:{line:34,column:46},end:{line:34,column:67}},type:"binary-expr",locations:[{start:{line:34,column:46},end:{line:34,column:49}},{start:{line:34,column:53},end:{line:34,column:67}}],line:34},"10":{loc:{start:{line:36,column:50},end:{line:36,column:151}},type:"if",locations:[{start:{line:36,column:50},end:{line:36,column:151}},{start:{line:36,column:50},end:{line:36,column:151}}],line:36},"11":{loc:{start:{line:38,column:136},end:{line:38,column:166}},type:"binary-expr",locations:[{start:{line:38,column:136},end:{line:38,column:157}},{start:{line:38,column:161},end:{line:38,column:166}}],line:38},"12":{loc:{start:{line:38,column:200},end:{line:38,column:254}},type:"if",locations:[{start:{line:38,column:200},end:{line:38,column:254}},{start:{line:38,column:200},end:{line:38,column:254}}],line:38},"13":{loc:{start:{line:40,column:62},end:{line:40,column:131}},type:"if",locations:[{start:{line:40,column:62},end:{line:40,column:131}},{start:{line:40,column:62},end:{line:40,column:131}}],line:40},"14":{loc:{start:{line:40,column:132},end:{line:40,column:193}},type:"if",locations:[{start:{line:40,column:132},end:{line:40,column:193}},{start:{line:40,column:132},end:{line:40,column:193}}],line:40},"15":{loc:{start:{line:63,column:14},end:{line:63,column:86}},type:"cond-expr",locations:[{start:{line:63,column:67},end:{line:63,column:79}},{start:{line:63,column:82},end:{line:63,column:86}}],line:63},"16":{loc:{start:{line:63,column:14},end:{line:63,column:64}},type:"binary-expr",locations:[{start:{line:63,column:14},end:{line:63,column:34}},{start:{line:63,column:38},end:{line:63,column:64}}],line:63},"17":{loc:{start:{line:101,column:8},end:{line:103,column:9}},type:"if",locations:[{start:{line:101,column:8},end:{line:103,column:9}},{start:{line:101,column:8},end:{line:103,column:9}}],line:101},"18":{loc:{start:{line:102,column:46},end:{line:102,column:59}},type:"binary-expr",locations:[{start:{line:102,column:46},end:{line:102,column:50}},{start:{line:102,column:54},end:{line:102,column:59}}],line:102},"19":{loc:{start:{line:120,column:23},end:{line:120,column:96}},type:"cond-expr",locations:[{start:{line:120,column:76},end:{line:120,column:88}},{start:{line:120,column:91},end:{line:120,column:96}}],line:120},"20":{loc:{start:{line:120,column:23},end:{line:120,column:73}},type:"binary-expr",locations:[{start:{line:120,column:23},end:{line:120,column:43}},{start:{line:120,column:47},end:{line:120,column:73}}],line:120},"21":{loc:{start:{line:124,column:6},end:{line:126,column:7}},type:"if",locations:[{start:{line:124,column:6},end:{line:126,column:7}},{start:{line:124,column:6},end:{line:126,column:7}}],line:124},"22":{loc:{start:{line:124,column:10},end:{line:124,column:54}},type:"binary-expr",locations:[{start:{line:124,column:10},end:{line:124,column:22}},{start:{line:124,column:26},end:{line:124,column:54}}],line:124},"23":{loc:{start:{line:153,column:8},end:{line:164,column:9}},type:"if",locations:[{start:{line:153,column:8},end:{line:164,column:9}},{start:{line:153,column:8},end:{line:164,column:9}}],line:153},"24":{loc:{start:{line:155,column:12},end:{line:160,column:13}},type:"if",locations:[{start:{line:155,column:12},end:{line:160,column:13}},{start:{line:155,column:12},end:{line:160,column:13}}],line:155},"25":{loc:{start:{line:155,column:16},end:{line:155,column:39}},type:"binary-expr",locations:[{start:{line:155,column:16},end:{line:155,column:20}},{start:{line:155,column:24},end:{line:155,column:39}}],line:155},"26":{loc:{start:{line:179,column:6},end:{line:181,column:7}},type:"if",locations:[{start:{line:179,column:6},end:{line:181,column:7}},{start:{line:179,column:6},end:{line:181,column:7}}],line:179},"27":{loc:{start:{line:179,column:10},end:{line:179,column:81}},type:"binary-expr",locations:[{start:{line:179,column:10},end:{line:179,column:22}},{start:{line:179,column:27},end:{line:179,column:50}},{start:{line:179,column:54},end:{line:179,column:80}}],line:179},"28":{loc:{start:{line:205,column:8},end:{line:207,column:9}},type:"if",locations:[{start:{line:205,column:8},end:{line:207,column:9}},{start:{line:205,column:8},end:{line:207,column:9}}],line:205},"29":{loc:{start:{line:236,column:6},end:{line:238,column:7}},type:"if",locations:[{start:{line:236,column:6},end:{line:238,column:7}},{start:{line:236,column:6},end:{line:238,column:7}}],line:236},"30":{loc:{start:{line:241,column:15},end:{line:243,column:18}},type:"cond-expr",locations:[{start:{line:241,column:53},end:{line:243,column:10}},{start:{line:243,column:13},end:{line:243,column:18}}],line:241},"31":{loc:{start:{line:241,column:15},end:{line:241,column:50}},type:"binary-expr",locations:[{start:{line:241,column:15},end:{line:241,column:23}},{start:{line:241,column:27},end:{line:241,column:32}},{start:{line:241,column:36},end:{line:241,column:50}}],line:241},"32":{loc:{start:{line:255,column:6},end:{line:257,column:7}},type:"if",locations:[{start:{line:255,column:6},end:{line:257,column:7}},{start:{line:255,column:6},end:{line:257,column:7}}],line:255},"33":{loc:{start:{line:269,column:6},end:{line:271,column:7}},type:"if",locations:[{start:{line:269,column:6},end:{line:271,column:7}},{start:{line:269,column:6},end:{line:271,column:7}}],line:269},"34":{loc:{start:{line:300,column:6},end:{line:316,column:7}},type:"if",locations:[{start:{line:300,column:6},end:{line:316,column:7}},{start:{line:300,column:6},end:{line:316,column:7}}],line:300},"35":{loc:{start:{line:304,column:18},end:{line:304,column:48}},type:"cond-expr",locations:[{start:{line:304,column:24},end:{line:304,column:41}},{start:{line:304,column:44},end:{line:304,column:48}}],line:304},"36":{loc:{start:{line:311,column:8},end:{line:313,column:9}},type:"if",locations:[{start:{line:311,column:8},end:{line:313,column:9}},{start:{line:311,column:8},end:{line:313,column:9}}],line:311},"37":{loc:{start:{line:329,column:23},end:{line:329,column:96}},type:"cond-expr",locations:[{start:{line:329,column:76},end:{line:329,column:88}},{start:{line:329,column:91},end:{line:329,column:96}}],line:329},"38":{loc:{start:{line:329,column:23},end:{line:329,column:73}},type:"binary-expr",locations:[{start:{line:329,column:23},end:{line:329,column:43}},{start:{line:329,column:47},end:{line:329,column:73}}],line:329},"39":{loc:{start:{line:331,column:6},end:{line:333,column:7}},type:"if",locations:[{start:{line:331,column:6},end:{line:333,column:7}},{start:{line:331,column:6},end:{line:333,column:7}}],line:331}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/Reach.js"],names:["Reach","url","cfg","cache","base","config","_callbacks","email","password","name","rememberMe","createUser","then","auth","login","catch","Log","r","p","Promise","resolve","current","logout","authWithPassword","User","init","u","user","reject","Webcom","INTERNAL","PersistentStorage","get","resume","error","Error","anonymous","authAnonymously","disconnect","Object","keys","forEach","event","DataSync","off","Events","reach","toPath","e","include","list","users","filter","uid","Room","Invite","callback","cancelCallback","path","Cls","toClass","cb","snapData","d","i","on","push","extra","publicRoom","create","peerConnections","stacks","sdk","SDK_VERSION","schema","SCHEMA_VERSION","StreamTypes","room","stream","invite","local","browser","Media","audio","video","module","exports"],mappings:"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",sourcesContent:["import Webcom from 'webcom/webcom';\nimport browser from './definitions/Browser';\nimport StreamTypes from './definitions/StreamTypes';\nimport * as Events from './definitions/Events';\nimport { audio, video } from './definitions/Codec';\nimport User from './core/User';\nimport Room from './core/Room';\nimport Invite from './core/Invite';\nimport * as DataSync from './core/util/DataSync';\nimport cache from './core/util/cache';\nimport * as Log from './core/util/Log';\nimport Media from './core/util/Media';\n\n/**\n * Entry point for Reach SDK\n * @public\n */\nexport default class Reach {\n  /**\n   * Create Reach's data structure where the url points to (might not be the root of your namespace)\n   * @public\n   * @param {string|Webcom} url The url of your namespace or an existing Webcom reference.\n   * @param {Config} [cfg] Reach configuration. You can pass constraints here\n   * @example <caption>Init with the default configuration</caption>\n   * var myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>');\n   * @example <caption>Init and set constraints for SD video and logLevel to 'info'</caption>\n   * var myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>', {\n   *  constraints: Reach.media.constraints('SD'),\n   *  logLevel: 'INFO'\n   * });\n   */\n  constructor(url, cfg = null) {\n    // Set shared reference\n    cache.base = url;\n    // Set shared configuration\n    cache.config = cfg;\n    /**\n     * List of declared callbacks\n     * @type {{}}\n     * @private\n     */\n    this._callbacks = {};\n  }\n\n  /**\n   * Get versions of SDK and DataModel.\n   * The Schema version can be used to determine compatibility with the Android & iOS SDK.\n   * @return {{sdk: string, schema: string}}\n   */\n  static get version() {\n    return { sdk: SDK_VERSION, schema: SCHEMA_VERSION }; // eslint-disable-line no-undef\n  }\n\n  /**\n   * The supported stream types\n   * @returns {StreamTypes}\n   */\n  static get types() {\n    return StreamTypes;\n  }\n\n  /**\n   * The supported events\n   * @return {{\n      room: Events/Room,\n      reach: Events/Reach,\n      stream: Events/Stream,\n      invite: Events/Invite,\n      local: Events/Local\n     }}\n   */\n  static get events() {\n    return {\n      room: Events.room,\n      reach: Events.reach,\n      stream: Events.stream,\n      invite: Events.invite,\n      local: Events.local\n    };\n  }\n\n  /**\n   * The browser's details\n   * @return {Browser}\n   */\n  static get browser() {\n    return browser;\n  }\n\n  /**\n   * Media utility functions\n   * @return {Media}\n   */\n  static get media() {\n    return Media;\n  }\n\n  /**\n   * The codec presets to use when setting {@link Config#preferredAudioCodec}\n   * or {@link Config#preferredVideoCodec}\n   * @return {{audio: Codec/audio, video: Codec/video}}\n   */\n  static get codecs() {\n    return { audio, video };\n  }\n\n  /**\n   * DataSync reference\n   * @type {Webcom}\n   */\n  get base() {\n    return cache.base;\n  }\n\n  /**\n   * The configuration\n   * @type {Config}\n   */\n  get config() {\n    return cache.config;\n  }\n\n  /**\n   * The connected User\n   * @type {User}\n   */\n  get current() {\n    return cache.user;\n  }\n\n  /**\n   * Register & Sign-in as a new user\n   * @param {string} email The email of the user\n   * @param {string} password The password of the user\n   * @param {string} [name] The display name of the user (defaults to email)\n   * @param {boolean} [rememberMe=false] keep user connected ?\n   * @returns {Promise<User>}\n   */\n  register(email, password, name, rememberMe) {\n    return cache.base.createUser(email, password)\n      .then((auth) => {\n        if (auth) {\n          return this.login(email, password, name || email, rememberMe);\n        }\n        return null;\n      })\n      .catch(Log.r('Reach~register'));\n  }\n\n  /**\n   * Sign-in an existing user\n   * @param {string} email The email of the user\n   * @param {string} password The password of the user\n   * @param {string} [name] The name of the user. Defaults to the value in base.\n   * @param {boolean} [rememberMe=false] keep user connected ?\n   * @returns {Promise<User>}\n   */\n  login(email, password, name, rememberMe = false) {\n    // Force logout to bypass Webcom bug\n    let p = Promise.resolve();\n    if (this.current && this.current.email !== email) {\n      p = this.logout();\n    }\n    return p\n      .then(() => cache.base.authWithPassword({ email, password, rememberMe }))\n      .then(auth => User.init(auth, name))\n      .then((u) => {\n        cache.user = u;\n        return u;\n      })\n      .catch(Log.r('Reach~login'));\n  }\n\n  /**\n   * Resume previous session\n   * @returns {Promise<User>}\n   */\n  resume() {\n    return new Promise((resolve, reject) => {\n      // Resume session\n      if (Webcom.INTERNAL.PersistentStorage.get('session')) {\n        cache.base.resume((error, auth) => {\n          if (auth && !this.current) {\n            User.init(auth).then((u) => {\n              cache.user = u;\n              resolve(u);\n            }, reject);\n          }\n        });\n      } else {\n        reject(new Error('No session to resume'));\n      }\n    });\n  }\n\n  /**\n   * Sign-in an anonymous user\n   * @param {string} name The display name of the user\n   * @returns {Promise<User>}\n   */\n  anonymous(name) {\n    // Force logout to bypass Webcom bug\n    let p = Promise.resolve();\n    if (this.current && (!this.current.anonymous || this.current.name !== name)) {\n      p = this.logout();\n    }\n    return p\n      .then(() => cache.base.authAnonymously())\n      .then(auth => User.init(auth, name))\n      .then((u) => {\n        cache.user = u;\n        return u;\n      })\n      .catch(Log.r('Reach~anonymous'));\n  }\n\n  /**\n   * Logout current user\n   * @returns {Promise}\n   */\n  logout() {\n    return new Promise((resolve, reject) => {\n      let p = Promise.resolve();\n      if (this.current != null) {\n        p = User.disconnect(this.current);\n      }\n      p\n        .then(() => {\n          Object.keys(this._callbacks).forEach(\n            event => DataSync.off(Events.reach.toPath(event)(cache.user), event)\n          );\n          cache.base.logout(() => {\n            cache.user = null;\n            resolve();\n          });\n        })\n        .catch((e) => {\n          Log.e(e);\n          reject(e);\n        });\n    });\n  }\n\n  /**\n   * Get the list of registered users\n   * @ignore If your users base is pretty large, this method is impossible.\n   * @param {boolean} [include=false] Include current user in user's list\n   * @return {Promise<User[], Error>}\n   */\n  users(include) {\n    if (!this.current) {\n      return Promise.reject(new Error('Only an authenticated user can list Users.'));\n    }\n    return DataSync.list('users', User)\n      .then(users => (!include && users && this.current\n        ? users.filter(user => user.uid !== this.current.uid)\n        : users))\n      .catch(Log.r('Reach~users'));\n  }\n\n  /**\n   * Get the list of rooms\n   * @ignore If your users base is pretty large, this method is impossible.\n   * @return {Promise<Room[], Error>}\n   */\n\n  rooms() {\n    if (!this.current) {\n      return Promise.reject(new Error('Only an authenticated user can list Rooms.'));\n    }\n    return DataSync.list('rooms', Room)\n      .catch(Log.r('Reach~rooms'));\n  }\n\n  /**\n   * Get the list of invites\n   * @return {Promise<Invite[], Error>}\n   */\n  invites() {\n    if (!this.current) {\n      return Promise.reject(new Error('Cannot list invites without a User being logged in.'));\n    }\n    return DataSync.list(`_/invites/${this.current.uid}`, Invite)\n      .catch(Log.r('Reach~invites'));\n  }\n\n  /**\n   * Register a callback for a specific event\n   * @param {string} event The event name ({@link Events/Reach}). Can be:\n   * - USER_ADDED\n   * - USER_CHANGED\n   * - USER_REMOVED\n   * - ROOM_ADDED\n   * - ROOM_CHANGED\n   * - ROOM_REMOVED\n   * - INVITE_ADDED\n   * - INVITE_CHANGED\n   * @param {function} callback The callback for the event,\n   * the arguments depends on the type of event:\n   * - USER_*: callback({@link User} u)\n   * - ROOM_*: callback({@link Room} r)\n   * - INVITE_*: callback({@link Invite} i)\n   * @param {Webcom/api.Query~cancelCallback} [cancelCallback] The error callback for the event,\n   * takes an Error as only argument\n   */\n  on(event, callback, cancelCallback) {\n    const path = Events.reach.toPath(event)(cache.user);\n    if (path) {\n      const Cls = Events.reach.toClass(event);\n      const cb = (snapData) => {\n        const d = Cls ? new Cls(snapData) : null;\n        Log.i(`Reach~on(${event})`, d);\n        callback(d);\n      };\n      DataSync.on(path, event, cb, cancelCallback);\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(cb);\n    }\n  }\n\n  /**\n   * Create a new room\n   * @param {string} [name] The room name\n   * @param {object} [extra] Extra informations\n   * @param {boolean} [publicRoom=false] Indicates public room\n   * @returns {Promise<Room>}\n   */\n  createRoom(name, extra, publicRoom = false) {\n    if (!this.current) {\n      return Promise.reject(new Error('Cannot create a Room without a User being logged in.'));\n    }\n    return Room.create(name, extra, publicRoom);\n  }\n\n  /**\n   * Get a list of all opened {@link PeerConnection}s\n   * @return {*}\n   */\n  get peerConnections() {\n    return cache.peerConnections.stacks;\n  }\n\n  /**\n   * Get a {@link Room} from its `uid`\n   * @param {string} uid The room's UID\n   * @returns {Promise.<Room>}\n   */\n  getRoom(uid) {\n    return Room.get(uid);\n  }\n\n  /**\n   * Get a {@link User} from its `uid`\n   * @param {string} uid The user's UID\n   * @returns {Promise.<User>}\n   */\n  getUser(uid) {\n    return User.get(uid);\n  }\n}\n\nmodule.exports = Reach;\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_b2ari3wke.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_b2ari3wke.s[1]++;exports.default=void 0;var _webcom=(cov_b2ari3wke.s[2]++,_interopRequireDefault(__webpack_require__(/*! webcom/webcom */ "webcom/webcom")));var _Browser=(cov_b2ari3wke.s[3]++,_interopRequireDefault(__webpack_require__(/*! ./definitions/Browser */ "./src/definitions/Browser.js")));var _StreamTypes=(cov_b2ari3wke.s[4]++,_interopRequireDefault(__webpack_require__(/*! ./definitions/StreamTypes */ "./src/definitions/StreamTypes.js")));var Events=(cov_b2ari3wke.s[5]++,_interopRequireWildcard(__webpack_require__(/*! ./definitions/Events */ "./src/definitions/Events.js")));var _Codec=(cov_b2ari3wke.s[6]++,__webpack_require__(/*! ./definitions/Codec */ "./src/definitions/Codec.js"));var _User=(cov_b2ari3wke.s[7]++,_interopRequireDefault(__webpack_require__(/*! ./core/User */ "./src/core/User.js")));var _Room=(cov_b2ari3wke.s[8]++,_interopRequireDefault(__webpack_require__(/*! ./core/Room */ "./src/core/Room.js")));var _Invite=(cov_b2ari3wke.s[9]++,_interopRequireDefault(__webpack_require__(/*! ./core/Invite */ "./src/core/Invite.js")));var DataSync=(cov_b2ari3wke.s[10]++,_interopRequireWildcard(__webpack_require__(/*! ./core/util/DataSync */ "./src/core/util/DataSync.js")));var _cache=(cov_b2ari3wke.s[11]++,_interopRequireDefault(__webpack_require__(/*! ./core/util/cache */ "./src/core/util/cache.js")));var Log=(cov_b2ari3wke.s[12]++,_interopRequireWildcard(__webpack_require__(/*! ./core/util/Log */ "./src/core/util/Log.js")));var _Media=(cov_b2ari3wke.s[13]++,_interopRequireDefault(__webpack_require__(/*! ./core/util/Media */ "./src/core/util/Media.js")));function _interopRequireWildcard(obj){cov_b2ari3wke.f[0]++;cov_b2ari3wke.s[14]++;if((cov_b2ari3wke.b[1][0]++,obj)&&(cov_b2ari3wke.b[1][1]++,obj.__esModule)){cov_b2ari3wke.b[0][0]++;cov_b2ari3wke.s[15]++;return obj;}else{cov_b2ari3wke.b[0][1]++;var newObj=(cov_b2ari3wke.s[16]++,{});cov_b2ari3wke.s[17]++;if(obj!=null){cov_b2ari3wke.b[2][0]++;cov_b2ari3wke.s[18]++;for(var key in obj){cov_b2ari3wke.s[19]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_b2ari3wke.b[3][0]++;var desc=(cov_b2ari3wke.s[20]++,(cov_b2ari3wke.b[5][0]++,Object.defineProperty)&&(cov_b2ari3wke.b[5][1]++,Object.getOwnPropertyDescriptor)?(cov_b2ari3wke.b[4][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_b2ari3wke.b[4][1]++,{}));cov_b2ari3wke.s[21]++;if((cov_b2ari3wke.b[7][0]++,desc.get)||(cov_b2ari3wke.b[7][1]++,desc.set)){cov_b2ari3wke.b[6][0]++;cov_b2ari3wke.s[22]++;Object.defineProperty(newObj,key,desc);}else{cov_b2ari3wke.b[6][1]++;cov_b2ari3wke.s[23]++;newObj[key]=obj[key];}}else{cov_b2ari3wke.b[3][1]++;}}}else{cov_b2ari3wke.b[2][1]++;}cov_b2ari3wke.s[24]++;newObj.default=obj;cov_b2ari3wke.s[25]++;return newObj;}}function _interopRequireDefault(obj){cov_b2ari3wke.f[1]++;cov_b2ari3wke.s[26]++;return(cov_b2ari3wke.b[9][0]++,obj)&&(cov_b2ari3wke.b[9][1]++,obj.__esModule)?(cov_b2ari3wke.b[8][0]++,obj):(cov_b2ari3wke.b[8][1]++,{default:obj});}function _classCallCheck(instance,Constructor){cov_b2ari3wke.f[2]++;cov_b2ari3wke.s[27]++;if(!(instance instanceof Constructor)){cov_b2ari3wke.b[10][0]++;cov_b2ari3wke.s[28]++;throw new TypeError("Cannot call a class as a function");}else{cov_b2ari3wke.b[10][1]++;}}function _defineProperties(target,props){cov_b2ari3wke.f[3]++;cov_b2ari3wke.s[29]++;for(var i=0;i<props.length;i++){var descriptor=(cov_b2ari3wke.s[30]++,props[i]);cov_b2ari3wke.s[31]++;descriptor.enumerable=(cov_b2ari3wke.b[11][0]++,descriptor.enumerable)||(cov_b2ari3wke.b[11][1]++,false);cov_b2ari3wke.s[32]++;descriptor.configurable=true;cov_b2ari3wke.s[33]++;if("value"in descriptor){cov_b2ari3wke.b[12][0]++;cov_b2ari3wke.s[34]++;descriptor.writable=true;}else{cov_b2ari3wke.b[12][1]++;}cov_b2ari3wke.s[35]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_b2ari3wke.f[4]++;cov_b2ari3wke.s[36]++;if(protoProps){cov_b2ari3wke.b[13][0]++;cov_b2ari3wke.s[37]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_b2ari3wke.b[13][1]++;}cov_b2ari3wke.s[38]++;if(staticProps){cov_b2ari3wke.b[14][0]++;cov_b2ari3wke.s[39]++;_defineProperties(Constructor,staticProps);}else{cov_b2ari3wke.b[14][1]++;}cov_b2ari3wke.s[40]++;return Constructor;}var Reach=(cov_b2ari3wke.s[41]++,function(){cov_b2ari3wke.f[5]++;function Reach(url){cov_b2ari3wke.f[6]++;var cfg=(cov_b2ari3wke.s[42]++,(cov_b2ari3wke.b[16][0]++,arguments.length>1)&&(cov_b2ari3wke.b[16][1]++,arguments[1]!==undefined)?(cov_b2ari3wke.b[15][0]++,arguments[1]):(cov_b2ari3wke.b[15][1]++,null));cov_b2ari3wke.s[43]++;_classCallCheck(this,Reach);cov_b2ari3wke.s[44]++;_cache.default.base=url;cov_b2ari3wke.s[45]++;_cache.default.config=cfg;cov_b2ari3wke.s[46]++;this._callbacks={};}cov_b2ari3wke.s[47]++;_createClass(Reach,[{key:"register",value:function register(email,password,name,rememberMe){cov_b2ari3wke.f[7]++;var _this=(cov_b2ari3wke.s[48]++,this);cov_b2ari3wke.s[49]++;return _cache.default.base.createUser(email,password).then(function(auth){cov_b2ari3wke.f[8]++;cov_b2ari3wke.s[50]++;if(auth){cov_b2ari3wke.b[17][0]++;cov_b2ari3wke.s[51]++;return _this.login(email,password,(cov_b2ari3wke.b[18][0]++,name)||(cov_b2ari3wke.b[18][1]++,email),rememberMe);}else{cov_b2ari3wke.b[17][1]++;}cov_b2ari3wke.s[52]++;return null;}).catch(Log.r('Reach~register'));}},{key:"login",value:function login(email,password,name){cov_b2ari3wke.f[9]++;var rememberMe=(cov_b2ari3wke.s[53]++,(cov_b2ari3wke.b[20][0]++,arguments.length>3)&&(cov_b2ari3wke.b[20][1]++,arguments[3]!==undefined)?(cov_b2ari3wke.b[19][0]++,arguments[3]):(cov_b2ari3wke.b[19][1]++,false));var p=(cov_b2ari3wke.s[54]++,Promise.resolve());cov_b2ari3wke.s[55]++;if((cov_b2ari3wke.b[22][0]++,this.current)&&(cov_b2ari3wke.b[22][1]++,this.current.email!==email)){cov_b2ari3wke.b[21][0]++;cov_b2ari3wke.s[56]++;p=this.logout();}else{cov_b2ari3wke.b[21][1]++;}cov_b2ari3wke.s[57]++;return p.then(function(){cov_b2ari3wke.f[10]++;cov_b2ari3wke.s[58]++;return _cache.default.base.authWithPassword({email:email,password:password,rememberMe:rememberMe});}).then(function(auth){cov_b2ari3wke.f[11]++;cov_b2ari3wke.s[59]++;return _User.default.init(auth,name);}).then(function(u){cov_b2ari3wke.f[12]++;cov_b2ari3wke.s[60]++;_cache.default.user=u;cov_b2ari3wke.s[61]++;return u;}).catch(Log.r('Reach~login'));}},{key:"resume",value:function resume(){cov_b2ari3wke.f[13]++;var _this2=(cov_b2ari3wke.s[62]++,this);cov_b2ari3wke.s[63]++;return new Promise(function(resolve,reject){cov_b2ari3wke.f[14]++;cov_b2ari3wke.s[64]++;if(_webcom.default.INTERNAL.PersistentStorage.get('session')){cov_b2ari3wke.b[23][0]++;cov_b2ari3wke.s[65]++;_cache.default.base.resume(function(error,auth){cov_b2ari3wke.f[15]++;cov_b2ari3wke.s[66]++;if((cov_b2ari3wke.b[25][0]++,auth)&&(cov_b2ari3wke.b[25][1]++,!_this2.current)){cov_b2ari3wke.b[24][0]++;cov_b2ari3wke.s[67]++;_User.default.init(auth).then(function(u){cov_b2ari3wke.f[16]++;cov_b2ari3wke.s[68]++;_cache.default.user=u;cov_b2ari3wke.s[69]++;resolve(u);},reject);}else{cov_b2ari3wke.b[24][1]++;}});}else{cov_b2ari3wke.b[23][1]++;cov_b2ari3wke.s[70]++;reject(new Error('No session to resume'));}});}},{key:"anonymous",value:function anonymous(name){cov_b2ari3wke.f[17]++;var p=(cov_b2ari3wke.s[71]++,Promise.resolve());cov_b2ari3wke.s[72]++;if((cov_b2ari3wke.b[27][0]++,this.current)&&((cov_b2ari3wke.b[27][1]++,!this.current.anonymous)||(cov_b2ari3wke.b[27][2]++,this.current.name!==name))){cov_b2ari3wke.b[26][0]++;cov_b2ari3wke.s[73]++;p=this.logout();}else{cov_b2ari3wke.b[26][1]++;}cov_b2ari3wke.s[74]++;return p.then(function(){cov_b2ari3wke.f[18]++;cov_b2ari3wke.s[75]++;return _cache.default.base.authAnonymously();}).then(function(auth){cov_b2ari3wke.f[19]++;cov_b2ari3wke.s[76]++;return _User.default.init(auth,name);}).then(function(u){cov_b2ari3wke.f[20]++;cov_b2ari3wke.s[77]++;_cache.default.user=u;cov_b2ari3wke.s[78]++;return u;}).catch(Log.r('Reach~anonymous'));}},{key:"logout",value:function logout(){cov_b2ari3wke.f[21]++;var _this3=(cov_b2ari3wke.s[79]++,this);cov_b2ari3wke.s[80]++;return new Promise(function(resolve,reject){cov_b2ari3wke.f[22]++;var p=(cov_b2ari3wke.s[81]++,Promise.resolve());cov_b2ari3wke.s[82]++;if(_this3.current!=null){cov_b2ari3wke.b[28][0]++;cov_b2ari3wke.s[83]++;p=_User.default.disconnect(_this3.current);}else{cov_b2ari3wke.b[28][1]++;}cov_b2ari3wke.s[84]++;p.then(function(){cov_b2ari3wke.f[23]++;cov_b2ari3wke.s[85]++;Object.keys(_this3._callbacks).forEach(function(event){cov_b2ari3wke.f[24]++;cov_b2ari3wke.s[86]++;return DataSync.off(Events.reach.toPath(event)(_cache.default.user),event);});cov_b2ari3wke.s[87]++;_cache.default.base.logout(function(){cov_b2ari3wke.f[25]++;cov_b2ari3wke.s[88]++;_cache.default.user=null;cov_b2ari3wke.s[89]++;resolve();});}).catch(function(e){cov_b2ari3wke.f[26]++;cov_b2ari3wke.s[90]++;Log.e(e);cov_b2ari3wke.s[91]++;reject(e);});});}},{key:"users",value:function users(include){cov_b2ari3wke.f[27]++;var _this4=(cov_b2ari3wke.s[92]++,this);cov_b2ari3wke.s[93]++;if(!this.current){cov_b2ari3wke.b[29][0]++;cov_b2ari3wke.s[94]++;return Promise.reject(new Error('Only an authenticated user can list Users.'));}else{cov_b2ari3wke.b[29][1]++;}cov_b2ari3wke.s[95]++;return DataSync.list('users',_User.default).then(function(users){cov_b2ari3wke.f[28]++;cov_b2ari3wke.s[96]++;return(cov_b2ari3wke.b[31][0]++,!include)&&(cov_b2ari3wke.b[31][1]++,users)&&(cov_b2ari3wke.b[31][2]++,_this4.current)?(cov_b2ari3wke.b[30][0]++,users.filter(function(user){cov_b2ari3wke.f[29]++;cov_b2ari3wke.s[97]++;return user.uid!==_this4.current.uid;})):(cov_b2ari3wke.b[30][1]++,users);}).catch(Log.r('Reach~users'));}},{key:"rooms",value:function rooms(){cov_b2ari3wke.f[30]++;cov_b2ari3wke.s[98]++;if(!this.current){cov_b2ari3wke.b[32][0]++;cov_b2ari3wke.s[99]++;return Promise.reject(new Error('Only an authenticated user can list Rooms.'));}else{cov_b2ari3wke.b[32][1]++;}cov_b2ari3wke.s[100]++;return DataSync.list('rooms',_Room.default).catch(Log.r('Reach~rooms'));}},{key:"invites",value:function invites(){cov_b2ari3wke.f[31]++;cov_b2ari3wke.s[101]++;if(!this.current){cov_b2ari3wke.b[33][0]++;cov_b2ari3wke.s[102]++;return Promise.reject(new Error('Cannot list invites without a User being logged in.'));}else{cov_b2ari3wke.b[33][1]++;}cov_b2ari3wke.s[103]++;return DataSync.list("_/invites/".concat(this.current.uid),_Invite.default).catch(Log.r('Reach~invites'));}},{key:"on",value:function on(event,callback,cancelCallback){cov_b2ari3wke.f[32]++;var path=(cov_b2ari3wke.s[104]++,Events.reach.toPath(event)(_cache.default.user));cov_b2ari3wke.s[105]++;if(path){cov_b2ari3wke.b[34][0]++;var Cls=(cov_b2ari3wke.s[106]++,Events.reach.toClass(event));cov_b2ari3wke.s[107]++;var cb=function cb(snapData){cov_b2ari3wke.f[33]++;var d=(cov_b2ari3wke.s[108]++,Cls?(cov_b2ari3wke.b[35][0]++,new Cls(snapData)):(cov_b2ari3wke.b[35][1]++,null));cov_b2ari3wke.s[109]++;Log.i("Reach~on(".concat(event,")"),d);cov_b2ari3wke.s[110]++;callback(d);};cov_b2ari3wke.s[111]++;DataSync.on(path,event,cb,cancelCallback);cov_b2ari3wke.s[112]++;if(!this._callbacks[event]){cov_b2ari3wke.b[36][0]++;cov_b2ari3wke.s[113]++;this._callbacks[event]=[];}else{cov_b2ari3wke.b[36][1]++;}cov_b2ari3wke.s[114]++;this._callbacks[event].push(cb);}else{cov_b2ari3wke.b[34][1]++;}}},{key:"createRoom",value:function createRoom(name,extra){cov_b2ari3wke.f[34]++;var publicRoom=(cov_b2ari3wke.s[115]++,(cov_b2ari3wke.b[38][0]++,arguments.length>2)&&(cov_b2ari3wke.b[38][1]++,arguments[2]!==undefined)?(cov_b2ari3wke.b[37][0]++,arguments[2]):(cov_b2ari3wke.b[37][1]++,false));cov_b2ari3wke.s[116]++;if(!this.current){cov_b2ari3wke.b[39][0]++;cov_b2ari3wke.s[117]++;return Promise.reject(new Error('Cannot create a Room without a User being logged in.'));}else{cov_b2ari3wke.b[39][1]++;}cov_b2ari3wke.s[118]++;return _Room.default.create(name,extra,publicRoom);}},{key:"getRoom",value:function getRoom(uid){cov_b2ari3wke.f[35]++;cov_b2ari3wke.s[119]++;return _Room.default.get(uid);}},{key:"getUser",value:function getUser(uid){cov_b2ari3wke.f[36]++;cov_b2ari3wke.s[120]++;return _User.default.get(uid);}},{key:"base",get:function get(){cov_b2ari3wke.f[37]++;cov_b2ari3wke.s[121]++;return _cache.default.base;}},{key:"config",get:function get(){cov_b2ari3wke.f[38]++;cov_b2ari3wke.s[122]++;return _cache.default.config;}},{key:"current",get:function get(){cov_b2ari3wke.f[39]++;cov_b2ari3wke.s[123]++;return _cache.default.user;}},{key:"peerConnections",get:function get(){cov_b2ari3wke.f[40]++;cov_b2ari3wke.s[124]++;return _cache.default.peerConnections.stacks;}}],[{key:"version",get:function get(){cov_b2ari3wke.f[41]++;cov_b2ari3wke.s[125]++;return{sdk:'3.1.7',schema:'draft-00'};}},{key:"types",get:function get(){cov_b2ari3wke.f[42]++;cov_b2ari3wke.s[126]++;return _StreamTypes.default;}},{key:"events",get:function get(){cov_b2ari3wke.f[43]++;cov_b2ari3wke.s[127]++;return{room:Events.room,reach:Events.reach,stream:Events.stream,invite:Events.invite,local:Events.local};}},{key:"browser",get:function get(){cov_b2ari3wke.f[44]++;cov_b2ari3wke.s[128]++;return _Browser.default;}},{key:"media",get:function get(){cov_b2ari3wke.f[45]++;cov_b2ari3wke.s[129]++;return _Media.default;}},{key:"codecs",get:function get(){cov_b2ari3wke.f[46]++;cov_b2ari3wke.s[130]++;return{audio:_Codec.audio,video:_Codec.video};}}]);cov_b2ari3wke.s[131]++;return Reach;}());cov_b2ari3wke.s[132]++;exports.default=Reach;cov_b2ari3wke.s[133]++;module.exports=Reach;

/***/ }),

/***/ "./src/core/Config.js":
/*!****************************!*\
  !*** ./src/core/Config.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_az3jb1vdw=function(){var path="/home/florent/Projets/reach/src/core/Config.js",hash="47ad733f308a53b7643732485ca408c983a99bee",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/Config.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:13},end:{line:8,column:60}},"3":{start:{line:10,column:15},end:{line:10,column:66}},"4":{start:{line:12,column:10},end:{line:12,column:56}},"5":{start:{line:14,column:13},end:{line:14,column:60}},"6":{start:{line:16,column:40},end:{line:16,column:470}},"7":{start:{line:16,column:69},end:{line:16,column:80}},"8":{start:{line:16,column:103},end:{line:16,column:105}},"9":{start:{line:16,column:107},end:{line:16,column:431}},"10":{start:{line:16,column:126},end:{line:16,column:429}},"11":{start:{line:16,column:149},end:{line:16,column:427}},"12":{start:{line:16,column:214},end:{line:16,column:319}},"13":{start:{line:16,column:321},end:{line:16,column:425}},"14":{start:{line:16,column:349},end:{line:16,column:390}},"15":{start:{line:16,column:400},end:{line:16,column:423}},"16":{start:{line:16,column:432},end:{line:16,column:453}},"17":{start:{line:16,column:454},end:{line:16,column:468}},"18":{start:{line:18,column:39},end:{line:18,column:93}},"19":{start:{line:20,column:50},end:{line:20,column:151}},"20":{start:{line:20,column:92},end:{line:20,column:149}},"21":{start:{line:22,column:44},end:{line:22,column:315}},"22":{start:{line:22,column:102},end:{line:22,column:110}},"23":{start:{line:22,column:112},end:{line:22,column:167}},"24":{start:{line:22,column:168},end:{line:22,column:199}},"25":{start:{line:22,column:200},end:{line:22,column:254}},"26":{start:{line:22,column:227},end:{line:22,column:254}},"27":{start:{line:22,column:255},end:{line:22,column:313}},"28":{start:{line:24,column:62},end:{line:24,column:131}},"29":{start:{line:24,column:78},end:{line:24,column:131}},"30":{start:{line:24,column:132},end:{line:24,column:193}},"31":{start:{line:24,column:149},end:{line:24,column:193}},"32":{start:{line:24,column:194},end:{line:24,column:213}},"33":{start:{line:26,column:35},end:{line:26,column:115}},"34":{start:{line:28,column:32},end:{line:28,column:103}},"35":{start:{line:30,column:34},end:{line:30,column:160}},"36":{start:{line:30,column:136},end:{line:30,column:160}},"37":{start:{line:32,column:35},end:{line:32,column:164}},"38":{start:{line:32,column:61},end:{line:32,column:149}},"39":{start:{line:32,column:130},end:{line:32,column:147}},"40":{start:{line:32,column:150},end:{line:32,column:162}},"41":{start:{line:34,column:22},end:{line:58,column:1}},"42":{start:{line:37,column:16},end:{line:55,column:4}},"43":{start:{line:38,column:19},end:{line:38,column:34}},"44":{start:{line:39,column:21},end:{line:39,column:38}},"45":{start:{line:40,column:15},end:{line:40,column:26}},"46":{start:{line:41,column:14},end:{line:41,column:24}},"47":{start:{line:42,column:15},end:{line:42,column:26}},"48":{start:{line:44,column:4},end:{line:52,column:5}},"49":{start:{line:45,column:6},end:{line:51,column:9}},"50":{start:{line:46,column:8},end:{line:50,column:10}},"51":{start:{line:54,column:4},end:{line:54,column:20}},"52":{start:{line:57,column:2},end:{line:57,column:69}},"53":{start:{line:67,column:0},end:{line:260,column:3}},"54":{start:{line:74,column:16},end:{line:74,column:20}},"55":{start:{line:76,column:4},end:{line:76,column:34}},"56":{start:{line:82,column:4},end:{line:82,column:28}},"57":{start:{line:88,column:4},end:{line:88,column:37}},"58":{start:{line:94,column:4},end:{line:94,column:38}},"59":{start:{line:105,column:4},end:{line:105,column:36}},"60":{start:{line:116,column:4},end:{line:116,column:36}},"61":{start:{line:118,column:4},end:{line:118,column:17}},"62":{start:{line:120,column:4},end:{line:120,column:21}},"63":{start:{line:122,column:4},end:{line:129,column:7}},"64":{start:{line:123,column:6},end:{line:126,column:7}},"65":{start:{line:124,column:8},end:{line:124,column:42}},"66":{start:{line:125,column:8},end:{line:125,column:85}},"67":{start:{line:128,column:6},end:{line:128,column:36}},"68":{start:{line:139,column:2},end:{line:257,column:6}},"69":{start:{line:142,column:19},end:{line:142,column:23}},"70":{start:{line:144,column:6},end:{line:146,column:9}},"71":{start:{line:145,column:8},end:{line:145,column:31}},"72":{start:{line:161,column:6},end:{line:164,column:9}},"73":{start:{line:169,column:6},end:{line:169,column:38}},"74":{start:{line:177,column:6},end:{line:177,column:37}},"75":{start:{line:188,column:6},end:{line:188,column:46}},"76":{start:{line:190,column:6},end:{line:234,column:7}},"77":{start:{line:191,column:8},end:{line:233,column:9}},"78":{start:{line:195,column:10},end:{line:195,column:54}},"79":{start:{line:198,column:32},end:{line:198,column:65}},"80":{start:{line:201,column:28},end:{line:201,column:52}},"81":{start:{line:204,column:10},end:{line:210,column:13}},"82":{start:{line:205,column:12},end:{line:209,column:13}},"83":{start:{line:206,column:14},end:{line:206,column:140}},"84":{start:{line:208,column:14},end:{line:208,column:46}},"85":{start:{line:213,column:10},end:{line:232,column:17}},"86":{start:{line:214,column:27},end:{line:214,column:43}},"87":{start:{line:215,column:29},end:{line:215,column:47}},"88":{start:{line:216,column:23},end:{line:216,column:35}},"89":{start:{line:217,column:22},end:{line:219,column:14}},"90":{start:{line:218,column:14},end:{line:218,column:76}},"91":{start:{line:221,column:12},end:{line:229,column:13}},"92":{start:{line:222,column:14},end:{line:222,column:44}},"93":{start:{line:224,column:14},end:{line:228,column:17}},"94":{start:{line:231,column:12},end:{line:231,column:28}},"95":{start:{line:243,column:6},end:{line:247,column:9}},"96":{start:{line:252,column:6},end:{line:252,column:45}},"97":{start:{line:255,column:6},end:{line:255,column:31}},"98":{start:{line:259,column:2},end:{line:259,column:16}},"99":{start:{line:262,column:0},end:{line:262,column:25}}},fnMap:{"0":{name:"_interopRequireWildcard",decl:{start:{line:16,column:9},end:{line:16,column:32}},loc:{start:{line:16,column:38},end:{line:16,column:472}},line:16},"1":{name:"_interopRequireDefault",decl:{start:{line:18,column:9},end:{line:18,column:31}},loc:{start:{line:18,column:37},end:{line:18,column:95}},line:18},"2":{name:"_classCallCheck",decl:{start:{line:20,column:9},end:{line:20,column:24}},loc:{start:{line:20,column:48},end:{line:20,column:153}},line:20},"3":{name:"_defineProperties",decl:{start:{line:22,column:9},end:{line:22,column:26}},loc:{start:{line:22,column:42},end:{line:22,column:317}},line:22},"4":{name:"_createClass",decl:{start:{line:24,column:9},end:{line:24,column:21}},loc:{start:{line:24,column:60},end:{line:24,column:215}},line:24},"5":{name:"_toConsumableArray",decl:{start:{line:26,column:9},end:{line:26,column:27}},loc:{start:{line:26,column:33},end:{line:26,column:117}},line:26},"6":{name:"_nonIterableSpread",decl:{start:{line:28,column:9},end:{line:28,column:27}},loc:{start:{line:28,column:30},end:{line:28,column:105}},line:28},"7":{name:"_iterableToArray",decl:{start:{line:30,column:9},end:{line:30,column:25}},loc:{start:{line:30,column:32},end:{line:30,column:162}},line:30},"8":{name:"_arrayWithoutHoles",decl:{start:{line:32,column:9},end:{line:32,column:27}},loc:{start:{line:32,column:33},end:{line:32,column:166}},line:32},"9":{name:"_flattenServers",decl:{start:{line:34,column:31},end:{line:34,column:46}},loc:{start:{line:34,column:56},end:{line:58,column:1}},line:34},"10":{name:"(anonymous_10)",decl:{start:{line:37,column:28},end:{line:37,column:29}},loc:{start:{line:37,column:46},end:{line:55,column:3}},line:37},"11":{name:"(anonymous_11)",decl:{start:{line:45,column:22},end:{line:45,column:23}},loc:{start:{line:45,column:37},end:{line:51,column:7}},line:45},"12":{name:"(anonymous_12)",decl:{start:{line:67,column:0},end:{line:67,column:1}},loc:{start:{line:67,column:12},end:{line:260,column:1}},line:67},"13":{name:"Config",decl:{start:{line:73,column:11},end:{line:73,column:17}},loc:{start:{line:73,column:23},end:{line:131,column:3}},line:73},"14":{name:"(anonymous_14)",decl:{start:{line:122,column:31},end:{line:122,column:32}},loc:{start:{line:122,column:51},end:{line:127,column:5}},line:122},"15":{name:"(anonymous_15)",decl:{start:{line:127,column:7},end:{line:127,column:8}},loc:{start:{line:127,column:20},end:{line:129,column:5}},line:127},"16":{name:"assign",decl:{start:{line:141,column:20},end:{line:141,column:26}},loc:{start:{line:141,column:32},end:{line:147,column:5}},line:141},"17":{name:"(anonymous_17)",decl:{start:{line:144,column:37},end:{line:144,column:38}},loc:{start:{line:144,column:52},end:{line:146,column:7}},line:144},"18":{name:"reset",decl:{start:{line:160,column:20},end:{line:160,column:25}},loc:{start:{line:160,column:28},end:{line:165,column:5}},line:160},"19":{name:"set",decl:{start:{line:168,column:18},end:{line:168,column:21}},loc:{start:{line:168,column:29},end:{line:170,column:5}},line:168},"20":{name:"get",decl:{start:{line:176,column:18},end:{line:176,column:21}},loc:{start:{line:176,column:24},end:{line:178,column:5}},line:176},"21":{name:"set",decl:{start:{line:187,column:18},end:{line:187,column:21}},loc:{start:{line:187,column:31},end:{line:235,column:5}},line:187},"22":{name:"(anonymous_22)",decl:{start:{line:204,column:30},end:{line:204,column:31}},loc:{start:{line:204,column:51},end:{line:210,column:11}},line:204},"23":{name:"(anonymous_23)",decl:{start:{line:205,column:38},end:{line:205,column:39}},loc:{start:{line:205,column:56},end:{line:207,column:13}},line:205},"24":{name:"(anonymous_24)",decl:{start:{line:213,column:52},end:{line:213,column:53}},loc:{start:{line:213,column:81},end:{line:232,column:11}},line:213},"25":{name:"(anonymous_25)",decl:{start:{line:217,column:41},end:{line:217,column:42}},loc:{start:{line:217,column:54},end:{line:219,column:13}},line:217},"26":{name:"get",decl:{start:{line:242,column:18},end:{line:242,column:21}},loc:{start:{line:242,column:24},end:{line:248,column:5}},line:242},"27":{name:"set",decl:{start:{line:251,column:18},end:{line:251,column:21}},loc:{start:{line:251,column:29},end:{line:253,column:5}},line:251},"28":{name:"get",decl:{start:{line:254,column:18},end:{line:254,column:21}},loc:{start:{line:254,column:24},end:{line:256,column:5}},line:254}},branchMap:{"0":{loc:{start:{line:16,column:40},end:{line:16,column:470}},type:"if",locations:[{start:{line:16,column:40},end:{line:16,column:470}},{start:{line:16,column:40},end:{line:16,column:470}}],line:16},"1":{loc:{start:{line:16,column:44},end:{line:16,column:65}},type:"binary-expr",locations:[{start:{line:16,column:44},end:{line:16,column:47}},{start:{line:16,column:51},end:{line:16,column:65}}],line:16},"2":{loc:{start:{line:16,column:107},end:{line:16,column:431}},type:"if",locations:[{start:{line:16,column:107},end:{line:16,column:431}},{start:{line:16,column:107},end:{line:16,column:431}}],line:16},"3":{loc:{start:{line:16,column:149},end:{line:16,column:427}},type:"if",locations:[{start:{line:16,column:149},end:{line:16,column:427}},{start:{line:16,column:149},end:{line:16,column:427}}],line:16},"4":{loc:{start:{line:16,column:214},end:{line:16,column:319}},type:"cond-expr",locations:[{start:{line:16,column:273},end:{line:16,column:314}},{start:{line:16,column:317},end:{line:16,column:319}}],line:16},"5":{loc:{start:{line:16,column:214},end:{line:16,column:270}},type:"binary-expr",locations:[{start:{line:16,column:214},end:{line:16,column:235}},{start:{line:16,column:239},end:{line:16,column:270}}],line:16},"6":{loc:{start:{line:16,column:321},end:{line:16,column:425}},type:"if",locations:[{start:{line:16,column:321},end:{line:16,column:425}},{start:{line:16,column:321},end:{line:16,column:425}}],line:16},"7":{loc:{start:{line:16,column:325},end:{line:16,column:345}},type:"binary-expr",locations:[{start:{line:16,column:325},end:{line:16,column:333}},{start:{line:16,column:337},end:{line:16,column:345}}],line:16},"8":{loc:{start:{line:18,column:46},end:{line:18,column:92}},type:"cond-expr",locations:[{start:{line:18,column:70},end:{line:18,column:73}},{start:{line:18,column:76},end:{line:18,column:92}}],line:18},"9":{loc:{start:{line:18,column:46},end:{line:18,column:67}},type:"binary-expr",locations:[{start:{line:18,column:46},end:{line:18,column:49}},{start:{line:18,column:53},end:{line:18,column:67}}],line:18},"10":{loc:{start:{line:20,column:50},end:{line:20,column:151}},type:"if",locations:[{start:{line:20,column:50},end:{line:20,column:151}},{start:{line:20,column:50},end:{line:20,column:151}}],line:20},"11":{loc:{start:{line:22,column:136},end:{line:22,column:166}},type:"binary-expr",locations:[{start:{line:22,column:136},end:{line:22,column:157}},{start:{line:22,column:161},end:{line:22,column:166}}],line:22},"12":{loc:{start:{line:22,column:200},end:{line:22,column:254}},type:"if",locations:[{start:{line:22,column:200},end:{line:22,column:254}},{start:{line:22,column:200},end:{line:22,column:254}}],line:22},"13":{loc:{start:{line:24,column:62},end:{line:24,column:131}},type:"if",locations:[{start:{line:24,column:62},end:{line:24,column:131}},{start:{line:24,column:62},end:{line:24,column:131}}],line:24},"14":{loc:{start:{line:24,column:132},end:{line:24,column:193}},type:"if",locations:[{start:{line:24,column:132},end:{line:24,column:193}},{start:{line:24,column:132},end:{line:24,column:193}}],line:24},"15":{loc:{start:{line:26,column:42},end:{line:26,column:114}},type:"binary-expr",locations:[{start:{line:26,column:42},end:{line:26,column:65}},{start:{line:26,column:69},end:{line:26,column:90}},{start:{line:26,column:94},end:{line:26,column:114}}],line:26},"16":{loc:{start:{line:30,column:34},end:{line:30,column:160}},type:"if",locations:[{start:{line:30,column:34},end:{line:30,column:160}},{start:{line:30,column:34},end:{line:30,column:160}}],line:30},"17":{loc:{start:{line:30,column:38},end:{line:30,column:134}},type:"binary-expr",locations:[{start:{line:30,column:38},end:{line:30,column:69}},{start:{line:30,column:73},end:{line:30,column:134}}],line:30},"18":{loc:{start:{line:32,column:35},end:{line:32,column:164}},type:"if",locations:[{start:{line:32,column:35},end:{line:32,column:164}},{start:{line:32,column:35},end:{line:32,column:164}}],line:32},"19":{loc:{start:{line:42,column:15},end:{line:42,column:26}},type:"binary-expr",locations:[{start:{line:42,column:15},end:{line:42,column:19}},{start:{line:42,column:23},end:{line:42,column:26}}],line:42},"20":{loc:{start:{line:44,column:4},end:{line:52,column:5}},type:"if",locations:[{start:{line:44,column:4},end:{line:52,column:5}},{start:{line:44,column:4},end:{line:52,column:5}}],line:44},"21":{loc:{start:{line:123,column:6},end:{line:126,column:7}},type:"if",locations:[{start:{line:123,column:6},end:{line:126,column:7}},{start:{line:123,column:6},end:{line:126,column:7}}],line:123},"22":{loc:{start:{line:125,column:28},end:{line:125,column:83}},type:"cond-expr",locations:[{start:{line:125,column:58},end:{line:125,column:74}},{start:{line:125,column:77},end:{line:125,column:83}}],line:125},"23":{loc:{start:{line:144,column:18},end:{line:144,column:27}},type:"binary-expr",locations:[{start:{line:144,column:18},end:{line:144,column:21}},{start:{line:144,column:25},end:{line:144,column:27}}],line:144},"24":{loc:{start:{line:190,column:6},end:{line:234,column:7}},type:"if",locations:[{start:{line:190,column:6},end:{line:234,column:7}},{start:{line:190,column:6},end:{line:234,column:7}}],line:190},"25":{loc:{start:{line:191,column:8},end:{line:233,column:9}},type:"if",locations:[{start:{line:191,column:8},end:{line:233,column:9}},{start:{line:191,column:8},end:{line:233,column:9}}],line:191},"26":{loc:{start:{line:195,column:39},end:{line:195,column:52}},type:"binary-expr",locations:[{start:{line:195,column:39},end:{line:195,column:46}},{start:{line:195,column:50},end:{line:195,column:52}}],line:195},"27":{loc:{start:{line:205,column:12},end:{line:209,column:13}},type:"if",locations:[{start:{line:205,column:12},end:{line:209,column:13}},{start:{line:205,column:12},end:{line:209,column:13}}],line:205},"28":{loc:{start:{line:206,column:21},end:{line:206,column:139}},type:"binary-expr",locations:[{start:{line:206,column:21},end:{line:206,column:51}},{start:{line:206,column:55},end:{line:206,column:93}},{start:{line:206,column:97},end:{line:206,column:139}}],line:206},"29":{loc:{start:{line:218,column:21},end:{line:218,column:75}},type:"binary-expr",locations:[{start:{line:218,column:21},end:{line:218,column:44}},{start:{line:218,column:48},end:{line:218,column:75}}],line:218},"30":{loc:{start:{line:221,column:12},end:{line:229,column:13}},type:"if",locations:[{start:{line:221,column:12},end:{line:229,column:13}},{start:{line:221,column:12},end:{line:229,column:13}}],line:221},"31":{loc:{start:{line:243,column:13},end:{line:247,column:8}},type:"binary-expr",locations:[{start:{line:243,column:13},end:{line:243,column:29}},{start:{line:243,column:33},end:{line:247,column:8}}],line:243},"32":{loc:{start:{line:255,column:13},end:{line:255,column:30}},type:"binary-expr",locations:[{start:{line:255,column:13},end:{line:255,column:24}},{start:{line:255,column:28},end:{line:255,column:30}}],line:255}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/Config.js"],names:["_flattenServers","servers","_expand","map","server","username","credential","urls","url","uris","uri","concat","Config","obj","constraints","localStreamContainer","remoteStreamContainer","preferredVideoCodec","preferredAudioCodec","reset","assign","DataSync","get","then","snapData","iceServers","val","Log","i","length","e","d","Object","keys","forEach","key","media","logLevel","level","cache","_iceServers","_currentServers","_newServers","newServer","some","push","reduce","previous","current","idx","findIndex","s","stats","_stats"],mappings:"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",sourcesContent:["import media from './util/Media';\nimport * as DataSync from './util/DataSync';\nimport * as Log from './util/Log';\nimport cache from './util/cache';\n\nconst _flattenServers = (servers) => {\n  const _expand = servers.map((server) => {\n    const {\n      username, credential, urls, url\n    } = server;\n    const uris = urls || url;\n    if (typeof uris !== 'string') {\n      return uris.map(uri => ({ username, credential, urls: uri }));\n    }\n    return [server];\n  });\n  return [].concat(..._expand);\n};\n\n/**\n * The Reach configuration object\n * @class Config\n */\nexport default class Config {\n  /**\n   * Create configuration\n   * @access protected\n   * @param obj\n   */\n  constructor(obj) {\n    /**\n     * The default media constraints. These can be overridden when subscribing to a stream.\n     * @type {MediaStreamConstraints}\n     */\n    this.constraints = null;\n\n    /**\n     * The id/element dom element that will hold the local video/audio element\n     * @type {string|Element}\n     */\n    this.localStreamContainer = null;\n    /**\n     * The id/element dom element that will hold the remote video/audio element\n     * @type {string|Element}\n     */\n    this.remoteStreamContainer = null;\n\n    /**\n     * The preferred video Codec. Takes a RegExp matching the codec name and sample rate.\n     * Predefined values can be found in {@link Codec/video}\n     * @type {RegExp}\n     * @example <caption>Prefer VP9</caption>\n     * var myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>', {\n     *  preferredVideoCodec: Reach.codecs.video.VP9\n     * });\n     */\n    this.preferredVideoCodec = null;\n\n    /**\n     * The preferred audio Codec. Takes a RegExp matching the codec name and sample rate.\n     * Predefined values can be found in {@link Codec/audio}\n     * @type {RegExp}\n     * @example <caption>Prefer opus</caption>\n     * var myReach = new Reach('https://io.datasync.orange.com/base/<my_namespace>', {\n     *  preferredAudioCodec: Reach.codecs.audio.OPUS\n     * });\n     */\n    this.preferredAudioCodec = null;\n\n    // Populate with default values\n    this.reset();\n\n    // Populate with data\n    this.assign(obj);\n\n    // Read ICE servers from server\n    DataSync.get('_/ice').then((snapData) => {\n      if (snapData) {\n        this.iceServers = snapData.val();\n        Log.i('ICEServers', this.iceServers.length > 0 ? this.iceServers : 'None');\n      }\n    }, e => Log.d('ICEServers', e));\n\n    // TODO #Feat: Add boolean prop to request permission on start,\n    // sdpEditor (for user defined SDP modifications)\n  }\n\n  /**\n   * Assign new conf values\n   * @access protected\n   * @param {object} obj the new conf values\n   */\n  assign(obj) {\n    Object.keys(obj || {}).forEach((key) => {\n      this[key] = obj[key];\n    });\n  }\n\n  /**\n   * The log level (DEBUG, INFO, WARN, ERROR)\n   * @type {string}\n   */\n  set logLevel(level) {\n    cache.logLevel = level;\n  }\n\n  /**\n   * The log level (DEBUG, INFO, WARN, ERROR)\n   * @returns {string}\n   */\n  get logLevel() {\n    return cache.logLevel;\n  }\n\n  /**\n   * List of TURN/STUN servers to use for ICE.\n   * This list will be merged with the ICE servers declared in the namespace (**_/ice**).\n   * @type {ICEServer[]}\n   */\n  set iceServers(servers) {\n    Log.d('Config~set~iceServers', servers);\n    if (servers) {\n      if (!this._iceServers) {\n        /**\n         * @ignore\n         */\n        this._iceServers = [].concat(servers || []);\n      } else {\n        // flatten existing\n        const _currentServers = _flattenServers(this._iceServers);\n        // flatten new\n        const _newServers = _flattenServers(servers);\n        // Add only the missing servers\n        _newServers.forEach((newServer) => {\n          if (!_currentServers.some(server => server.urls === newServer.urls\n            && server.username === newServer.username\n            && server.credential === newServer.credential)) {\n            _currentServers.push(newServer);\n          }\n        });\n        // Re-group by username/credential\n        this._iceServers = _currentServers.reduce((previous, current) => {\n          const { username, credential, urls } = current;\n          const idx = previous.findIndex(s => s.username === username\n            && s.credential === credential);\n          if (idx >= 0) {\n            previous[idx].urls.push(urls);\n          } else {\n            previous.push({ username, credential, urls: [urls] });\n          }\n          return previous;\n        }, []);\n      }\n    }\n  }\n\n  /**\n   * List of TURN/STUN servers to use for ICE.\n   * This list will be merged with the ICE servers declared in the namespace (**_/ice**).\n   * @type {ICEServer[]}\n   */\n  get iceServers() {\n    return this._iceServers || [\n      {\n        username: 'admin',\n        credential: 'webcom1234',\n        urls: [\n          'turns:turn1.webcom.orange.com:443',\n          'turn:turn1.webcom.orange.com:443?transport=tcp',\n          'turn:turn1.webcom.orange.com:3478?transport=tcp'\n        ]\n      }\n    ];\n  }\n\n  set stats(stats) {\n    this._stats = Object.assign({}, stats);\n  }\n\n  get stats() {\n    return this._stats || {};\n  }\n\n  /**\n   * Resets configuration to default values\n   * @protected\n   */\n  reset() {\n    this.assign({\n      constraints: media.constraints(),\n      logLevel: 'ERROR'\n    });\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_az3jb1vdw.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_az3jb1vdw.s[1]++;exports.default=void 0;var _Media=(cov_az3jb1vdw.s[2]++,_interopRequireDefault(__webpack_require__(/*! ./util/Media */ "./src/core/util/Media.js")));var DataSync=(cov_az3jb1vdw.s[3]++,_interopRequireWildcard(__webpack_require__(/*! ./util/DataSync */ "./src/core/util/DataSync.js")));var Log=(cov_az3jb1vdw.s[4]++,_interopRequireWildcard(__webpack_require__(/*! ./util/Log */ "./src/core/util/Log.js")));var _cache=(cov_az3jb1vdw.s[5]++,_interopRequireDefault(__webpack_require__(/*! ./util/cache */ "./src/core/util/cache.js")));function _interopRequireWildcard(obj){cov_az3jb1vdw.f[0]++;cov_az3jb1vdw.s[6]++;if((cov_az3jb1vdw.b[1][0]++,obj)&&(cov_az3jb1vdw.b[1][1]++,obj.__esModule)){cov_az3jb1vdw.b[0][0]++;cov_az3jb1vdw.s[7]++;return obj;}else{cov_az3jb1vdw.b[0][1]++;var newObj=(cov_az3jb1vdw.s[8]++,{});cov_az3jb1vdw.s[9]++;if(obj!=null){cov_az3jb1vdw.b[2][0]++;cov_az3jb1vdw.s[10]++;for(var key in obj){cov_az3jb1vdw.s[11]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_az3jb1vdw.b[3][0]++;var desc=(cov_az3jb1vdw.s[12]++,(cov_az3jb1vdw.b[5][0]++,Object.defineProperty)&&(cov_az3jb1vdw.b[5][1]++,Object.getOwnPropertyDescriptor)?(cov_az3jb1vdw.b[4][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_az3jb1vdw.b[4][1]++,{}));cov_az3jb1vdw.s[13]++;if((cov_az3jb1vdw.b[7][0]++,desc.get)||(cov_az3jb1vdw.b[7][1]++,desc.set)){cov_az3jb1vdw.b[6][0]++;cov_az3jb1vdw.s[14]++;Object.defineProperty(newObj,key,desc);}else{cov_az3jb1vdw.b[6][1]++;cov_az3jb1vdw.s[15]++;newObj[key]=obj[key];}}else{cov_az3jb1vdw.b[3][1]++;}}}else{cov_az3jb1vdw.b[2][1]++;}cov_az3jb1vdw.s[16]++;newObj.default=obj;cov_az3jb1vdw.s[17]++;return newObj;}}function _interopRequireDefault(obj){cov_az3jb1vdw.f[1]++;cov_az3jb1vdw.s[18]++;return(cov_az3jb1vdw.b[9][0]++,obj)&&(cov_az3jb1vdw.b[9][1]++,obj.__esModule)?(cov_az3jb1vdw.b[8][0]++,obj):(cov_az3jb1vdw.b[8][1]++,{default:obj});}function _classCallCheck(instance,Constructor){cov_az3jb1vdw.f[2]++;cov_az3jb1vdw.s[19]++;if(!(instance instanceof Constructor)){cov_az3jb1vdw.b[10][0]++;cov_az3jb1vdw.s[20]++;throw new TypeError("Cannot call a class as a function");}else{cov_az3jb1vdw.b[10][1]++;}}function _defineProperties(target,props){cov_az3jb1vdw.f[3]++;cov_az3jb1vdw.s[21]++;for(var i=0;i<props.length;i++){var descriptor=(cov_az3jb1vdw.s[22]++,props[i]);cov_az3jb1vdw.s[23]++;descriptor.enumerable=(cov_az3jb1vdw.b[11][0]++,descriptor.enumerable)||(cov_az3jb1vdw.b[11][1]++,false);cov_az3jb1vdw.s[24]++;descriptor.configurable=true;cov_az3jb1vdw.s[25]++;if("value"in descriptor){cov_az3jb1vdw.b[12][0]++;cov_az3jb1vdw.s[26]++;descriptor.writable=true;}else{cov_az3jb1vdw.b[12][1]++;}cov_az3jb1vdw.s[27]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_az3jb1vdw.f[4]++;cov_az3jb1vdw.s[28]++;if(protoProps){cov_az3jb1vdw.b[13][0]++;cov_az3jb1vdw.s[29]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_az3jb1vdw.b[13][1]++;}cov_az3jb1vdw.s[30]++;if(staticProps){cov_az3jb1vdw.b[14][0]++;cov_az3jb1vdw.s[31]++;_defineProperties(Constructor,staticProps);}else{cov_az3jb1vdw.b[14][1]++;}cov_az3jb1vdw.s[32]++;return Constructor;}function _toConsumableArray(arr){cov_az3jb1vdw.f[5]++;cov_az3jb1vdw.s[33]++;return(cov_az3jb1vdw.b[15][0]++,_arrayWithoutHoles(arr))||(cov_az3jb1vdw.b[15][1]++,_iterableToArray(arr))||(cov_az3jb1vdw.b[15][2]++,_nonIterableSpread());}function _nonIterableSpread(){cov_az3jb1vdw.f[6]++;cov_az3jb1vdw.s[34]++;throw new TypeError("Invalid attempt to spread non-iterable instance");}function _iterableToArray(iter){cov_az3jb1vdw.f[7]++;cov_az3jb1vdw.s[35]++;if((cov_az3jb1vdw.b[17][0]++,Symbol.iterator in Object(iter))||(cov_az3jb1vdw.b[17][1]++,Object.prototype.toString.call(iter)==="[object Arguments]")){cov_az3jb1vdw.b[16][0]++;cov_az3jb1vdw.s[36]++;return Array.from(iter);}else{cov_az3jb1vdw.b[16][1]++;}}function _arrayWithoutHoles(arr){cov_az3jb1vdw.f[8]++;cov_az3jb1vdw.s[37]++;if(Array.isArray(arr)){cov_az3jb1vdw.b[18][0]++;cov_az3jb1vdw.s[38]++;for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){cov_az3jb1vdw.s[39]++;arr2[i]=arr[i];}cov_az3jb1vdw.s[40]++;return arr2;}else{cov_az3jb1vdw.b[18][1]++;}}cov_az3jb1vdw.s[41]++;var _flattenServers=function _flattenServers(servers){cov_az3jb1vdw.f[9]++;var _ref;var _expand=(cov_az3jb1vdw.s[42]++,servers.map(function(server){cov_az3jb1vdw.f[10]++;var username=(cov_az3jb1vdw.s[43]++,server.username),credential=(cov_az3jb1vdw.s[44]++,server.credential),urls=(cov_az3jb1vdw.s[45]++,server.urls),url=(cov_az3jb1vdw.s[46]++,server.url);var uris=(cov_az3jb1vdw.s[47]++,(cov_az3jb1vdw.b[19][0]++,urls)||(cov_az3jb1vdw.b[19][1]++,url));cov_az3jb1vdw.s[48]++;if(typeof uris!=='string'){cov_az3jb1vdw.b[20][0]++;cov_az3jb1vdw.s[49]++;return uris.map(function(uri){cov_az3jb1vdw.f[11]++;cov_az3jb1vdw.s[50]++;return{username:username,credential:credential,urls:uri};});}else{cov_az3jb1vdw.b[20][1]++;}cov_az3jb1vdw.s[51]++;return[server];}));cov_az3jb1vdw.s[52]++;return(_ref=[]).concat.apply(_ref,_toConsumableArray(_expand));};var Config=(cov_az3jb1vdw.s[53]++,function(){cov_az3jb1vdw.f[12]++;function Config(obj){cov_az3jb1vdw.f[13]++;var _this=(cov_az3jb1vdw.s[54]++,this);cov_az3jb1vdw.s[55]++;_classCallCheck(this,Config);cov_az3jb1vdw.s[56]++;this.constraints=null;cov_az3jb1vdw.s[57]++;this.localStreamContainer=null;cov_az3jb1vdw.s[58]++;this.remoteStreamContainer=null;cov_az3jb1vdw.s[59]++;this.preferredVideoCodec=null;cov_az3jb1vdw.s[60]++;this.preferredAudioCodec=null;cov_az3jb1vdw.s[61]++;this.reset();cov_az3jb1vdw.s[62]++;this.assign(obj);cov_az3jb1vdw.s[63]++;DataSync.get('_/ice').then(function(snapData){cov_az3jb1vdw.f[14]++;cov_az3jb1vdw.s[64]++;if(snapData){cov_az3jb1vdw.b[21][0]++;cov_az3jb1vdw.s[65]++;_this.iceServers=snapData.val();cov_az3jb1vdw.s[66]++;Log.i('ICEServers',_this.iceServers.length>0?(cov_az3jb1vdw.b[22][0]++,_this.iceServers):(cov_az3jb1vdw.b[22][1]++,'None'));}else{cov_az3jb1vdw.b[21][1]++;}},function(e){cov_az3jb1vdw.f[15]++;cov_az3jb1vdw.s[67]++;return Log.d('ICEServers',e);});}cov_az3jb1vdw.s[68]++;_createClass(Config,[{key:"assign",value:function assign(obj){cov_az3jb1vdw.f[16]++;var _this2=(cov_az3jb1vdw.s[69]++,this);cov_az3jb1vdw.s[70]++;Object.keys((cov_az3jb1vdw.b[23][0]++,obj)||(cov_az3jb1vdw.b[23][1]++,{})).forEach(function(key){cov_az3jb1vdw.f[17]++;cov_az3jb1vdw.s[71]++;_this2[key]=obj[key];});}},{key:"reset",value:function reset(){cov_az3jb1vdw.f[18]++;cov_az3jb1vdw.s[72]++;this.assign({constraints:_Media.default.constraints(),logLevel:'ERROR'});}},{key:"logLevel",set:function set(level){cov_az3jb1vdw.f[19]++;cov_az3jb1vdw.s[73]++;_cache.default.logLevel=level;},get:function get(){cov_az3jb1vdw.f[20]++;cov_az3jb1vdw.s[74]++;return _cache.default.logLevel;}},{key:"iceServers",set:function set(servers){cov_az3jb1vdw.f[21]++;cov_az3jb1vdw.s[75]++;Log.d('Config~set~iceServers',servers);cov_az3jb1vdw.s[76]++;if(servers){cov_az3jb1vdw.b[24][0]++;cov_az3jb1vdw.s[77]++;if(!this._iceServers){cov_az3jb1vdw.b[25][0]++;cov_az3jb1vdw.s[78]++;this._iceServers=[].concat((cov_az3jb1vdw.b[26][0]++,servers)||(cov_az3jb1vdw.b[26][1]++,[]));}else{cov_az3jb1vdw.b[25][1]++;var _currentServers=(cov_az3jb1vdw.s[79]++,_flattenServers(this._iceServers));var _newServers=(cov_az3jb1vdw.s[80]++,_flattenServers(servers));cov_az3jb1vdw.s[81]++;_newServers.forEach(function(newServer){cov_az3jb1vdw.f[22]++;cov_az3jb1vdw.s[82]++;if(!_currentServers.some(function(server){cov_az3jb1vdw.f[23]++;cov_az3jb1vdw.s[83]++;return(cov_az3jb1vdw.b[28][0]++,server.urls===newServer.urls)&&(cov_az3jb1vdw.b[28][1]++,server.username===newServer.username)&&(cov_az3jb1vdw.b[28][2]++,server.credential===newServer.credential);})){cov_az3jb1vdw.b[27][0]++;cov_az3jb1vdw.s[84]++;_currentServers.push(newServer);}else{cov_az3jb1vdw.b[27][1]++;}});cov_az3jb1vdw.s[85]++;this._iceServers=_currentServers.reduce(function(previous,current){cov_az3jb1vdw.f[24]++;var username=(cov_az3jb1vdw.s[86]++,current.username),credential=(cov_az3jb1vdw.s[87]++,current.credential),urls=(cov_az3jb1vdw.s[88]++,current.urls);var idx=(cov_az3jb1vdw.s[89]++,previous.findIndex(function(s){cov_az3jb1vdw.f[25]++;cov_az3jb1vdw.s[90]++;return(cov_az3jb1vdw.b[29][0]++,s.username===username)&&(cov_az3jb1vdw.b[29][1]++,s.credential===credential);}));cov_az3jb1vdw.s[91]++;if(idx>=0){cov_az3jb1vdw.b[30][0]++;cov_az3jb1vdw.s[92]++;previous[idx].urls.push(urls);}else{cov_az3jb1vdw.b[30][1]++;cov_az3jb1vdw.s[93]++;previous.push({username:username,credential:credential,urls:[urls]});}cov_az3jb1vdw.s[94]++;return previous;},[]);}}else{cov_az3jb1vdw.b[24][1]++;}},get:function get(){cov_az3jb1vdw.f[26]++;cov_az3jb1vdw.s[95]++;return(cov_az3jb1vdw.b[31][0]++,this._iceServers)||(cov_az3jb1vdw.b[31][1]++,[{username:'admin',credential:'webcom1234',urls:['turns:turn1.webcom.orange.com:443','turn:turn1.webcom.orange.com:443?transport=tcp','turn:turn1.webcom.orange.com:3478?transport=tcp']}]);}},{key:"stats",set:function set(stats){cov_az3jb1vdw.f[27]++;cov_az3jb1vdw.s[96]++;this._stats=Object.assign({},stats);},get:function get(){cov_az3jb1vdw.f[28]++;cov_az3jb1vdw.s[97]++;return(cov_az3jb1vdw.b[32][0]++,this._stats)||(cov_az3jb1vdw.b[32][1]++,{});}}]);cov_az3jb1vdw.s[98]++;return Config;}());cov_az3jb1vdw.s[99]++;exports.default=Config;

/***/ }),

/***/ "./src/core/Device.js":
/*!****************************!*\
  !*** ./src/core/Device.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_4k5vguj1o=function(){var path="/home/florent/Projets/reach/src/core/Device.js",hash="edb79e790cca374dd17cf5aa4b1e96497f27a9b1",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/Device.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:15},end:{line:8,column:66}},"3":{start:{line:10,column:10},end:{line:10,column:56}},"4":{start:{line:12,column:40},end:{line:12,column:470}},"5":{start:{line:12,column:69},end:{line:12,column:80}},"6":{start:{line:12,column:103},end:{line:12,column:105}},"7":{start:{line:12,column:107},end:{line:12,column:431}},"8":{start:{line:12,column:126},end:{line:12,column:429}},"9":{start:{line:12,column:149},end:{line:12,column:427}},"10":{start:{line:12,column:214},end:{line:12,column:319}},"11":{start:{line:12,column:321},end:{line:12,column:425}},"12":{start:{line:12,column:349},end:{line:12,column:390}},"13":{start:{line:12,column:400},end:{line:12,column:423}},"14":{start:{line:12,column:432},end:{line:12,column:453}},"15":{start:{line:12,column:454},end:{line:12,column:468}},"16":{start:{line:14,column:50},end:{line:14,column:151}},"17":{start:{line:14,column:92},end:{line:14,column:149}},"18":{start:{line:16,column:44},end:{line:16,column:315}},"19":{start:{line:16,column:102},end:{line:16,column:110}},"20":{start:{line:16,column:112},end:{line:16,column:167}},"21":{start:{line:16,column:168},end:{line:16,column:199}},"22":{start:{line:16,column:200},end:{line:16,column:254}},"23":{start:{line:16,column:227},end:{line:16,column:254}},"24":{start:{line:16,column:255},end:{line:16,column:313}},"25":{start:{line:18,column:62},end:{line:18,column:131}},"26":{start:{line:18,column:78},end:{line:18,column:131}},"27":{start:{line:18,column:132},end:{line:18,column:193}},"28":{start:{line:18,column:149},end:{line:18,column:193}},"29":{start:{line:18,column:194},end:{line:18,column:213}},"30":{start:{line:26,column:0},end:{line:92,column:3}},"31":{start:{line:33,column:4},end:{line:33,column:34}},"32":{start:{line:35,column:17},end:{line:35,column:50}},"33":{start:{line:41,column:4},end:{line:41,column:31}},"34":{start:{line:47,column:4},end:{line:47,column:24}},"35":{start:{line:53,column:4},end:{line:53,column:38}},"36":{start:{line:62,column:4},end:{line:62,column:32}},"37":{start:{line:68,column:4},end:{line:68,column:26}},"38":{start:{line:79,column:2},end:{line:89,column:6}},"39":{start:{line:84,column:19},end:{line:84,column:45}},"40":{start:{line:85,column:6},end:{line:87,column:36}},"41":{start:{line:86,column:8},end:{line:86,column:54}},"42":{start:{line:91,column:2},end:{line:91,column:16}},"43":{start:{line:94,column:0},end:{line:94,column:25}}},fnMap:{"0":{name:"_interopRequireWildcard",decl:{start:{line:12,column:9},end:{line:12,column:32}},loc:{start:{line:12,column:38},end:{line:12,column:472}},line:12},"1":{name:"_classCallCheck",decl:{start:{line:14,column:9},end:{line:14,column:24}},loc:{start:{line:14,column:48},end:{line:14,column:153}},line:14},"2":{name:"_defineProperties",decl:{start:{line:16,column:9},end:{line:16,column:26}},loc:{start:{line:16,column:42},end:{line:16,column:317}},line:16},"3":{name:"_createClass",decl:{start:{line:18,column:9},end:{line:18,column:21}},loc:{start:{line:18,column:60},end:{line:18,column:215}},line:18},"4":{name:"(anonymous_4)",decl:{start:{line:26,column:0},end:{line:26,column:1}},loc:{start:{line:26,column:12},end:{line:92,column:1}},line:26},"5":{name:"Device",decl:{start:{line:32,column:11},end:{line:32,column:17}},loc:{start:{line:32,column:28},end:{line:69,column:3}},line:32},"6":{name:"get",decl:{start:{line:81,column:20},end:{line:81,column:23}},loc:{start:{line:81,column:44},end:{line:88,column:5}},line:81},"7":{name:"(anonymous_7)",decl:{start:{line:85,column:83},end:{line:85,column:84}},loc:{start:{line:85,column:103},end:{line:87,column:7}},line:85}},branchMap:{"0":{loc:{start:{line:12,column:40},end:{line:12,column:470}},type:"if",locations:[{start:{line:12,column:40},end:{line:12,column:470}},{start:{line:12,column:40},end:{line:12,column:470}}],line:12},"1":{loc:{start:{line:12,column:44},end:{line:12,column:65}},type:"binary-expr",locations:[{start:{line:12,column:44},end:{line:12,column:47}},{start:{line:12,column:51},end:{line:12,column:65}}],line:12},"2":{loc:{start:{line:12,column:107},end:{line:12,column:431}},type:"if",locations:[{start:{line:12,column:107},end:{line:12,column:431}},{start:{line:12,column:107},end:{line:12,column:431}}],line:12},"3":{loc:{start:{line:12,column:149},end:{line:12,column:427}},type:"if",locations:[{start:{line:12,column:149},end:{line:12,column:427}},{start:{line:12,column:149},end:{line:12,column:427}}],line:12},"4":{loc:{start:{line:12,column:214},end:{line:12,column:319}},type:"cond-expr",locations:[{start:{line:12,column:273},end:{line:12,column:314}},{start:{line:12,column:317},end:{line:12,column:319}}],line:12},"5":{loc:{start:{line:12,column:214},end:{line:12,column:270}},type:"binary-expr",locations:[{start:{line:12,column:214},end:{line:12,column:235}},{start:{line:12,column:239},end:{line:12,column:270}}],line:12},"6":{loc:{start:{line:12,column:321},end:{line:12,column:425}},type:"if",locations:[{start:{line:12,column:321},end:{line:12,column:425}},{start:{line:12,column:321},end:{line:12,column:425}}],line:12},"7":{loc:{start:{line:12,column:325},end:{line:12,column:345}},type:"binary-expr",locations:[{start:{line:12,column:325},end:{line:12,column:333}},{start:{line:12,column:337},end:{line:12,column:345}}],line:12},"8":{loc:{start:{line:14,column:50},end:{line:14,column:151}},type:"if",locations:[{start:{line:14,column:50},end:{line:14,column:151}},{start:{line:14,column:50},end:{line:14,column:151}}],line:14},"9":{loc:{start:{line:16,column:136},end:{line:16,column:166}},type:"binary-expr",locations:[{start:{line:16,column:136},end:{line:16,column:157}},{start:{line:16,column:161},end:{line:16,column:166}}],line:16},"10":{loc:{start:{line:16,column:200},end:{line:16,column:254}},type:"if",locations:[{start:{line:16,column:200},end:{line:16,column:254}},{start:{line:16,column:200},end:{line:16,column:254}}],line:16},"11":{loc:{start:{line:18,column:62},end:{line:18,column:131}},type:"if",locations:[{start:{line:18,column:62},end:{line:18,column:131}},{start:{line:18,column:62},end:{line:18,column:131}}],line:18},"12":{loc:{start:{line:18,column:132},end:{line:18,column:193}},type:"if",locations:[{start:{line:18,column:132},end:{line:18,column:193}},{start:{line:18,column:132},end:{line:18,column:193}}],line:18},"13":{loc:{start:{line:86,column:15},end:{line:86,column:53}},type:"cond-expr",locations:[{start:{line:86,column:26},end:{line:86,column:46}},{start:{line:86,column:49},end:{line:86,column:53}}],line:86}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/Device.js"],names:["Device","snapData","values","Object","assign","val","uid","name","os","userAgent","status","sdk","userUid","deviceUid","newUid","replace","DataSync","get","then","catch","Log","r"],mappings:";;;;;;;AAAA;;AACA;;;;;;;;;;AAEA;;;;IAIqBA,M;;;AACnB;;;;;AAKA,kBAAYC,QAAZ,EAAsB;AAAA;;AACpB,QAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,QAAQ,CAACI,GAAT,EAAlB,CAAf;AACA;;;;;AAIA,SAAKC,GAAL,GAAWL,QAAQ,CAACM,IAAT,EAAX;AACA;;;;;AAIA,SAAKC,EAAL,GAAUN,MAAM,CAACM,EAAjB;AACA;;;;;AAIA,SAAKC,SAAL,GAAiBP,MAAM,CAACO,SAAxB;AACA;;;;;;;;AAOA,SAAKC,MAAL,GAAcR,MAAM,CAACQ,MAArB;AACA;;;;;AAIA,SAAKC,GAAL,GAAWT,MAAM,CAACS,GAAlB,CA7BoB,CA8BpB;AACD;AAGD;;;;;;;;;;;wBAOWC,O,EAASC,S,EAAW;AAC7B;AACA;AACA,UAAMC,MAAM,GAAGF,OAAO,CAACG,OAAR,CAAgB,IAAhB,EAAsB,GAAtB,CAAf;AACA,aAAOC,QAAQ,CAACC,GAAT,qBAA0BH,MAA1B,cAAoCD,SAApC,GACJK,IADI,CACC,UAAAjB,QAAQ;AAAA,eAAKA,QAAQ,GAAG,IAAID,MAAJ,CAAWC,QAAX,CAAH,GAA0B,IAAvC;AAAA,OADT,EAEJkB,KAFI,CAEEC,GAAG,CAACC,CAAJ,CAAM,YAAN,CAFF,CAAP;AAGD",sourcesContent:["import * as DataSync from './util/DataSync';\nimport * as Log from './util/Log';\n\n/**\n * User device\n * @access protected\n */\nexport default class Device {\n  /**\n   * Create a device\n   * @param {Webcom/api.DataSnapshot|object} snapData The data snapshot\n   * @access protected\n   */\n  constructor(snapData) {\n    const values = Object.assign({}, snapData.val());\n    /**\n     * Device's unique id\n     * @type string\n     */\n    this.uid = snapData.name();\n    /**\n     * Device's OS\n     * @type {string}\n     */\n    this.os = values.os;\n    /**\n     * Device's userAgent\n     * @type {string}\n     */\n    this.userAgent = values.userAgent;\n    /**\n     * Device's last know status\n     * - CONNECTED\n     * - NOT_CONNECTED\n     * - SLEEPING\n     * @type {string}\n     */\n    this.status = values.status;\n    /**\n     * Device's sdk\n     * @type {{reach: string, webcom: string}}\n     */\n    this.sdk = values.sdk;\n    // TODO #Feat: Add 'extra' property for unrestricted additional information ?\n  }\n\n\n  /**\n   * Get a device by its user uid and its uid\n   * @access private\n   * @param {string} userUid The user's uid\n   * @param {string} deviceUid The device's uid\n   * @returns {Promise<Device, Error>}\n   */\n  static get(userUid, deviceUid) {\n    // due to the problem of long list, some uid (uid of participant)\n    // can have a : instead of /\n    const newUid = userUid.replace(/:/g, '/');\n    return DataSync.get(`_/devices/${newUid}/${deviceUid}`)\n      .then(snapData => (snapData ? new Device(snapData) : null))\n      .catch(Log.r('Device#get'));\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_4k5vguj1o.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_4k5vguj1o.s[1]++;exports.default=void 0;var DataSync=(cov_4k5vguj1o.s[2]++,_interopRequireWildcard(__webpack_require__(/*! ./util/DataSync */ "./src/core/util/DataSync.js")));var Log=(cov_4k5vguj1o.s[3]++,_interopRequireWildcard(__webpack_require__(/*! ./util/Log */ "./src/core/util/Log.js")));function _interopRequireWildcard(obj){cov_4k5vguj1o.f[0]++;cov_4k5vguj1o.s[4]++;if((cov_4k5vguj1o.b[1][0]++,obj)&&(cov_4k5vguj1o.b[1][1]++,obj.__esModule)){cov_4k5vguj1o.b[0][0]++;cov_4k5vguj1o.s[5]++;return obj;}else{cov_4k5vguj1o.b[0][1]++;var newObj=(cov_4k5vguj1o.s[6]++,{});cov_4k5vguj1o.s[7]++;if(obj!=null){cov_4k5vguj1o.b[2][0]++;cov_4k5vguj1o.s[8]++;for(var key in obj){cov_4k5vguj1o.s[9]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_4k5vguj1o.b[3][0]++;var desc=(cov_4k5vguj1o.s[10]++,(cov_4k5vguj1o.b[5][0]++,Object.defineProperty)&&(cov_4k5vguj1o.b[5][1]++,Object.getOwnPropertyDescriptor)?(cov_4k5vguj1o.b[4][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_4k5vguj1o.b[4][1]++,{}));cov_4k5vguj1o.s[11]++;if((cov_4k5vguj1o.b[7][0]++,desc.get)||(cov_4k5vguj1o.b[7][1]++,desc.set)){cov_4k5vguj1o.b[6][0]++;cov_4k5vguj1o.s[12]++;Object.defineProperty(newObj,key,desc);}else{cov_4k5vguj1o.b[6][1]++;cov_4k5vguj1o.s[13]++;newObj[key]=obj[key];}}else{cov_4k5vguj1o.b[3][1]++;}}}else{cov_4k5vguj1o.b[2][1]++;}cov_4k5vguj1o.s[14]++;newObj.default=obj;cov_4k5vguj1o.s[15]++;return newObj;}}function _classCallCheck(instance,Constructor){cov_4k5vguj1o.f[1]++;cov_4k5vguj1o.s[16]++;if(!(instance instanceof Constructor)){cov_4k5vguj1o.b[8][0]++;cov_4k5vguj1o.s[17]++;throw new TypeError("Cannot call a class as a function");}else{cov_4k5vguj1o.b[8][1]++;}}function _defineProperties(target,props){cov_4k5vguj1o.f[2]++;cov_4k5vguj1o.s[18]++;for(var i=0;i<props.length;i++){var descriptor=(cov_4k5vguj1o.s[19]++,props[i]);cov_4k5vguj1o.s[20]++;descriptor.enumerable=(cov_4k5vguj1o.b[9][0]++,descriptor.enumerable)||(cov_4k5vguj1o.b[9][1]++,false);cov_4k5vguj1o.s[21]++;descriptor.configurable=true;cov_4k5vguj1o.s[22]++;if("value"in descriptor){cov_4k5vguj1o.b[10][0]++;cov_4k5vguj1o.s[23]++;descriptor.writable=true;}else{cov_4k5vguj1o.b[10][1]++;}cov_4k5vguj1o.s[24]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_4k5vguj1o.f[3]++;cov_4k5vguj1o.s[25]++;if(protoProps){cov_4k5vguj1o.b[11][0]++;cov_4k5vguj1o.s[26]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_4k5vguj1o.b[11][1]++;}cov_4k5vguj1o.s[27]++;if(staticProps){cov_4k5vguj1o.b[12][0]++;cov_4k5vguj1o.s[28]++;_defineProperties(Constructor,staticProps);}else{cov_4k5vguj1o.b[12][1]++;}cov_4k5vguj1o.s[29]++;return Constructor;}var Device=(cov_4k5vguj1o.s[30]++,function(){cov_4k5vguj1o.f[4]++;function Device(snapData){cov_4k5vguj1o.f[5]++;cov_4k5vguj1o.s[31]++;_classCallCheck(this,Device);var values=(cov_4k5vguj1o.s[32]++,Object.assign({},snapData.val()));cov_4k5vguj1o.s[33]++;this.uid=snapData.name();cov_4k5vguj1o.s[34]++;this.os=values.os;cov_4k5vguj1o.s[35]++;this.userAgent=values.userAgent;cov_4k5vguj1o.s[36]++;this.status=values.status;cov_4k5vguj1o.s[37]++;this.sdk=values.sdk;}cov_4k5vguj1o.s[38]++;_createClass(Device,null,[{key:"get",value:function get(userUid,deviceUid){cov_4k5vguj1o.f[6]++;var newUid=(cov_4k5vguj1o.s[39]++,userUid.replace(/:/g,'/'));cov_4k5vguj1o.s[40]++;return DataSync.get("_/devices/".concat(newUid,"/").concat(deviceUid)).then(function(snapData){cov_4k5vguj1o.f[7]++;cov_4k5vguj1o.s[41]++;return snapData?(cov_4k5vguj1o.b[13][0]++,new Device(snapData)):(cov_4k5vguj1o.b[13][1]++,null);}).catch(Log.r('Device#get'));}}]);cov_4k5vguj1o.s[42]++;return Device;}());cov_4k5vguj1o.s[43]++;exports.default=Device;

/***/ }),

/***/ "./src/core/Invite.js":
/*!****************************!*\
  !*** ./src/core/Invite.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_2rmjvmo8mm=function(){var path="/home/florent/Projets/reach/src/core/Invite.js",hash="00f2c68688ef759a3be5e9b4ab2a2ab68422dec7",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/Invite.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:17},end:{line:8,column:44}},"3":{start:{line:10,column:15},end:{line:10,column:66}},"4":{start:{line:12,column:10},end:{line:12,column:56}},"5":{start:{line:14,column:13},end:{line:14,column:60}},"6":{start:{line:16,column:12},end:{line:16,column:53}},"7":{start:{line:18,column:13},end:{line:18,column:70}},"8":{start:{line:20,column:39},end:{line:20,column:93}},"9":{start:{line:22,column:40},end:{line:22,column:470}},"10":{start:{line:22,column:69},end:{line:22,column:80}},"11":{start:{line:22,column:103},end:{line:22,column:105}},"12":{start:{line:22,column:107},end:{line:22,column:431}},"13":{start:{line:22,column:126},end:{line:22,column:429}},"14":{start:{line:22,column:149},end:{line:22,column:427}},"15":{start:{line:22,column:214},end:{line:22,column:319}},"16":{start:{line:22,column:321},end:{line:22,column:425}},"17":{start:{line:22,column:349},end:{line:22,column:390}},"18":{start:{line:22,column:400},end:{line:22,column:423}},"19":{start:{line:22,column:432},end:{line:22,column:453}},"20":{start:{line:22,column:454},end:{line:22,column:468}},"21":{start:{line:24,column:50},end:{line:24,column:151}},"22":{start:{line:24,column:92},end:{line:24,column:149}},"23":{start:{line:26,column:44},end:{line:26,column:315}},"24":{start:{line:26,column:102},end:{line:26,column:110}},"25":{start:{line:26,column:112},end:{line:26,column:167}},"26":{start:{line:26,column:168},end:{line:26,column:199}},"27":{start:{line:26,column:200},end:{line:26,column:254}},"28":{start:{line:26,column:227},end:{line:26,column:254}},"29":{start:{line:26,column:255},end:{line:26,column:313}},"30":{start:{line:28,column:62},end:{line:28,column:131}},"31":{start:{line:28,column:78},end:{line:28,column:131}},"32":{start:{line:28,column:132},end:{line:28,column:193}},"33":{start:{line:28,column:149},end:{line:28,column:193}},"34":{start:{line:28,column:194},end:{line:28,column:213}},"35":{start:{line:39,column:13},end:{line:64,column:1}},"36":{start:{line:40,column:15},end:{line:40,column:87}},"37":{start:{line:42,column:15},end:{line:42,column:87}},"38":{start:{line:44,column:15},end:{line:48,column:3}},"39":{start:{line:50,column:2},end:{line:52,column:3}},"40":{start:{line:51,column:4},end:{line:51,column:82}},"41":{start:{line:54,column:2},end:{line:63,column:35}},"42":{start:{line:55,column:4},end:{line:57,column:7}},"43":{start:{line:56,column:6},end:{line:56,column:34}},"44":{start:{line:58,column:4},end:{line:58,column:42}},"45":{start:{line:60,column:4},end:{line:62,column:6}},"46":{start:{line:73,column:0},end:{line:373,column:3}},"47":{start:{line:80,column:4},end:{line:80,column:34}},"48":{start:{line:82,column:17},end:{line:82,column:25}},"49":{start:{line:84,column:4},end:{line:89,column:5}},"50":{start:{line:85,column:6},end:{line:88,column:9}},"51":{start:{line:96,column:4},end:{line:96,column:26}},"52":{start:{line:102,column:4},end:{line:102,column:28}},"53":{start:{line:108,column:4},end:{line:108,column:24}},"54":{start:{line:114,column:4},end:{line:114,column:28}},"55":{start:{line:124,column:4},end:{line:124,column:32}},"56":{start:{line:131,column:4},end:{line:131,column:30}},"57":{start:{line:137,column:4},end:{line:137,column:36}},"58":{start:{line:143,column:4},end:{line:143,column:32}},"59":{start:{line:150,column:4},end:{line:150,column:25}},"60":{start:{line:158,column:2},end:{line:370,column:6}},"61":{start:{line:167,column:6},end:{line:167,column:70}},"62":{start:{line:178,column:6},end:{line:178,column:70}},"63":{start:{line:188,column:6},end:{line:188,column:47}},"64":{start:{line:202,column:18},end:{line:202,column:22}},"65":{start:{line:204,column:6},end:{line:232,column:7}},"66":{start:{line:206,column:8},end:{line:208,column:9}},"67":{start:{line:207,column:10},end:{line:207,column:39}},"68":{start:{line:210,column:8},end:{line:210,column:47}},"69":{start:{line:213,column:8},end:{line:231,column:9}},"70":{start:{line:219,column:10},end:{line:228,column:12}},"71":{start:{line:220,column:26},end:{line:220,column:40}},"72":{start:{line:222,column:12},end:{line:227,column:13}},"73":{start:{line:223,column:14},end:{line:223,column:37}},"74":{start:{line:224,column:14},end:{line:226,column:17}},"75":{start:{line:225,column:16},end:{line:225,column:26}},"76":{start:{line:230,column:10},end:{line:230,column:121}},"77":{start:{line:242,column:19},end:{line:242,column:23}},"78":{start:{line:244,column:6},end:{line:246,column:9}},"79":{start:{line:245,column:8},end:{line:245,column:35}},"80":{start:{line:261,column:19},end:{line:261,column:23}},"81":{start:{line:263,column:6},end:{line:277,column:7}},"82":{start:{line:264,column:8},end:{line:264,column:29}},"83":{start:{line:265,column:13},end:{line:277,column:7}},"84":{start:{line:266,column:8},end:{line:276,column:9}},"85":{start:{line:267,column:20},end:{line:269,column:12}},"86":{start:{line:268,column:12},end:{line:268,column:35}},"87":{start:{line:271,column:10},end:{line:273,column:11}},"88":{start:{line:272,column:12},end:{line:272,column:43}},"89":{start:{line:275,column:10},end:{line:275,column:39}},"90":{start:{line:279,column:6},end:{line:283,column:7}},"91":{start:{line:280,column:8},end:{line:280,column:79}},"92":{start:{line:282,column:8},end:{line:282,column:93}},"93":{start:{line:293,column:19},end:{line:293,column:23}},"94":{start:{line:295,column:6},end:{line:301,column:7}},"95":{start:{line:296,column:8},end:{line:296,column:19}},"96":{start:{line:298,column:8},end:{line:300,column:11}},"97":{start:{line:299,column:10},end:{line:299,column:38}},"98":{start:{line:314,column:6},end:{line:314,column:48}},"99":{start:{line:324,column:6},end:{line:324,column:49}},"100":{start:{line:334,column:6},end:{line:334,column:49}},"101":{start:{line:344,column:6},end:{line:344,column:49}},"102":{start:{line:349,column:20},end:{line:349,column:92}},"103":{start:{line:351,column:6},end:{line:353,column:7}},"104":{start:{line:352,column:8},end:{line:352,column:91}},"105":{start:{line:355,column:27},end:{line:361,column:7}},"106":{start:{line:362,column:6},end:{line:368,column:37}},"107":{start:{line:363,column:23},end:{line:363,column:39}},"108":{start:{line:364,column:8},end:{line:367,column:28}},"109":{start:{line:372,column:2},end:{line:372,column:16}},"110":{start:{line:375,column:0},end:{line:375,column:25}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:20,column:9},end:{line:20,column:31}},loc:{start:{line:20,column:37},end:{line:20,column:95}},line:20},"1":{name:"_interopRequireWildcard",decl:{start:{line:22,column:9},end:{line:22,column:32}},loc:{start:{line:22,column:38},end:{line:22,column:472}},line:22},"2":{name:"_classCallCheck",decl:{start:{line:24,column:9},end:{line:24,column:24}},loc:{start:{line:24,column:48},end:{line:24,column:153}},line:24},"3":{name:"_defineProperties",decl:{start:{line:26,column:9},end:{line:26,column:26}},loc:{start:{line:26,column:42},end:{line:26,column:317}},line:26},"4":{name:"_createClass",decl:{start:{line:28,column:9},end:{line:28,column:21}},loc:{start:{line:28,column:60},end:{line:28,column:215}},line:28},"5":{name:"update",decl:{start:{line:39,column:22},end:{line:39,column:28}},loc:{start:{line:39,column:45},end:{line:64,column:1}},line:39},"6":{name:"(anonymous_6)",decl:{start:{line:54,column:94},end:{line:54,column:95}},loc:{start:{line:54,column:106},end:{line:59,column:3}},line:54},"7":{name:"(anonymous_7)",decl:{start:{line:55,column:32},end:{line:55,column:33}},loc:{start:{line:55,column:48},end:{line:57,column:5}},line:55},"8":{name:"(anonymous_8)",decl:{start:{line:59,column:10},end:{line:59,column:11}},loc:{start:{line:59,column:22},end:{line:63,column:3}},line:59},"9":{name:"(anonymous_9)",decl:{start:{line:73,column:0},end:{line:73,column:1}},loc:{start:{line:73,column:12},end:{line:373,column:1}},line:73},"10":{name:"Invite",decl:{start:{line:79,column:11},end:{line:79,column:17}},loc:{start:{line:79,column:28},end:{line:151,column:3}},line:79},"11":{name:"cancel",decl:{start:{line:166,column:20},end:{line:166,column:26}},loc:{start:{line:166,column:35},end:{line:168,column:5}},line:166},"12":{name:"reject",decl:{start:{line:177,column:20},end:{line:177,column:26}},loc:{start:{line:177,column:35},end:{line:179,column:5}},line:177},"13":{name:"accept",decl:{start:{line:187,column:20},end:{line:187,column:26}},loc:{start:{line:187,column:29},end:{line:189,column:5}},line:187},"14":{name:"on",decl:{start:{line:201,column:20},end:{line:201,column:22}},loc:{start:{line:201,column:41},end:{line:233,column:5}},line:201},"15":{name:"(anonymous_15)",decl:{start:{line:219,column:27},end:{line:219,column:28}},loc:{start:{line:219,column:47},end:{line:228,column:11}},line:219},"16":{name:"(anonymous_16)",decl:{start:{line:224,column:56},end:{line:224,column:57}},loc:{start:{line:224,column:70},end:{line:226,column:15}},line:224},"17":{name:"onStatusChange",decl:{start:{line:241,column:20},end:{line:241,column:34}},loc:{start:{line:241,column:45},end:{line:247,column:5}},line:241},"18":{name:"(anonymous_18)",decl:{start:{line:244,column:78},end:{line:244,column:79}},loc:{start:{line:244,column:95},end:{line:246,column:7}},line:244},"19":{name:"off",decl:{start:{line:260,column:20},end:{line:260,column:23}},loc:{start:{line:260,column:42},end:{line:284,column:5}},line:260},"20":{name:"(anonymous_20)",decl:{start:{line:267,column:54},end:{line:267,column:55}},loc:{start:{line:267,column:68},end:{line:269,column:11}},line:267},"21":{name:"(anonymous_21)",decl:{start:{line:279,column:80},end:{line:279,column:81}},loc:{start:{line:279,column:97},end:{line:281,column:7}},line:279},"22":{name:"offStatusChange",decl:{start:{line:292,column:20},end:{line:292,column:35}},loc:{start:{line:292,column:46},end:{line:302,column:5}},line:292},"23":{name:"(anonymous_23)",decl:{start:{line:298,column:80},end:{line:298,column:81}},loc:{start:{line:298,column:97},end:{line:300,column:9}},line:298},"24":{name:"get",decl:{start:{line:313,column:18},end:{line:313,column:21}},loc:{start:{line:313,column:24},end:{line:315,column:5}},line:313},"25":{name:"get",decl:{start:{line:323,column:18},end:{line:323,column:21}},loc:{start:{line:323,column:24},end:{line:325,column:5}},line:323},"26":{name:"get",decl:{start:{line:333,column:18},end:{line:333,column:21}},loc:{start:{line:333,column:24},end:{line:335,column:5}},line:333},"27":{name:"get",decl:{start:{line:343,column:18},end:{line:343,column:21}},loc:{start:{line:343,column:24},end:{line:345,column:5}},line:343},"28":{name:"send",decl:{start:{line:348,column:20},end:{line:348,column:24}},loc:{start:{line:348,column:40},end:{line:369,column:5}},line:348},"29":{name:"(anonymous_29)",decl:{start:{line:362,column:82},end:{line:362,column:83}},loc:{start:{line:362,column:103},end:{line:368,column:7}},line:362}},branchMap:{"0":{loc:{start:{line:20,column:46},end:{line:20,column:92}},type:"cond-expr",locations:[{start:{line:20,column:70},end:{line:20,column:73}},{start:{line:20,column:76},end:{line:20,column:92}}],line:20},"1":{loc:{start:{line:20,column:46},end:{line:20,column:67}},type:"binary-expr",locations:[{start:{line:20,column:46},end:{line:20,column:49}},{start:{line:20,column:53},end:{line:20,column:67}}],line:20},"2":{loc:{start:{line:22,column:40},end:{line:22,column:470}},type:"if",locations:[{start:{line:22,column:40},end:{line:22,column:470}},{start:{line:22,column:40},end:{line:22,column:470}}],line:22},"3":{loc:{start:{line:22,column:44},end:{line:22,column:65}},type:"binary-expr",locations:[{start:{line:22,column:44},end:{line:22,column:47}},{start:{line:22,column:51},end:{line:22,column:65}}],line:22},"4":{loc:{start:{line:22,column:107},end:{line:22,column:431}},type:"if",locations:[{start:{line:22,column:107},end:{line:22,column:431}},{start:{line:22,column:107},end:{line:22,column:431}}],line:22},"5":{loc:{start:{line:22,column:149},end:{line:22,column:427}},type:"if",locations:[{start:{line:22,column:149},end:{line:22,column:427}},{start:{line:22,column:149},end:{line:22,column:427}}],line:22},"6":{loc:{start:{line:22,column:214},end:{line:22,column:319}},type:"cond-expr",locations:[{start:{line:22,column:273},end:{line:22,column:314}},{start:{line:22,column:317},end:{line:22,column:319}}],line:22},"7":{loc:{start:{line:22,column:214},end:{line:22,column:270}},type:"binary-expr",locations:[{start:{line:22,column:214},end:{line:22,column:235}},{start:{line:22,column:239},end:{line:22,column:270}}],line:22},"8":{loc:{start:{line:22,column:321},end:{line:22,column:425}},type:"if",locations:[{start:{line:22,column:321},end:{line:22,column:425}},{start:{line:22,column:321},end:{line:22,column:425}}],line:22},"9":{loc:{start:{line:22,column:325},end:{line:22,column:345}},type:"binary-expr",locations:[{start:{line:22,column:325},end:{line:22,column:333}},{start:{line:22,column:337},end:{line:22,column:345}}],line:22},"10":{loc:{start:{line:24,column:50},end:{line:24,column:151}},type:"if",locations:[{start:{line:24,column:50},end:{line:24,column:151}},{start:{line:24,column:50},end:{line:24,column:151}}],line:24},"11":{loc:{start:{line:26,column:136},end:{line:26,column:166}},type:"binary-expr",locations:[{start:{line:26,column:136},end:{line:26,column:157}},{start:{line:26,column:161},end:{line:26,column:166}}],line:26},"12":{loc:{start:{line:26,column:200},end:{line:26,column:254}},type:"if",locations:[{start:{line:26,column:200},end:{line:26,column:254}},{start:{line:26,column:200},end:{line:26,column:254}}],line:26},"13":{loc:{start:{line:28,column:62},end:{line:28,column:131}},type:"if",locations:[{start:{line:28,column:62},end:{line:28,column:131}},{start:{line:28,column:62},end:{line:28,column:131}}],line:28},"14":{loc:{start:{line:28,column:132},end:{line:28,column:193}},type:"if",locations:[{start:{line:28,column:132},end:{line:28,column:193}},{start:{line:28,column:132},end:{line:28,column:193}}],line:28},"15":{loc:{start:{line:40,column:15},end:{line:40,column:87}},type:"cond-expr",locations:[{start:{line:40,column:68},end:{line:40,column:80}},{start:{line:40,column:83},end:{line:40,column:87}}],line:40},"16":{loc:{start:{line:40,column:15},end:{line:40,column:65}},type:"binary-expr",locations:[{start:{line:40,column:15},end:{line:40,column:35}},{start:{line:40,column:39},end:{line:40,column:65}}],line:40},"17":{loc:{start:{line:42,column:15},end:{line:42,column:87}},type:"cond-expr",locations:[{start:{line:42,column:68},end:{line:42,column:80}},{start:{line:42,column:83},end:{line:42,column:87}}],line:42},"18":{loc:{start:{line:42,column:15},end:{line:42,column:65}},type:"binary-expr",locations:[{start:{line:42,column:15},end:{line:42,column:35}},{start:{line:42,column:39},end:{line:42,column:65}}],line:42},"19":{loc:{start:{line:50,column:2},end:{line:52,column:3}},type:"if",locations:[{start:{line:50,column:2},end:{line:52,column:3}},{start:{line:50,column:2},end:{line:52,column:3}}],line:50},"20":{loc:{start:{line:84,column:4},end:{line:89,column:5}},type:"if",locations:[{start:{line:84,column:4},end:{line:89,column:5}},{start:{line:84,column:4},end:{line:89,column:5}}],line:84},"21":{loc:{start:{line:84,column:8},end:{line:84,column:70}},type:"binary-expr",locations:[{start:{line:84,column:8},end:{line:84,column:16}},{start:{line:84,column:20},end:{line:84,column:32}},{start:{line:84,column:36},end:{line:84,column:70}}],line:84},"22":{loc:{start:{line:204,column:6},end:{line:232,column:7}},type:"if",locations:[{start:{line:204,column:6},end:{line:232,column:7}},{start:{line:204,column:6},end:{line:232,column:7}}],line:204},"23":{loc:{start:{line:206,column:8},end:{line:208,column:9}},type:"if",locations:[{start:{line:206,column:8},end:{line:208,column:9}},{start:{line:206,column:8},end:{line:208,column:9}}],line:206},"24":{loc:{start:{line:213,column:8},end:{line:231,column:9}},type:"if",locations:[{start:{line:213,column:8},end:{line:231,column:9}},{start:{line:213,column:8},end:{line:231,column:9}}],line:213},"25":{loc:{start:{line:222,column:12},end:{line:227,column:13}},type:"if",locations:[{start:{line:222,column:12},end:{line:227,column:13}},{start:{line:222,column:12},end:{line:227,column:13}}],line:222},"26":{loc:{start:{line:222,column:16},end:{line:222,column:60}},type:"binary-expr",locations:[{start:{line:222,column:16},end:{line:222,column:32}},{start:{line:222,column:36},end:{line:222,column:60}}],line:222},"27":{loc:{start:{line:224,column:15},end:{line:224,column:46}},type:"binary-expr",locations:[{start:{line:224,column:15},end:{line:224,column:40}},{start:{line:224,column:44},end:{line:224,column:46}}],line:224},"28":{loc:{start:{line:263,column:6},end:{line:277,column:7}},type:"if",locations:[{start:{line:263,column:6},end:{line:277,column:7}},{start:{line:263,column:6},end:{line:277,column:7}}],line:263},"29":{loc:{start:{line:265,column:13},end:{line:277,column:7}},type:"if",locations:[{start:{line:265,column:13},end:{line:277,column:7}},{start:{line:265,column:13},end:{line:277,column:7}}],line:265},"30":{loc:{start:{line:266,column:8},end:{line:276,column:9}},type:"if",locations:[{start:{line:266,column:8},end:{line:276,column:9}},{start:{line:266,column:8},end:{line:276,column:9}}],line:266},"31":{loc:{start:{line:271,column:10},end:{line:273,column:11}},type:"if",locations:[{start:{line:271,column:10},end:{line:273,column:11}},{start:{line:271,column:10},end:{line:273,column:11}}],line:271},"32":{loc:{start:{line:279,column:6},end:{line:283,column:7}},type:"if",locations:[{start:{line:279,column:6},end:{line:283,column:7}},{start:{line:279,column:6},end:{line:283,column:7}}],line:279},"33":{loc:{start:{line:280,column:15},end:{line:280,column:78}},type:"binary-expr",locations:[{start:{line:280,column:15},end:{line:280,column:39}},{start:{line:280,column:43},end:{line:280,column:78}}],line:280},"34":{loc:{start:{line:295,column:6},end:{line:301,column:7}},type:"if",locations:[{start:{line:295,column:6},end:{line:301,column:7}},{start:{line:295,column:6},end:{line:301,column:7}}],line:295},"35":{loc:{start:{line:349,column:20},end:{line:349,column:92}},type:"cond-expr",locations:[{start:{line:349,column:73},end:{line:349,column:85}},{start:{line:349,column:88},end:{line:349,column:92}}],line:349},"36":{loc:{start:{line:349,column:20},end:{line:349,column:70}},type:"binary-expr",locations:[{start:{line:349,column:20},end:{line:349,column:40}},{start:{line:349,column:44},end:{line:349,column:70}}],line:349},"37":{loc:{start:{line:351,column:6},end:{line:353,column:7}},type:"if",locations:[{start:{line:351,column:6},end:{line:353,column:7}},{start:{line:351,column:6},end:{line:353,column:7}}],line:351}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/Invite.js"],names:["update","invite","status","reason","_ended","values","ONGOING","Promise","reject","Error","DataSync","to","uid","then","Object","keys","forEach","prop","Room","get","room","catch","Log","r","Invite","snapData","val","assign","name","ref","parent","from","topic","_created","_callbacks","CANCELED","ts","REJECTED","ACCEPTED","callback","Events","supports","push","_listener","updated","cb","on","bind","event","idx","findIndex","splice","some","length","off","invitee","message","cache","user","inviteMetaData","inviteRef","inviteId"],mappings:"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",sourcesContent:["import {\n  ACCEPTED,\n  CANCELED,\n  ONGOING,\n  REJECTED\n} from './util/constants';\nimport * as DataSync from './util/DataSync';\nimport * as Log from './util/Log';\nimport cache from './util/cache';\nimport Room from './Room';\nimport * as Events from '../definitions/Events';\n\n/**\n * Update\n * @param {Invite} invite The invite\n * @param {string} status The new status\n * @param {string} [reason=null] The reason (a message)\n * @param {object} [_ended=null]\n * @access private\n * @returns {Promise<Invite, Error>}\n */\nconst update = (invite, status, reason = null, _ended = null) => {\n  const values = {\n    status,\n    reason,\n    _ended\n  };\n  if (invite.status !== ONGOING) {\n    return Promise.reject(new Error('This invitation has already been answered'));\n  }\n  return DataSync.update(`_/invites/${invite.to}/${invite.uid}`, values)\n    .then(() => {\n      Object.keys(values).forEach((prop) => {\n        invite[prop] = values[prop]; // eslint-disable-line no-param-reassign\n      });\n      return Room.get(invite.room);\n    })\n    .then(() => ({ invite }))\n    .catch(Log.r('Invite_update'));\n};\n\n/**\n * Invitation\n * @public\n */\nexport default class Invite {\n  /**\n   * Create an invite\n   * @param {Webcom/api.DataSnapshot|object} snapData The data snapshot\n   * @access protected\n   */\n  constructor(snapData) {\n    let values = snapData;\n    if (snapData && snapData.val && typeof snapData.val === 'function') {\n      values = Object.assign({},\n        snapData.val(),\n        { uid: snapData.name(), to: snapData.ref().parent().name() });\n    }\n    /**\n     * Invite's unique id\n     * @type string\n     */\n    this.uid = values.uid;\n    /**\n     * Invite's sender uid\n     * @type {string}\n     */\n    this.from = values.from;\n    /**\n     * Invitee's uid\n     * @type {string}\n     */\n    this.to = values.to;\n    /**\n     * The id of the room associated to the invite\n     * @type {string}\n     */\n    this.room = values.room;\n    /**\n     * The invitation status :\n     * - ONGOING - The receiver has not yet responded to the invitation\n     * - ACCEPTED - The receiver has accepted the invitation\n     * - REJECTED - The receiver has rejected the invitation\n     * - CANCELED - The sender canceled the invitation\n     * @type {string}\n     */\n    this.status = values.status;\n    /**\n     * Invite message. This will be either a custom message,\n     * if the status is ONGOING or a reason when status is CANCELED|REJECTED.\n     * @type {string}\n     */\n    this.topic = values.topic;\n    /**\n     * Invite creation timestamp\n     * @type {number}\n     */\n    this._created = values._created;\n    /**\n     * Invite expiration timestamp\n     * @type {number}\n     */\n    this._ended = values._ended;\n    /**\n     * Invite events callbacks\n     * @type {{}}\n     * @private\n     */\n    this._callbacks = {};\n  }\n\n  /**\n   * Is this invitation waiting for a reply ?\n   * @type {boolean}\n   */\n  get isOnGoing() {\n    return this.status === ONGOING;\n  }\n\n  /**\n   * Was this invitation rejected ?\n   * @type {boolean}\n   */\n  get isRejected() {\n    return this.status === REJECTED;\n  }\n\n  /**\n   * Was this invitation accepted ?\n   * @type {boolean}\n   */\n  get isAccepted() {\n    return this.status === ACCEPTED;\n  }\n\n  /**\n   * Was this invitation canceled ?\n   * @type {boolean}\n   */\n  get isCanceled() {\n    return this.status === CANCELED;\n  }\n\n  /**\n   * Cancels the invitation. Only the sender can cancel the invitation.\n   * @param {string} [reason] The reason the sender is canceling the invite\n   * @return {Promise<Invite>}\n   */\n  cancel(reason) {\n    return update(this, CANCELED, reason, DataSync.ts());\n  }\n\n  /**\n   * Rejects the invitation. Only the receiver can reject the invitation.\n   * @param {string} [reason] The reason the receiver is rejecting the invite\n   * @return {Promise<Invite>}\n   */\n  reject(reason) {\n    return update(this, REJECTED, reason, DataSync.ts());\n  }\n\n  /**\n   * Accept the invitation. Only the receiver can accept the invitation.\n   * @return {Promise<Invite>}\n   */\n  accept() {\n    return update(this, ACCEPTED);\n  }\n\n  /**\n   * Register a callback for a status update\n   * @param {string} status Can be:\n   * - ACCEPTED\n   * - REJECTED\n   * - CANCELED\n   * @param {function} callback\n   */\n  on(status, callback) {\n    if (Events.invite.supports(status)) {\n      // Register callback\n      if (!this._callbacks[status]) {\n        this._callbacks[status] = [];\n      }\n      this._callbacks[status].push(callback);\n      // Defined listener & subscribe if needed\n      if (!this._listener) {\n        /**\n         * Invite status update callback\n         * @type {function}\n         * @private\n         */\n        this._listener = (snapData) => {\n          const updated = snapData.val();\n          if (updated !== null && updated !== this.status) {\n            this.status = updated;\n            (this._callbacks[updated] || []).forEach((cb) => {\n              cb(this);\n            });\n          }\n        };\n        DataSync.on(`_/invites/${this.to}/${this.uid}/status`, 'value', this._listener.bind(this));\n      }\n    }\n  }\n\n  /**\n   * Register a callback for all status change events\n   * @param {function} callback\n   */\n  onStatusChange(callback) {\n    [ACCEPTED, REJECTED, CANCELED].forEach((event) => {\n      this.on(event, callback);\n    });\n  }\n\n  /**\n   * Un-register a callback for a status update\n   * @param {string} [status] Can be:\n   * - ACCEPTED\n   * - REJECTED\n   * - CANCELED\n   * - null This will un-register all callbacks\n   * @param {function} [callback]\n   */\n  off(status, callback) {\n    if (!status) {\n      this._callbacks = {};\n    } else if (this._callbacks[status]) {\n      if (callback) {\n        const idx = this._callbacks[status].findIndex(cb => cb === callback);\n        if (idx >= 0) {\n          this._callbacks.splice(idx, 1);\n        }\n      } else {\n        this._callbacks[status] = [];\n      }\n    }\n    if (![CANCELED, ACCEPTED, REJECTED]\n      .some(event => this._callbacks[event] && this._callbacks[event].length > 0)) {\n      DataSync.off(`_/invites/${this.to}/${this.uid}/status`, 'value');\n    }\n  }\n\n  /**\n   * Un-register a callback for all status change events\n   * @param {function} [callback]\n   */\n  offStatusChange(callback) {\n    if (!callback) {\n      this.off();\n    } else {\n      [ACCEPTED, REJECTED, CANCELED].forEach((event) => {\n        this.off(event, callback);\n      });\n    }\n  }\n\n  /**\n   * Create the invitation & add the user to the participants list\n   * @access protected\n   * @param {User} invitee The user to invite\n   * @param {Room} room The room to invite the user to\n   * @param {string} [message] A message for the invitee\n   */\n  static send(invitee, room, message = null) {\n    if (!cache.user) {\n      return Promise.reject(new Error('Only an authenticated user can send an invite.'));\n    }\n\n    const inviteMetaData = {\n      from: cache.user.uid,\n      room: room.uid,\n      status: ONGOING,\n      _created: DataSync.ts(),\n      topic: message\n    };\n\n    return DataSync.push(`_/invites/${invitee.uid}`, inviteMetaData)\n      .then((inviteRef) => {\n        const inviteId = inviteRef.name();\n        return new Invite(Object.assign({ uid: inviteId, to: invitee.uid }, inviteMetaData));\n      })\n      .catch(Log.r('Invite#send'));\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_2rmjvmo8mm.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2rmjvmo8mm.s[1]++;exports.default=void 0;var _constants=(cov_2rmjvmo8mm.s[2]++,__webpack_require__(/*! ./util/constants */ "./src/core/util/constants.js"));var DataSync=(cov_2rmjvmo8mm.s[3]++,_interopRequireWildcard(__webpack_require__(/*! ./util/DataSync */ "./src/core/util/DataSync.js")));var Log=(cov_2rmjvmo8mm.s[4]++,_interopRequireWildcard(__webpack_require__(/*! ./util/Log */ "./src/core/util/Log.js")));var _cache=(cov_2rmjvmo8mm.s[5]++,_interopRequireDefault(__webpack_require__(/*! ./util/cache */ "./src/core/util/cache.js")));var _Room=(cov_2rmjvmo8mm.s[6]++,_interopRequireDefault(__webpack_require__(/*! ./Room */ "./src/core/Room.js")));var Events=(cov_2rmjvmo8mm.s[7]++,_interopRequireWildcard(__webpack_require__(/*! ../definitions/Events */ "./src/definitions/Events.js")));function _interopRequireDefault(obj){cov_2rmjvmo8mm.f[0]++;cov_2rmjvmo8mm.s[8]++;return(cov_2rmjvmo8mm.b[1][0]++,obj)&&(cov_2rmjvmo8mm.b[1][1]++,obj.__esModule)?(cov_2rmjvmo8mm.b[0][0]++,obj):(cov_2rmjvmo8mm.b[0][1]++,{default:obj});}function _interopRequireWildcard(obj){cov_2rmjvmo8mm.f[1]++;cov_2rmjvmo8mm.s[9]++;if((cov_2rmjvmo8mm.b[3][0]++,obj)&&(cov_2rmjvmo8mm.b[3][1]++,obj.__esModule)){cov_2rmjvmo8mm.b[2][0]++;cov_2rmjvmo8mm.s[10]++;return obj;}else{cov_2rmjvmo8mm.b[2][1]++;var newObj=(cov_2rmjvmo8mm.s[11]++,{});cov_2rmjvmo8mm.s[12]++;if(obj!=null){cov_2rmjvmo8mm.b[4][0]++;cov_2rmjvmo8mm.s[13]++;for(var key in obj){cov_2rmjvmo8mm.s[14]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_2rmjvmo8mm.b[5][0]++;var desc=(cov_2rmjvmo8mm.s[15]++,(cov_2rmjvmo8mm.b[7][0]++,Object.defineProperty)&&(cov_2rmjvmo8mm.b[7][1]++,Object.getOwnPropertyDescriptor)?(cov_2rmjvmo8mm.b[6][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_2rmjvmo8mm.b[6][1]++,{}));cov_2rmjvmo8mm.s[16]++;if((cov_2rmjvmo8mm.b[9][0]++,desc.get)||(cov_2rmjvmo8mm.b[9][1]++,desc.set)){cov_2rmjvmo8mm.b[8][0]++;cov_2rmjvmo8mm.s[17]++;Object.defineProperty(newObj,key,desc);}else{cov_2rmjvmo8mm.b[8][1]++;cov_2rmjvmo8mm.s[18]++;newObj[key]=obj[key];}}else{cov_2rmjvmo8mm.b[5][1]++;}}}else{cov_2rmjvmo8mm.b[4][1]++;}cov_2rmjvmo8mm.s[19]++;newObj.default=obj;cov_2rmjvmo8mm.s[20]++;return newObj;}}function _classCallCheck(instance,Constructor){cov_2rmjvmo8mm.f[2]++;cov_2rmjvmo8mm.s[21]++;if(!(instance instanceof Constructor)){cov_2rmjvmo8mm.b[10][0]++;cov_2rmjvmo8mm.s[22]++;throw new TypeError("Cannot call a class as a function");}else{cov_2rmjvmo8mm.b[10][1]++;}}function _defineProperties(target,props){cov_2rmjvmo8mm.f[3]++;cov_2rmjvmo8mm.s[23]++;for(var i=0;i<props.length;i++){var descriptor=(cov_2rmjvmo8mm.s[24]++,props[i]);cov_2rmjvmo8mm.s[25]++;descriptor.enumerable=(cov_2rmjvmo8mm.b[11][0]++,descriptor.enumerable)||(cov_2rmjvmo8mm.b[11][1]++,false);cov_2rmjvmo8mm.s[26]++;descriptor.configurable=true;cov_2rmjvmo8mm.s[27]++;if("value"in descriptor){cov_2rmjvmo8mm.b[12][0]++;cov_2rmjvmo8mm.s[28]++;descriptor.writable=true;}else{cov_2rmjvmo8mm.b[12][1]++;}cov_2rmjvmo8mm.s[29]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_2rmjvmo8mm.f[4]++;cov_2rmjvmo8mm.s[30]++;if(protoProps){cov_2rmjvmo8mm.b[13][0]++;cov_2rmjvmo8mm.s[31]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_2rmjvmo8mm.b[13][1]++;}cov_2rmjvmo8mm.s[32]++;if(staticProps){cov_2rmjvmo8mm.b[14][0]++;cov_2rmjvmo8mm.s[33]++;_defineProperties(Constructor,staticProps);}else{cov_2rmjvmo8mm.b[14][1]++;}cov_2rmjvmo8mm.s[34]++;return Constructor;}cov_2rmjvmo8mm.s[35]++;var update=function update(invite,status){cov_2rmjvmo8mm.f[5]++;var reason=(cov_2rmjvmo8mm.s[36]++,(cov_2rmjvmo8mm.b[16][0]++,arguments.length>2)&&(cov_2rmjvmo8mm.b[16][1]++,arguments[2]!==undefined)?(cov_2rmjvmo8mm.b[15][0]++,arguments[2]):(cov_2rmjvmo8mm.b[15][1]++,null));var _ended=(cov_2rmjvmo8mm.s[37]++,(cov_2rmjvmo8mm.b[18][0]++,arguments.length>3)&&(cov_2rmjvmo8mm.b[18][1]++,arguments[3]!==undefined)?(cov_2rmjvmo8mm.b[17][0]++,arguments[3]):(cov_2rmjvmo8mm.b[17][1]++,null));var values=(cov_2rmjvmo8mm.s[38]++,{status:status,reason:reason,_ended:_ended});cov_2rmjvmo8mm.s[39]++;if(invite.status!==_constants.ONGOING){cov_2rmjvmo8mm.b[19][0]++;cov_2rmjvmo8mm.s[40]++;return Promise.reject(new Error('This invitation has already been answered'));}else{cov_2rmjvmo8mm.b[19][1]++;}cov_2rmjvmo8mm.s[41]++;return DataSync.update("_/invites/".concat(invite.to,"/").concat(invite.uid),values).then(function(){cov_2rmjvmo8mm.f[6]++;cov_2rmjvmo8mm.s[42]++;Object.keys(values).forEach(function(prop){cov_2rmjvmo8mm.f[7]++;cov_2rmjvmo8mm.s[43]++;invite[prop]=values[prop];});cov_2rmjvmo8mm.s[44]++;return _Room.default.get(invite.room);}).then(function(){cov_2rmjvmo8mm.f[8]++;cov_2rmjvmo8mm.s[45]++;return{invite:invite};}).catch(Log.r('Invite_update'));};var Invite=(cov_2rmjvmo8mm.s[46]++,function(){cov_2rmjvmo8mm.f[9]++;function Invite(snapData){cov_2rmjvmo8mm.f[10]++;cov_2rmjvmo8mm.s[47]++;_classCallCheck(this,Invite);var values=(cov_2rmjvmo8mm.s[48]++,snapData);cov_2rmjvmo8mm.s[49]++;if((cov_2rmjvmo8mm.b[21][0]++,snapData)&&(cov_2rmjvmo8mm.b[21][1]++,snapData.val)&&(cov_2rmjvmo8mm.b[21][2]++,typeof snapData.val==='function')){cov_2rmjvmo8mm.b[20][0]++;cov_2rmjvmo8mm.s[50]++;values=Object.assign({},snapData.val(),{uid:snapData.name(),to:snapData.ref().parent().name()});}else{cov_2rmjvmo8mm.b[20][1]++;}cov_2rmjvmo8mm.s[51]++;this.uid=values.uid;cov_2rmjvmo8mm.s[52]++;this.from=values.from;cov_2rmjvmo8mm.s[53]++;this.to=values.to;cov_2rmjvmo8mm.s[54]++;this.room=values.room;cov_2rmjvmo8mm.s[55]++;this.status=values.status;cov_2rmjvmo8mm.s[56]++;this.topic=values.topic;cov_2rmjvmo8mm.s[57]++;this._created=values._created;cov_2rmjvmo8mm.s[58]++;this._ended=values._ended;cov_2rmjvmo8mm.s[59]++;this._callbacks={};}cov_2rmjvmo8mm.s[60]++;_createClass(Invite,[{key:"cancel",value:function cancel(reason){cov_2rmjvmo8mm.f[11]++;cov_2rmjvmo8mm.s[61]++;return update(this,_constants.CANCELED,reason,DataSync.ts());}},{key:"reject",value:function reject(reason){cov_2rmjvmo8mm.f[12]++;cov_2rmjvmo8mm.s[62]++;return update(this,_constants.REJECTED,reason,DataSync.ts());}},{key:"accept",value:function accept(){cov_2rmjvmo8mm.f[13]++;cov_2rmjvmo8mm.s[63]++;return update(this,_constants.ACCEPTED);}},{key:"on",value:function on(status,callback){cov_2rmjvmo8mm.f[14]++;var _this=(cov_2rmjvmo8mm.s[64]++,this);cov_2rmjvmo8mm.s[65]++;if(Events.invite.supports(status)){cov_2rmjvmo8mm.b[22][0]++;cov_2rmjvmo8mm.s[66]++;if(!this._callbacks[status]){cov_2rmjvmo8mm.b[23][0]++;cov_2rmjvmo8mm.s[67]++;this._callbacks[status]=[];}else{cov_2rmjvmo8mm.b[23][1]++;}cov_2rmjvmo8mm.s[68]++;this._callbacks[status].push(callback);cov_2rmjvmo8mm.s[69]++;if(!this._listener){cov_2rmjvmo8mm.b[24][0]++;cov_2rmjvmo8mm.s[70]++;this._listener=function(snapData){cov_2rmjvmo8mm.f[15]++;var updated=(cov_2rmjvmo8mm.s[71]++,snapData.val());cov_2rmjvmo8mm.s[72]++;if((cov_2rmjvmo8mm.b[26][0]++,updated!==null)&&(cov_2rmjvmo8mm.b[26][1]++,updated!==_this.status)){cov_2rmjvmo8mm.b[25][0]++;cov_2rmjvmo8mm.s[73]++;_this.status=updated;cov_2rmjvmo8mm.s[74]++;((cov_2rmjvmo8mm.b[27][0]++,_this._callbacks[updated])||(cov_2rmjvmo8mm.b[27][1]++,[])).forEach(function(cb){cov_2rmjvmo8mm.f[16]++;cov_2rmjvmo8mm.s[75]++;cb(_this);});}else{cov_2rmjvmo8mm.b[25][1]++;}};cov_2rmjvmo8mm.s[76]++;DataSync.on("_/invites/".concat(this.to,"/").concat(this.uid,"/status"),'value',this._listener.bind(this));}else{cov_2rmjvmo8mm.b[24][1]++;}}else{cov_2rmjvmo8mm.b[22][1]++;}}},{key:"onStatusChange",value:function onStatusChange(callback){cov_2rmjvmo8mm.f[17]++;var _this2=(cov_2rmjvmo8mm.s[77]++,this);cov_2rmjvmo8mm.s[78]++;[_constants.ACCEPTED,_constants.REJECTED,_constants.CANCELED].forEach(function(event){cov_2rmjvmo8mm.f[18]++;cov_2rmjvmo8mm.s[79]++;_this2.on(event,callback);});}},{key:"off",value:function off(status,callback){cov_2rmjvmo8mm.f[19]++;var _this3=(cov_2rmjvmo8mm.s[80]++,this);cov_2rmjvmo8mm.s[81]++;if(!status){cov_2rmjvmo8mm.b[28][0]++;cov_2rmjvmo8mm.s[82]++;this._callbacks={};}else{cov_2rmjvmo8mm.b[28][1]++;cov_2rmjvmo8mm.s[83]++;if(this._callbacks[status]){cov_2rmjvmo8mm.b[29][0]++;cov_2rmjvmo8mm.s[84]++;if(callback){cov_2rmjvmo8mm.b[30][0]++;var idx=(cov_2rmjvmo8mm.s[85]++,this._callbacks[status].findIndex(function(cb){cov_2rmjvmo8mm.f[20]++;cov_2rmjvmo8mm.s[86]++;return cb===callback;}));cov_2rmjvmo8mm.s[87]++;if(idx>=0){cov_2rmjvmo8mm.b[31][0]++;cov_2rmjvmo8mm.s[88]++;this._callbacks.splice(idx,1);}else{cov_2rmjvmo8mm.b[31][1]++;}}else{cov_2rmjvmo8mm.b[30][1]++;cov_2rmjvmo8mm.s[89]++;this._callbacks[status]=[];}}else{cov_2rmjvmo8mm.b[29][1]++;}}cov_2rmjvmo8mm.s[90]++;if(![_constants.CANCELED,_constants.ACCEPTED,_constants.REJECTED].some(function(event){cov_2rmjvmo8mm.f[21]++;cov_2rmjvmo8mm.s[91]++;return(cov_2rmjvmo8mm.b[33][0]++,_this3._callbacks[event])&&(cov_2rmjvmo8mm.b[33][1]++,_this3._callbacks[event].length>0);})){cov_2rmjvmo8mm.b[32][0]++;cov_2rmjvmo8mm.s[92]++;DataSync.off("_/invites/".concat(this.to,"/").concat(this.uid,"/status"),'value');}else{cov_2rmjvmo8mm.b[32][1]++;}}},{key:"offStatusChange",value:function offStatusChange(callback){cov_2rmjvmo8mm.f[22]++;var _this4=(cov_2rmjvmo8mm.s[93]++,this);cov_2rmjvmo8mm.s[94]++;if(!callback){cov_2rmjvmo8mm.b[34][0]++;cov_2rmjvmo8mm.s[95]++;this.off();}else{cov_2rmjvmo8mm.b[34][1]++;cov_2rmjvmo8mm.s[96]++;[_constants.ACCEPTED,_constants.REJECTED,_constants.CANCELED].forEach(function(event){cov_2rmjvmo8mm.f[23]++;cov_2rmjvmo8mm.s[97]++;_this4.off(event,callback);});}}},{key:"isOnGoing",get:function get(){cov_2rmjvmo8mm.f[24]++;cov_2rmjvmo8mm.s[98]++;return this.status===_constants.ONGOING;}},{key:"isRejected",get:function get(){cov_2rmjvmo8mm.f[25]++;cov_2rmjvmo8mm.s[99]++;return this.status===_constants.REJECTED;}},{key:"isAccepted",get:function get(){cov_2rmjvmo8mm.f[26]++;cov_2rmjvmo8mm.s[100]++;return this.status===_constants.ACCEPTED;}},{key:"isCanceled",get:function get(){cov_2rmjvmo8mm.f[27]++;cov_2rmjvmo8mm.s[101]++;return this.status===_constants.CANCELED;}}],[{key:"send",value:function send(invitee,room){cov_2rmjvmo8mm.f[28]++;var message=(cov_2rmjvmo8mm.s[102]++,(cov_2rmjvmo8mm.b[36][0]++,arguments.length>2)&&(cov_2rmjvmo8mm.b[36][1]++,arguments[2]!==undefined)?(cov_2rmjvmo8mm.b[35][0]++,arguments[2]):(cov_2rmjvmo8mm.b[35][1]++,null));cov_2rmjvmo8mm.s[103]++;if(!_cache.default.user){cov_2rmjvmo8mm.b[37][0]++;cov_2rmjvmo8mm.s[104]++;return Promise.reject(new Error('Only an authenticated user can send an invite.'));}else{cov_2rmjvmo8mm.b[37][1]++;}var inviteMetaData=(cov_2rmjvmo8mm.s[105]++,{from:_cache.default.user.uid,room:room.uid,status:_constants.ONGOING,_created:DataSync.ts(),topic:message});cov_2rmjvmo8mm.s[106]++;return DataSync.push("_/invites/".concat(invitee.uid),inviteMetaData).then(function(inviteRef){cov_2rmjvmo8mm.f[29]++;var inviteId=(cov_2rmjvmo8mm.s[107]++,inviteRef.name());cov_2rmjvmo8mm.s[108]++;return new Invite(Object.assign({uid:inviteId,to:invitee.uid},inviteMetaData));}).catch(Log.r('Invite#send'));}}]);cov_2rmjvmo8mm.s[109]++;return Invite;}());cov_2rmjvmo8mm.s[110]++;exports.default=Invite;

/***/ }),

/***/ "./src/core/Message.js":
/*!*****************************!*\
  !*** ./src/core/Message.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_1ox678h3gg=function(){var path="/home/florent/Projets/reach/src/core/Message.js",hash="216811d4a4142ac2c7829d9d6112404118610809",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/Message.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:15},end:{line:8,column:66}},"3":{start:{line:10,column:10},end:{line:10,column:56}},"4":{start:{line:12,column:13},end:{line:12,column:60}},"5":{start:{line:14,column:39},end:{line:14,column:93}},"6":{start:{line:16,column:40},end:{line:16,column:470}},"7":{start:{line:16,column:69},end:{line:16,column:80}},"8":{start:{line:16,column:103},end:{line:16,column:105}},"9":{start:{line:16,column:107},end:{line:16,column:431}},"10":{start:{line:16,column:126},end:{line:16,column:429}},"11":{start:{line:16,column:149},end:{line:16,column:427}},"12":{start:{line:16,column:214},end:{line:16,column:319}},"13":{start:{line:16,column:321},end:{line:16,column:425}},"14":{start:{line:16,column:349},end:{line:16,column:390}},"15":{start:{line:16,column:400},end:{line:16,column:423}},"16":{start:{line:16,column:432},end:{line:16,column:453}},"17":{start:{line:16,column:454},end:{line:16,column:468}},"18":{start:{line:18,column:50},end:{line:18,column:151}},"19":{start:{line:18,column:92},end:{line:18,column:149}},"20":{start:{line:20,column:44},end:{line:20,column:315}},"21":{start:{line:20,column:102},end:{line:20,column:110}},"22":{start:{line:20,column:112},end:{line:20,column:167}},"23":{start:{line:20,column:168},end:{line:20,column:199}},"24":{start:{line:20,column:200},end:{line:20,column:254}},"25":{start:{line:20,column:227},end:{line:20,column:254}},"26":{start:{line:20,column:255},end:{line:20,column:313}},"27":{start:{line:22,column:62},end:{line:22,column:131}},"28":{start:{line:22,column:78},end:{line:22,column:131}},"29":{start:{line:22,column:132},end:{line:22,column:193}},"30":{start:{line:22,column:149},end:{line:22,column:193}},"31":{start:{line:22,column:194},end:{line:22,column:213}},"32":{start:{line:30,column:0},end:{line:129,column:3}},"33":{start:{line:38,column:4},end:{line:38,column:35}},"34":{start:{line:40,column:17},end:{line:40,column:50}},"35":{start:{line:46,column:4},end:{line:46,column:31}},"36":{start:{line:52,column:4},end:{line:52,column:25}},"37":{start:{line:58,column:4},end:{line:58,column:28}},"38":{start:{line:64,column:4},end:{line:64,column:28}},"39":{start:{line:70,column:4},end:{line:70,column:36}},"40":{start:{line:79,column:2},end:{line:126,column:6}},"41":{start:{line:82,column:18},end:{line:82,column:22}},"42":{start:{line:84,column:6},end:{line:89,column:38}},"43":{start:{line:87,column:8},end:{line:87,column:29}},"44":{start:{line:88,column:8},end:{line:88,column:21}},"45":{start:{line:99,column:6},end:{line:99,column:122}},"46":{start:{line:111,column:6},end:{line:113,column:7}},"47":{start:{line:112,column:8},end:{line:112,column:110}},"48":{start:{line:115,column:17},end:{line:119,column:7}},"49":{start:{line:120,column:6},end:{line:124,column:38}},"50":{start:{line:121,column:8},end:{line:121,column:94}},"51":{start:{line:123,column:8},end:{line:123,column:47}},"52":{start:{line:128,column:2},end:{line:128,column:17}},"53":{start:{line:131,column:0},end:{line:131,column:26}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:14,column:9},end:{line:14,column:31}},loc:{start:{line:14,column:37},end:{line:14,column:95}},line:14},"1":{name:"_interopRequireWildcard",decl:{start:{line:16,column:9},end:{line:16,column:32}},loc:{start:{line:16,column:38},end:{line:16,column:472}},line:16},"2":{name:"_classCallCheck",decl:{start:{line:18,column:9},end:{line:18,column:24}},loc:{start:{line:18,column:48},end:{line:18,column:153}},line:18},"3":{name:"_defineProperties",decl:{start:{line:20,column:9},end:{line:20,column:26}},loc:{start:{line:20,column:42},end:{line:20,column:317}},line:20},"4":{name:"_createClass",decl:{start:{line:22,column:9},end:{line:22,column:21}},loc:{start:{line:22,column:60},end:{line:22,column:215}},line:22},"5":{name:"(anonymous_5)",decl:{start:{line:30,column:0},end:{line:30,column:1}},loc:{start:{line:30,column:12},end:{line:129,column:1}},line:30},"6":{name:"Message",decl:{start:{line:37,column:11},end:{line:37,column:18}},loc:{start:{line:37,column:37},end:{line:71,column:3}},line:37},"7":{name:"edit",decl:{start:{line:81,column:20},end:{line:81,column:24}},loc:{start:{line:81,column:34},end:{line:90,column:5}},line:81},"8":{name:"(anonymous_8)",decl:{start:{line:86,column:14},end:{line:86,column:15}},loc:{start:{line:86,column:26},end:{line:89,column:7}},line:86},"9":{name:"remove",decl:{start:{line:98,column:20},end:{line:98,column:26}},loc:{start:{line:98,column:29},end:{line:100,column:5}},line:98},"10":{name:"send",decl:{start:{line:110,column:20},end:{line:110,column:24}},loc:{start:{line:110,column:37},end:{line:125,column:5}},line:110},"11":{name:"(anonymous_11)",decl:{start:{line:120,column:80},end:{line:120,column:81}},loc:{start:{line:120,column:99},end:{line:122,column:7}},line:120},"12":{name:"(anonymous_12)",decl:{start:{line:122,column:14},end:{line:122,column:15}},loc:{start:{line:122,column:34},end:{line:124,column:7}},line:122}},branchMap:{"0":{loc:{start:{line:14,column:46},end:{line:14,column:92}},type:"cond-expr",locations:[{start:{line:14,column:70},end:{line:14,column:73}},{start:{line:14,column:76},end:{line:14,column:92}}],line:14},"1":{loc:{start:{line:14,column:46},end:{line:14,column:67}},type:"binary-expr",locations:[{start:{line:14,column:46},end:{line:14,column:49}},{start:{line:14,column:53},end:{line:14,column:67}}],line:14},"2":{loc:{start:{line:16,column:40},end:{line:16,column:470}},type:"if",locations:[{start:{line:16,column:40},end:{line:16,column:470}},{start:{line:16,column:40},end:{line:16,column:470}}],line:16},"3":{loc:{start:{line:16,column:44},end:{line:16,column:65}},type:"binary-expr",locations:[{start:{line:16,column:44},end:{line:16,column:47}},{start:{line:16,column:51},end:{line:16,column:65}}],line:16},"4":{loc:{start:{line:16,column:107},end:{line:16,column:431}},type:"if",locations:[{start:{line:16,column:107},end:{line:16,column:431}},{start:{line:16,column:107},end:{line:16,column:431}}],line:16},"5":{loc:{start:{line:16,column:149},end:{line:16,column:427}},type:"if",locations:[{start:{line:16,column:149},end:{line:16,column:427}},{start:{line:16,column:149},end:{line:16,column:427}}],line:16},"6":{loc:{start:{line:16,column:214},end:{line:16,column:319}},type:"cond-expr",locations:[{start:{line:16,column:273},end:{line:16,column:314}},{start:{line:16,column:317},end:{line:16,column:319}}],line:16},"7":{loc:{start:{line:16,column:214},end:{line:16,column:270}},type:"binary-expr",locations:[{start:{line:16,column:214},end:{line:16,column:235}},{start:{line:16,column:239},end:{line:16,column:270}}],line:16},"8":{loc:{start:{line:16,column:321},end:{line:16,column:425}},type:"if",locations:[{start:{line:16,column:321},end:{line:16,column:425}},{start:{line:16,column:321},end:{line:16,column:425}}],line:16},"9":{loc:{start:{line:16,column:325},end:{line:16,column:345}},type:"binary-expr",locations:[{start:{line:16,column:325},end:{line:16,column:333}},{start:{line:16,column:337},end:{line:16,column:345}}],line:16},"10":{loc:{start:{line:18,column:50},end:{line:18,column:151}},type:"if",locations:[{start:{line:18,column:50},end:{line:18,column:151}},{start:{line:18,column:50},end:{line:18,column:151}}],line:18},"11":{loc:{start:{line:20,column:136},end:{line:20,column:166}},type:"binary-expr",locations:[{start:{line:20,column:136},end:{line:20,column:157}},{start:{line:20,column:161},end:{line:20,column:166}}],line:20},"12":{loc:{start:{line:20,column:200},end:{line:20,column:254}},type:"if",locations:[{start:{line:20,column:200},end:{line:20,column:254}},{start:{line:20,column:200},end:{line:20,column:254}}],line:20},"13":{loc:{start:{line:22,column:62},end:{line:22,column:131}},type:"if",locations:[{start:{line:22,column:62},end:{line:22,column:131}},{start:{line:22,column:62},end:{line:22,column:131}}],line:22},"14":{loc:{start:{line:22,column:132},end:{line:22,column:193}},type:"if",locations:[{start:{line:22,column:132},end:{line:22,column:193}},{start:{line:22,column:132},end:{line:22,column:193}}],line:22},"15":{loc:{start:{line:111,column:6},end:{line:113,column:7}},type:"if",locations:[{start:{line:111,column:6},end:{line:113,column:7}},{start:{line:111,column:6},end:{line:113,column:7}}],line:111}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/Message.js"],names:["Message","snapData","roomId","values","Object","assign","val","uid","name","text","from","_created","newText","DataSync","update","then","catch","Log","r","remove","room","cache","user","Promise","reject","Error","data","ts","push","pushRef","get"],mappings:";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;AAEA;;;;IAIqBA,O;;;AACnB;;;;;;AAMA,mBAAYC,QAAZ,EAAsBC,MAAtB,EAA8B;AAAA;;AAC5B,QAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,QAAQ,CAACK,GAAT,EAAlB,CAAf;AACA;;;;;AAIA,SAAKC,GAAL,GAAWN,QAAQ,CAACO,IAAT,EAAX;AACA;;;;;AAIA,SAAKN,MAAL,GAAcA,MAAd;AACA;;;;;AAIA,SAAKO,IAAL,GAAYN,MAAM,CAACM,IAAnB;AACA;;;;;AAIA,SAAKC,IAAL,GAAYP,MAAM,CAACO,IAAnB;AACA;;;;;AAIA,SAAKC,QAAL,GAAgBR,MAAM,CAACQ,QAAvB;AACD;AAED;;;;;;;;;yBAKKC,O,EAAS;AAAA;;AACZ,aAAOC,QAAQ,CAACC,MAAT,kBAA0B,KAAKZ,MAA/B,uBAAkD,KAAKK,GAAvD,GAA8D;AAAEE,QAAAA,IAAI,EAAEG;AAAR,OAA9D,EACJG,IADI,CACC,YAAM;AACV,QAAA,KAAI,CAACN,IAAL,GAAYG,OAAZ;AACA,eAAO,KAAP;AACD,OAJI,EAKJI,KALI,CAKEC,GAAG,CAACC,CAAJ,CAAM,cAAN,CALF,CAAP;AAMD;AAED;;;;;;;6BAIS;AACP,aAAOL,QAAQ,CAACM,MAAT,kBAA0B,KAAKjB,MAA/B,uBAAkD,KAAKK,GAAvD,GACJS,KADI,CACEC,GAAG,CAACC,CAAJ,CAAM,gBAAN,CADF,CAAP;AAED;AAED;;;;;;;;;yBAMYE,I,EAAMX,I,EAAM;AACtB,UAAI,CAACY,eAAMC,IAAX,EAAiB;AACf,eAAOC,OAAO,CAACC,MAAR,CACL,IAAIC,KAAJ,CAAU,mEAAV,CADK,CAAP;AAGD;;AACD,UAAMC,IAAI,GAAG;AACXhB,QAAAA,IAAI,EAAEW,eAAMC,IAAN,CAAWf,GADN;AAEXI,QAAAA,QAAQ,EAAEE,QAAQ,CAACc,EAAT,EAFC;AAGXlB,QAAAA,IAAI,EAAJA;AAHW,OAAb;AAKA,aAAOI,QAAQ,CAACe,IAAT,mBAAyBR,IAAI,CAACb,GAA9B,gBAA8CmB,IAA9C,EACJX,IADI,CACC,UAAAc,OAAO;AAAA,eAAIhB,QAAQ,CAACiB,GAAT,mBAAwBV,IAAI,CAACb,GAA7B,uBAA6CsB,OAAO,CAACrB,IAAR,EAA7C,EAAJ;AAAA,OADR,EAEJO,IAFI,CAEC,UAAAd,QAAQ;AAAA,eAAI,IAAID,OAAJ,CAAYC,QAAZ,EAAsBmB,IAAI,CAACb,GAA3B,CAAJ;AAAA,OAFT,EAGJS,KAHI,CAGEC,GAAG,CAACC,CAAJ,CAAM,cAAN,CAHF,CAAP;AAID",sourcesContent:["import * as DataSync from './util/DataSync';\nimport * as Log from './util/Log';\n\nimport cache from './util/cache';\n\n/**\n * Instant Message\n * @public\n */\nexport default class Message {\n  /**\n   * Create a message\n   * @param {Webcom/api.DataSnapshot|Object} snapData The data snapshot\n   * @param {string} roomId The message's room id\n   * @access protected\n   */\n  constructor(snapData, roomId) {\n    const values = Object.assign({}, snapData.val());\n    /**\n     * The message unique id\n     * @type {string}\n     */\n    this.uid = snapData.name();\n    /**\n     * The room uid\n     * @type {string}\n     */\n    this.roomId = roomId;\n    /**\n     * The message\n     * @type {string}\n     */\n    this.text = values.text;\n    /**\n     * The message sender\n     * @type {string}\n     */\n    this.from = values.from;\n    /**\n     * Joined date\n     * @type {number}\n     */\n    this._created = values._created;\n  }\n\n  /**\n   * Edit the text message. Only the sender or moderator/owner of the room can edit a message.\n   * @param {string} newText The new message\n   * @returns {Promise<Message>}\n   */\n  edit(newText) {\n    return DataSync.update(`/rooms/${this.roomId}/messages/${this.uid}`, { text: newText })\n      .then(() => {\n        this.text = newText;\n        return this;\n      })\n      .catch(Log.r('Message~edit'));\n  }\n\n  /**\n   * Remove the text message. Only the sender or moderator/owner of the room can remove a message.\n   * @returns {Promise}\n   */\n  remove() {\n    return DataSync.remove(`/rooms/${this.roomId}/messages/${this.uid}`)\n      .catch(Log.r('Message~remove'));\n  }\n\n  /**\n   *\n   * @param {Room} room The room to send the message to\n   * @param {string} text The message\n   * @return {Promise<Message>}\n   */\n  static send(room, text) {\n    if (!cache.user) {\n      return Promise.reject(\n        new Error('Cannot send a message to the Room without a User being logged in.')\n      );\n    }\n    const data = {\n      from: cache.user.uid,\n      _created: DataSync.ts(),\n      text\n    };\n    return DataSync.push(`_/rooms/${room.uid}/messages`, data)\n      .then(pushRef => DataSync.get(`_/rooms/${room.uid}/messages/${pushRef.name()}`))\n      .then(snapData => new Message(snapData, room.uid))\n      .catch(Log.r('Message#send'));\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1ox678h3gg.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1ox678h3gg.s[1]++;exports.default=void 0;var DataSync=(cov_1ox678h3gg.s[2]++,_interopRequireWildcard(__webpack_require__(/*! ./util/DataSync */ "./src/core/util/DataSync.js")));var Log=(cov_1ox678h3gg.s[3]++,_interopRequireWildcard(__webpack_require__(/*! ./util/Log */ "./src/core/util/Log.js")));var _cache=(cov_1ox678h3gg.s[4]++,_interopRequireDefault(__webpack_require__(/*! ./util/cache */ "./src/core/util/cache.js")));function _interopRequireDefault(obj){cov_1ox678h3gg.f[0]++;cov_1ox678h3gg.s[5]++;return(cov_1ox678h3gg.b[1][0]++,obj)&&(cov_1ox678h3gg.b[1][1]++,obj.__esModule)?(cov_1ox678h3gg.b[0][0]++,obj):(cov_1ox678h3gg.b[0][1]++,{default:obj});}function _interopRequireWildcard(obj){cov_1ox678h3gg.f[1]++;cov_1ox678h3gg.s[6]++;if((cov_1ox678h3gg.b[3][0]++,obj)&&(cov_1ox678h3gg.b[3][1]++,obj.__esModule)){cov_1ox678h3gg.b[2][0]++;cov_1ox678h3gg.s[7]++;return obj;}else{cov_1ox678h3gg.b[2][1]++;var newObj=(cov_1ox678h3gg.s[8]++,{});cov_1ox678h3gg.s[9]++;if(obj!=null){cov_1ox678h3gg.b[4][0]++;cov_1ox678h3gg.s[10]++;for(var key in obj){cov_1ox678h3gg.s[11]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_1ox678h3gg.b[5][0]++;var desc=(cov_1ox678h3gg.s[12]++,(cov_1ox678h3gg.b[7][0]++,Object.defineProperty)&&(cov_1ox678h3gg.b[7][1]++,Object.getOwnPropertyDescriptor)?(cov_1ox678h3gg.b[6][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_1ox678h3gg.b[6][1]++,{}));cov_1ox678h3gg.s[13]++;if((cov_1ox678h3gg.b[9][0]++,desc.get)||(cov_1ox678h3gg.b[9][1]++,desc.set)){cov_1ox678h3gg.b[8][0]++;cov_1ox678h3gg.s[14]++;Object.defineProperty(newObj,key,desc);}else{cov_1ox678h3gg.b[8][1]++;cov_1ox678h3gg.s[15]++;newObj[key]=obj[key];}}else{cov_1ox678h3gg.b[5][1]++;}}}else{cov_1ox678h3gg.b[4][1]++;}cov_1ox678h3gg.s[16]++;newObj.default=obj;cov_1ox678h3gg.s[17]++;return newObj;}}function _classCallCheck(instance,Constructor){cov_1ox678h3gg.f[2]++;cov_1ox678h3gg.s[18]++;if(!(instance instanceof Constructor)){cov_1ox678h3gg.b[10][0]++;cov_1ox678h3gg.s[19]++;throw new TypeError("Cannot call a class as a function");}else{cov_1ox678h3gg.b[10][1]++;}}function _defineProperties(target,props){cov_1ox678h3gg.f[3]++;cov_1ox678h3gg.s[20]++;for(var i=0;i<props.length;i++){var descriptor=(cov_1ox678h3gg.s[21]++,props[i]);cov_1ox678h3gg.s[22]++;descriptor.enumerable=(cov_1ox678h3gg.b[11][0]++,descriptor.enumerable)||(cov_1ox678h3gg.b[11][1]++,false);cov_1ox678h3gg.s[23]++;descriptor.configurable=true;cov_1ox678h3gg.s[24]++;if("value"in descriptor){cov_1ox678h3gg.b[12][0]++;cov_1ox678h3gg.s[25]++;descriptor.writable=true;}else{cov_1ox678h3gg.b[12][1]++;}cov_1ox678h3gg.s[26]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_1ox678h3gg.f[4]++;cov_1ox678h3gg.s[27]++;if(protoProps){cov_1ox678h3gg.b[13][0]++;cov_1ox678h3gg.s[28]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_1ox678h3gg.b[13][1]++;}cov_1ox678h3gg.s[29]++;if(staticProps){cov_1ox678h3gg.b[14][0]++;cov_1ox678h3gg.s[30]++;_defineProperties(Constructor,staticProps);}else{cov_1ox678h3gg.b[14][1]++;}cov_1ox678h3gg.s[31]++;return Constructor;}var Message=(cov_1ox678h3gg.s[32]++,function(){cov_1ox678h3gg.f[5]++;function Message(snapData,roomId){cov_1ox678h3gg.f[6]++;cov_1ox678h3gg.s[33]++;_classCallCheck(this,Message);var values=(cov_1ox678h3gg.s[34]++,Object.assign({},snapData.val()));cov_1ox678h3gg.s[35]++;this.uid=snapData.name();cov_1ox678h3gg.s[36]++;this.roomId=roomId;cov_1ox678h3gg.s[37]++;this.text=values.text;cov_1ox678h3gg.s[38]++;this.from=values.from;cov_1ox678h3gg.s[39]++;this._created=values._created;}cov_1ox678h3gg.s[40]++;_createClass(Message,[{key:"edit",value:function edit(newText){cov_1ox678h3gg.f[7]++;var _this=(cov_1ox678h3gg.s[41]++,this);cov_1ox678h3gg.s[42]++;return DataSync.update("/rooms/".concat(this.roomId,"/messages/").concat(this.uid),{text:newText}).then(function(){cov_1ox678h3gg.f[8]++;cov_1ox678h3gg.s[43]++;_this.text=newText;cov_1ox678h3gg.s[44]++;return _this;}).catch(Log.r('Message~edit'));}},{key:"remove",value:function remove(){cov_1ox678h3gg.f[9]++;cov_1ox678h3gg.s[45]++;return DataSync.remove("/rooms/".concat(this.roomId,"/messages/").concat(this.uid)).catch(Log.r('Message~remove'));}}],[{key:"send",value:function send(room,text){cov_1ox678h3gg.f[10]++;cov_1ox678h3gg.s[46]++;if(!_cache.default.user){cov_1ox678h3gg.b[15][0]++;cov_1ox678h3gg.s[47]++;return Promise.reject(new Error('Cannot send a message to the Room without a User being logged in.'));}else{cov_1ox678h3gg.b[15][1]++;}var data=(cov_1ox678h3gg.s[48]++,{from:_cache.default.user.uid,_created:DataSync.ts(),text:text});cov_1ox678h3gg.s[49]++;return DataSync.push("_/rooms/".concat(room.uid,"/messages"),data).then(function(pushRef){cov_1ox678h3gg.f[11]++;cov_1ox678h3gg.s[50]++;return DataSync.get("_/rooms/".concat(room.uid,"/messages/").concat(pushRef.name()));}).then(function(snapData){cov_1ox678h3gg.f[12]++;cov_1ox678h3gg.s[51]++;return new Message(snapData,room.uid);}).catch(Log.r('Message#send'));}}]);cov_1ox678h3gg.s[52]++;return Message;}());cov_1ox678h3gg.s[53]++;exports.default=Message;

/***/ }),

/***/ "./src/core/Participant.js":
/*!*********************************!*\
  !*** ./src/core/Participant.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_1asytdzsu6=function(){var path="/home/florent/Projets/reach/src/core/Participant.js",hash="5e9a35dafb211204f5389988c2826ebf666ac43c",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/Participant.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:50},end:{line:8,column:151}},"3":{start:{line:8,column:92},end:{line:8,column:149}},"4":{start:{line:20,column:0},end:{line:61,column:1}},"5":{start:{line:21,column:2},end:{line:21,column:37}},"6":{start:{line:23,column:15},end:{line:23,column:48}},"7":{start:{line:29,column:2},end:{line:29,column:29}},"8":{start:{line:38,column:2},end:{line:38,column:26}},"9":{start:{line:48,column:2},end:{line:48,column:30}},"10":{start:{line:54,column:2},end:{line:54,column:32}},"11":{start:{line:60,column:2},end:{line:60,column:36}},"12":{start:{line:63,column:0},end:{line:63,column:30}}},fnMap:{"0":{name:"_classCallCheck",decl:{start:{line:8,column:9},end:{line:8,column:24}},loc:{start:{line:8,column:48},end:{line:8,column:153}},line:8},"1":{name:"Participant",decl:{start:{line:20,column:9},end:{line:20,column:20}},loc:{start:{line:20,column:31},end:{line:61,column:1}},line:20}},branchMap:{"0":{loc:{start:{line:8,column:50},end:{line:8,column:151}},type:"if",locations:[{start:{line:8,column:50},end:{line:8,column:151}},{start:{line:8,column:50},end:{line:8,column:151}}],line:8}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0},b:{"0":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/Participant.js"],names:["Participant","snapData","values","Object","assign","val","uid","name","role","status","_joined","userAgent"],mappings:";;;;;;;;;AAAA;;;;IAIqBA,W;AACnB;;;;;AAKA,qBAAYC,QAAZ,EAAsB;AAAA;;AACpB,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,QAAQ,CAACI,GAAT,EAAlB,CAAf;AACA;;;;;AAIA,OAAKC,GAAL,GAAWL,QAAQ,CAACM,IAAT,EAAX;AACA;;;;;;;;AAOA,OAAKC,IAAL,GAAYN,MAAM,CAACM,IAAnB;AACA;;;;;;;;;AAQA,OAAKC,MAAL,GAAcP,MAAM,CAACO,MAArB;AACA;;;;;AAIA,OAAKC,OAAL,GAAeR,MAAM,CAACQ,OAAtB;AACA;;;;;AAIA,OAAKC,SAAL,GAAiBT,MAAM,CAACS,SAAxB;AACD,C",sourcesContent:["/**\n * {@link Room} participant\n * @public\n */\nexport default class Participant {\n  /**\n   * Create a participant\n   * @param {Webcom/api.DataSnapshot|Object} snapData The data snapshot\n   * @access protected\n   */\n  constructor(snapData) {\n    const values = Object.assign({}, snapData.val());\n    /**\n     * The participant unique id\n     * @type {string}\n     */\n    this.uid = snapData.name();\n    /**\n     * The Participant's role. Can be:\n     * - OWNER: the owner/creator of the {@link Room}\n     * - MODERATOR: a participant with {@link Room} management Rights\n     * - NONE: basic participant\n     * @type {string}\n     */\n    this.role = values.role;\n    /**\n     * The participant status Can be:\n     * - NOT_CONNECTED: the participant did not accept the invitation yet and/or did not\n     * join the {@link Room} yet\n     * - CONNECTED: the participant is in the {@link Room}\n     * - WAS_CONNECTED: the participant left the {@link Room}\n     * @type {string}\n     */\n    this.status = values.status;\n    /**\n     * Joined date\n     * @type {number}\n     */\n    this._joined = values._joined;\n    /**\n     * Participant's userAgent\n     * @type {string}\n     */\n    this.userAgent = values.userAgent;\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1asytdzsu6.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1asytdzsu6.s[1]++;exports.default=void 0;function _classCallCheck(instance,Constructor){cov_1asytdzsu6.f[0]++;cov_1asytdzsu6.s[2]++;if(!(instance instanceof Constructor)){cov_1asytdzsu6.b[0][0]++;cov_1asytdzsu6.s[3]++;throw new TypeError("Cannot call a class as a function");}else{cov_1asytdzsu6.b[0][1]++;}}cov_1asytdzsu6.s[4]++;var Participant=function Participant(snapData){cov_1asytdzsu6.f[1]++;cov_1asytdzsu6.s[5]++;_classCallCheck(this,Participant);var values=(cov_1asytdzsu6.s[6]++,Object.assign({},snapData.val()));cov_1asytdzsu6.s[7]++;this.uid=snapData.name();cov_1asytdzsu6.s[8]++;this.role=values.role;cov_1asytdzsu6.s[9]++;this.status=values.status;cov_1asytdzsu6.s[10]++;this._joined=values._joined;cov_1asytdzsu6.s[11]++;this.userAgent=values.userAgent;};cov_1asytdzsu6.s[12]++;exports.default=Participant;

/***/ }),

/***/ "./src/core/Room.js":
/*!**************************!*\
  !*** ./src/core/Room.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_kjwtkr9ny=function(){var path="/home/florent/Projets/reach/src/core/Room.js",hash="6514654e37ac0be2f90bdb1f85546f2b98a05dfe",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/Room.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:17},end:{line:8,column:44}},"3":{start:{line:10,column:15},end:{line:10,column:66}},"4":{start:{line:12,column:13},end:{line:12,column:60}},"5":{start:{line:14,column:19},end:{line:14,column:67}},"6":{start:{line:16,column:15},end:{line:16,column:59}},"7":{start:{line:18,column:13},end:{line:18,column:62}},"8":{start:{line:20,column:14},end:{line:20,column:57}},"9":{start:{line:22,column:13},end:{line:22,column:70}},"10":{start:{line:24,column:10},end:{line:24,column:56}},"11":{start:{line:26,column:39},end:{line:26,column:93}},"12":{start:{line:28,column:40},end:{line:28,column:470}},"13":{start:{line:28,column:69},end:{line:28,column:80}},"14":{start:{line:28,column:103},end:{line:28,column:105}},"15":{start:{line:28,column:107},end:{line:28,column:431}},"16":{start:{line:28,column:126},end:{line:28,column:429}},"17":{start:{line:28,column:149},end:{line:28,column:427}},"18":{start:{line:28,column:214},end:{line:28,column:319}},"19":{start:{line:28,column:321},end:{line:28,column:425}},"20":{start:{line:28,column:349},end:{line:28,column:390}},"21":{start:{line:28,column:400},end:{line:28,column:423}},"22":{start:{line:28,column:432},end:{line:28,column:453}},"23":{start:{line:28,column:454},end:{line:28,column:468}},"24":{start:{line:30,column:50},end:{line:30,column:151}},"25":{start:{line:30,column:92},end:{line:30,column:149}},"26":{start:{line:32,column:44},end:{line:32,column:315}},"27":{start:{line:32,column:102},end:{line:32,column:110}},"28":{start:{line:32,column:112},end:{line:32,column:167}},"29":{start:{line:32,column:168},end:{line:32,column:199}},"30":{start:{line:32,column:200},end:{line:32,column:254}},"31":{start:{line:32,column:227},end:{line:32,column:254}},"32":{start:{line:32,column:255},end:{line:32,column:313}},"33":{start:{line:34,column:62},end:{line:34,column:131}},"34":{start:{line:34,column:78},end:{line:34,column:131}},"35":{start:{line:34,column:132},end:{line:34,column:193}},"36":{start:{line:34,column:149},end:{line:34,column:193}},"37":{start:{line:34,column:194},end:{line:34,column:213}},"38":{start:{line:36,column:16},end:{line:64,column:1}},"39":{start:{line:37,column:12},end:{line:37,column:56}},"40":{start:{line:39,column:2},end:{line:61,column:3}},"41":{start:{line:40,column:22},end:{line:44,column:5}},"42":{start:{line:46,column:4},end:{line:48,column:5}},"43":{start:{line:47,column:6},end:{line:47,column:30}},"44":{start:{line:50,column:4},end:{line:50,column:97}},"45":{start:{line:51,column:4},end:{line:54,column:7}},"46":{start:{line:53,column:6},end:{line:53,column:18}},"47":{start:{line:63,column:2},end:{line:63,column:63}},"48":{start:{line:73,column:0},end:{line:557,column:3}},"49":{start:{line:80,column:4},end:{line:80,column:32}},"50":{start:{line:82,column:17},end:{line:82,column:25}},"51":{start:{line:84,column:4},end:{line:89,column:5}},"52":{start:{line:86,column:6},end:{line:88,column:9}},"53":{start:{line:96,column:4},end:{line:96,column:26}},"54":{start:{line:102,column:4},end:{line:102,column:28}},"55":{start:{line:108,column:4},end:{line:108,column:26}},"56":{start:{line:114,column:4},end:{line:114,column:30}},"57":{start:{line:122,column:4},end:{line:122,column:32}},"58":{start:{line:128,column:4},end:{line:128,column:36}},"59":{start:{line:134,column:4},end:{line:134,column:30}},"60":{start:{line:140,column:4},end:{line:140,column:25}},"61":{start:{line:149,column:2},end:{line:554,column:6}},"62":{start:{line:152,column:6},end:{line:152,column:105}},"63":{start:{line:163,column:6},end:{line:163,column:97}},"64":{start:{line:174,column:18},end:{line:174,column:22}},"65":{start:{line:176,column:6},end:{line:178,column:7}},"66":{start:{line:177,column:8},end:{line:177,column:99}},"67":{start:{line:180,column:6},end:{line:204,column:9}},"68":{start:{line:181,column:21},end:{line:181,column:35}},"69":{start:{line:182,column:8},end:{line:182,column:40}},"70":{start:{line:184,column:8},end:{line:191,column:9}},"71":{start:{line:185,column:10},end:{line:190,column:13}},"72":{start:{line:186,column:12},end:{line:189,column:28}},"73":{start:{line:193,column:8},end:{line:193,column:18}},"74":{start:{line:195,column:8},end:{line:197,column:11}},"75":{start:{line:196,column:10},end:{line:196,column:119}},"76":{start:{line:199,column:8},end:{line:199,column:130}},"77":{start:{line:201,column:8},end:{line:203,column:11}},"78":{start:{line:202,column:10},end:{line:202,column:33}},"79":{start:{line:216,column:6},end:{line:216,column:67}},"80":{start:{line:227,column:6},end:{line:227,column:69}},"81":{start:{line:242,column:19},end:{line:242,column:23}},"82":{start:{line:244,column:17},end:{line:244,column:100}},"83":{start:{line:245,column:20},end:{line:245,column:67}},"84":{start:{line:247,column:18},end:{line:249,column:7}},"85":{start:{line:248,column:8},end:{line:248,column:80}},"86":{start:{line:251,column:18},end:{line:254,column:7}},"87":{start:{line:256,column:6},end:{line:282,column:9}},"88":{start:{line:257,column:8},end:{line:257,column:48}},"89":{start:{line:260,column:8},end:{line:262,column:12}},"90":{start:{line:261,column:10},end:{line:261,column:61}},"91":{start:{line:264,column:32},end:{line:266,column:9}},"92":{start:{line:265,column:10},end:{line:265,column:101}},"93":{start:{line:268,column:8},end:{line:271,column:11}},"94":{start:{line:269,column:10},end:{line:269,column:60}},"95":{start:{line:270,column:10},end:{line:270,column:60}},"96":{start:{line:272,column:8},end:{line:275,column:10}},"97":{start:{line:277,column:8},end:{line:277,column:32}},"98":{start:{line:278,column:8},end:{line:280,column:11}},"99":{start:{line:279,column:10},end:{line:279,column:99}},"100":{start:{line:281,column:8},end:{line:281,column:33}},"101":{start:{line:308,column:19},end:{line:308,column:23}},"102":{start:{line:310,column:17},end:{line:310,column:48}},"103":{start:{line:311,column:16},end:{line:311,column:42}},"104":{start:{line:313,column:6},end:{line:341,column:7}},"105":{start:{line:314,column:28},end:{line:332,column:9}},"106":{start:{line:315,column:10},end:{line:331,column:11}},"107":{start:{line:317,column:12},end:{line:317,column:86}},"108":{start:{line:318,column:12},end:{line:318,column:58}},"109":{start:{line:319,column:17},end:{line:331,column:11}},"110":{start:{line:320,column:29},end:{line:323,column:30}},"111":{start:{line:325,column:12},end:{line:330,column:13}},"112":{start:{line:326,column:33},end:{line:326,column:77}},"113":{start:{line:328,column:14},end:{line:328,column:65}},"114":{start:{line:329,column:14},end:{line:329,column:37}},"115":{start:{line:334,column:8},end:{line:334,column:64}},"116":{start:{line:336,column:8},end:{line:338,column:9}},"117":{start:{line:337,column:10},end:{line:337,column:38}},"118":{start:{line:340,column:8},end:{line:340,column:51}},"119":{start:{line:352,column:6},end:{line:352,column:50}},"120":{start:{line:367,column:6},end:{line:371,column:9}},"121":{start:{line:373,column:6},end:{line:375,column:9}},"122":{start:{line:374,column:8},end:{line:374,column:38}},"123":{start:{line:390,column:19},end:{line:390,column:23}},"124":{start:{line:392,column:6},end:{line:396,column:9}},"125":{start:{line:397,column:6},end:{line:400,column:9}},"126":{start:{line:398,column:8},end:{line:398,column:41}},"127":{start:{line:399,column:8},end:{line:399,column:27}},"128":{start:{line:410,column:6},end:{line:410,column:34}},"129":{start:{line:411,column:6},end:{line:411,column:56}},"130":{start:{line:421,column:6},end:{line:421,column:31}},"131":{start:{line:423,column:6},end:{line:425,column:7}},"132":{start:{line:424,column:8},end:{line:424,column:88}},"133":{start:{line:427,column:6},end:{line:427,column:55}},"134":{start:{line:438,column:19},end:{line:438,column:23}},"135":{start:{line:440,column:6},end:{line:442,column:7}},"136":{start:{line:441,column:8},end:{line:441,column:89}},"137":{start:{line:444,column:6},end:{line:444,column:32}},"138":{start:{line:446,column:16},end:{line:446,column:60}},"139":{start:{line:448,column:6},end:{line:448,column:107}},"140":{start:{line:450,column:6},end:{line:452,column:9}},"141":{start:{line:451,column:8},end:{line:451,column:63}},"142":{start:{line:454,column:6},end:{line:458,column:9}},"143":{start:{line:455,column:8},end:{line:457,column:11}},"144":{start:{line:456,column:10},end:{line:456,column:37}},"145":{start:{line:460,column:6},end:{line:464,column:9}},"146":{start:{line:461,column:8},end:{line:463,column:11}},"147":{start:{line:462,column:10},end:{line:462,column:44}},"148":{start:{line:466,column:6},end:{line:467,column:34}},"149":{start:{line:477,column:19},end:{line:477,column:23}},"150":{start:{line:479,column:6},end:{line:479,column:32}},"151":{start:{line:480,column:6},end:{line:480,column:38}},"152":{start:{line:481,column:6},end:{line:488,column:36}},"153":{start:{line:482,column:8},end:{line:485,column:11}},"154":{start:{line:487,column:8},end:{line:487,column:62}},"155":{start:{line:502,column:18},end:{line:502,column:90}},"156":{start:{line:503,column:23},end:{line:503,column:96}},"157":{start:{line:505,column:6},end:{line:507,column:7}},"158":{start:{line:506,column:8},end:{line:506,column:90}},"159":{start:{line:509,column:25},end:{line:513,column:7}},"160":{start:{line:514,column:29},end:{line:518,column:22}},"161":{start:{line:519,column:17},end:{line:519,column:21}},"162":{start:{line:522,column:16},end:{line:522,column:48}},"163":{start:{line:523,column:16},end:{line:523,column:48}},"164":{start:{line:524,column:6},end:{line:534,column:37}},"165":{start:{line:526,column:8},end:{line:528,column:30}},"166":{start:{line:529,column:8},end:{line:529,column:47}},"167":{start:{line:530,column:8},end:{line:530,column:83}},"168":{start:{line:533,column:8},end:{line:533,column:49}},"169":{start:{line:546,column:6},end:{line:552,column:9}},"170":{start:{line:547,column:8},end:{line:549,column:9}},"171":{start:{line:548,column:10},end:{line:548,column:41}},"172":{start:{line:551,column:8},end:{line:551,column:20}},"173":{start:{line:556,column:2},end:{line:556,column:14}},"174":{start:{line:559,column:0},end:{line:559,column:23}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:26,column:9},end:{line:26,column:31}},loc:{start:{line:26,column:37},end:{line:26,column:95}},line:26},"1":{name:"_interopRequireWildcard",decl:{start:{line:28,column:9},end:{line:28,column:32}},loc:{start:{line:28,column:38},end:{line:28,column:472}},line:28},"2":{name:"_classCallCheck",decl:{start:{line:30,column:9},end:{line:30,column:24}},loc:{start:{line:30,column:48},end:{line:30,column:153}},line:30},"3":{name:"_defineProperties",decl:{start:{line:32,column:9},end:{line:32,column:26}},loc:{start:{line:32,column:42},end:{line:32,column:317}},line:32},"4":{name:"_createClass",decl:{start:{line:34,column:9},end:{line:34,column:21}},loc:{start:{line:34,column:60},end:{line:34,column:215}},line:34},"5":{name:"_joinRoom",decl:{start:{line:36,column:25},end:{line:36,column:34}},loc:{start:{line:36,column:47},end:{line:64,column:1}},line:36},"6":{name:"(anonymous_6)",decl:{start:{line:52,column:89},end:{line:52,column:90}},loc:{start:{line:52,column:101},end:{line:54,column:5}},line:52},"7":{name:"(anonymous_7)",decl:{start:{line:73,column:0},end:{line:73,column:1}},loc:{start:{line:73,column:12},end:{line:557,column:1}},line:73},"8":{name:"Room",decl:{start:{line:79,column:11},end:{line:79,column:15}},loc:{start:{line:79,column:35},end:{line:141,column:3}},line:79},"9":{name:"participants",decl:{start:{line:151,column:20},end:{line:151,column:32}},loc:{start:{line:151,column:35},end:{line:153,column:5}},line:151},"10":{name:"messages",decl:{start:{line:162,column:20},end:{line:162,column:28}},loc:{start:{line:162,column:31},end:{line:164,column:5}},line:162},"11":{name:"_streams",decl:{start:{line:173,column:20},end:{line:173,column:28}},loc:{start:{line:173,column:43},end:{line:205,column:5}},line:173},"12":{name:"(anonymous_12)",decl:{start:{line:180,column:72},end:{line:180,column:73}},loc:{start:{line:180,column:92},end:{line:194,column:7}},line:180},"13":{name:"(anonymous_13)",decl:{start:{line:185,column:41},end:{line:185,column:42}},loc:{start:{line:185,column:56},end:{line:190,column:11}},line:185},"14":{name:"(anonymous_14)",decl:{start:{line:194,column:14},end:{line:194,column:15}},loc:{start:{line:194,column:33},end:{line:198,column:7}},line:194},"15":{name:"(anonymous_15)",decl:{start:{line:195,column:30},end:{line:195,column:31}},loc:{start:{line:195,column:48},end:{line:197,column:9}},line:195},"16":{name:"(anonymous_16)",decl:{start:{line:198,column:14},end:{line:198,column:15}},loc:{start:{line:198,column:33},end:{line:200,column:7}},line:198},"17":{name:"(anonymous_17)",decl:{start:{line:200,column:14},end:{line:200,column:15}},loc:{start:{line:200,column:33},end:{line:204,column:7}},line:200},"18":{name:"(anonymous_18)",decl:{start:{line:201,column:30},end:{line:201,column:31}},loc:{start:{line:201,column:48},end:{line:203,column:9}},line:201},"19":{name:"localStreams",decl:{start:{line:215,column:20},end:{line:215,column:32}},loc:{start:{line:215,column:35},end:{line:217,column:5}},line:215},"20":{name:"remoteStreams",decl:{start:{line:226,column:20},end:{line:226,column:33}},loc:{start:{line:226,column:36},end:{line:228,column:5}},line:226},"21":{name:"invite",decl:{start:{line:241,column:20},end:{line:241,column:26}},loc:{start:{line:241,column:34},end:{line:283,column:5}},line:241},"22":{name:"_path",decl:{start:{line:247,column:27},end:{line:247,column:32}},loc:{start:{line:247,column:39},end:{line:249,column:7}},line:247},"23":{name:"(anonymous_23)",decl:{start:{line:256,column:35},end:{line:256,column:36}},loc:{start:{line:256,column:51},end:{line:258,column:7}},line:256},"24":{name:"(anonymous_24)",decl:{start:{line:259,column:12},end:{line:259,column:13}},loc:{start:{line:259,column:24},end:{line:263,column:7}},line:259},"25":{name:"(anonymous_25)",decl:{start:{line:260,column:37},end:{line:260,column:38}},loc:{start:{line:260,column:53},end:{line:262,column:9}},line:260},"26":{name:"(anonymous_26)",decl:{start:{line:263,column:14},end:{line:263,column:15}},loc:{start:{line:263,column:33},end:{line:276,column:7}},line:263},"27":{name:"removeParticipant",decl:{start:{line:264,column:41},end:{line:264,column:58}},loc:{start:{line:264,column:67},end:{line:266,column:9}},line:264},"28":{name:"(anonymous_28)",decl:{start:{line:268,column:24},end:{line:268,column:25}},loc:{start:{line:268,column:42},end:{line:271,column:9}},line:268},"29":{name:"(anonymous_29)",decl:{start:{line:276,column:15},end:{line:276,column:16}},loc:{start:{line:276,column:28},end:{line:282,column:7}},line:276},"30":{name:"(anonymous_30)",decl:{start:{line:278,column:22},end:{line:278,column:23}},loc:{start:{line:278,column:38},end:{line:280,column:9}},line:278},"31":{name:"on",decl:{start:{line:307,column:20},end:{line:307,column:22}},loc:{start:{line:307,column:56},end:{line:342,column:5}},line:307},"32":{name:"typedCallback",decl:{start:{line:314,column:37},end:{line:314,column:50}},loc:{start:{line:314,column:61},end:{line:332,column:9}},line:314},"33":{name:"sendMessage",decl:{start:{line:351,column:20},end:{line:351,column:31}},loc:{start:{line:351,column:41},end:{line:353,column:5}},line:351},"34":{name:"share",decl:{start:{line:366,column:20},end:{line:366,column:25}},loc:{start:{line:366,column:67},end:{line:376,column:5}},line:366},"35":{name:"(anonymous_35)",decl:{start:{line:373,column:98},end:{line:373,column:99}},loc:{start:{line:373,column:116},end:{line:375,column:7}},line:373},"36":{name:"getLocalVideo",decl:{start:{line:389,column:20},end:{line:389,column:33}},loc:{start:{line:389,column:75},end:{line:401,column:5}},line:389},"37":{name:"(anonymous_37)",decl:{start:{line:397,column:98},end:{line:397,column:99}},loc:{start:{line:397,column:121},end:{line:400,column:7}},line:397},"38":{name:"publish",decl:{start:{line:409,column:20},end:{line:409,column:27}},loc:{start:{line:409,column:30},end:{line:412,column:5}},line:409},"39":{name:"join",decl:{start:{line:420,column:20},end:{line:420,column:24}},loc:{start:{line:420,column:27},end:{line:428,column:5}},line:420},"40":{name:"leave",decl:{start:{line:437,column:20},end:{line:437,column:25}},loc:{start:{line:437,column:28},end:{line:468,column:5}},line:437},"41":{name:"(anonymous_41)",decl:{start:{line:450,column:43},end:{line:450,column:44}},loc:{start:{line:450,column:60},end:{line:452,column:7}},line:450},"42":{name:"(anonymous_42)",decl:{start:{line:454,column:31},end:{line:454,column:32}},loc:{start:{line:454,column:55},end:{line:458,column:7}},line:454},"43":{name:"(anonymous_43)",decl:{start:{line:455,column:36},end:{line:455,column:37}},loc:{start:{line:455,column:59},end:{line:457,column:9}},line:455},"44":{name:"(anonymous_44)",decl:{start:{line:460,column:32},end:{line:460,column:33}},loc:{start:{line:460,column:57},end:{line:464,column:7}},line:460},"45":{name:"(anonymous_45)",decl:{start:{line:461,column:37},end:{line:461,column:38}},loc:{start:{line:461,column:61},end:{line:463,column:9}},line:461},"46":{name:"close",decl:{start:{line:476,column:20},end:{line:476,column:25}},loc:{start:{line:476,column:28},end:{line:489,column:5}},line:476},"47":{name:"(anonymous_47)",decl:{start:{line:481,column:31},end:{line:481,column:32}},loc:{start:{line:481,column:43},end:{line:486,column:7}},line:481},"48":{name:"(anonymous_48)",decl:{start:{line:486,column:14},end:{line:486,column:15}},loc:{start:{line:486,column:26},end:{line:488,column:7}},line:486},"49":{name:"create",decl:{start:{line:501,column:20},end:{line:501,column:26}},loc:{start:{line:501,column:33},end:{line:535,column:5}},line:501},"50":{name:"(anonymous_50)",decl:{start:{line:525,column:12},end:{line:525,column:13}},loc:{start:{line:525,column:31},end:{line:531,column:7}},line:525},"51":{name:"(anonymous_51)",decl:{start:{line:532,column:12},end:{line:532,column:13}},loc:{start:{line:532,column:24},end:{line:534,column:7}},line:532},"52":{name:"get",decl:{start:{line:545,column:20},end:{line:545,column:23}},loc:{start:{line:545,column:29},end:{line:553,column:5}},line:545},"53":{name:"(anonymous_53)",decl:{start:{line:546,column:53},end:{line:546,column:54}},loc:{start:{line:546,column:73},end:{line:552,column:7}},line:546}},branchMap:{"0":{loc:{start:{line:26,column:46},end:{line:26,column:92}},type:"cond-expr",locations:[{start:{line:26,column:70},end:{line:26,column:73}},{start:{line:26,column:76},end:{line:26,column:92}}],line:26},"1":{loc:{start:{line:26,column:46},end:{line:26,column:67}},type:"binary-expr",locations:[{start:{line:26,column:46},end:{line:26,column:49}},{start:{line:26,column:53},end:{line:26,column:67}}],line:26},"2":{loc:{start:{line:28,column:40},end:{line:28,column:470}},type:"if",locations:[{start:{line:28,column:40},end:{line:28,column:470}},{start:{line:28,column:40},end:{line:28,column:470}}],line:28},"3":{loc:{start:{line:28,column:44},end:{line:28,column:65}},type:"binary-expr",locations:[{start:{line:28,column:44},end:{line:28,column:47}},{start:{line:28,column:51},end:{line:28,column:65}}],line:28},"4":{loc:{start:{line:28,column:107},end:{line:28,column:431}},type:"if",locations:[{start:{line:28,column:107},end:{line:28,column:431}},{start:{line:28,column:107},end:{line:28,column:431}}],line:28},"5":{loc:{start:{line:28,column:149},end:{line:28,column:427}},type:"if",locations:[{start:{line:28,column:149},end:{line:28,column:427}},{start:{line:28,column:149},end:{line:28,column:427}}],line:28},"6":{loc:{start:{line:28,column:214},end:{line:28,column:319}},type:"cond-expr",locations:[{start:{line:28,column:273},end:{line:28,column:314}},{start:{line:28,column:317},end:{line:28,column:319}}],line:28},"7":{loc:{start:{line:28,column:214},end:{line:28,column:270}},type:"binary-expr",locations:[{start:{line:28,column:214},end:{line:28,column:235}},{start:{line:28,column:239},end:{line:28,column:270}}],line:28},"8":{loc:{start:{line:28,column:321},end:{line:28,column:425}},type:"if",locations:[{start:{line:28,column:321},end:{line:28,column:425}},{start:{line:28,column:321},end:{line:28,column:425}}],line:28},"9":{loc:{start:{line:28,column:325},end:{line:28,column:345}},type:"binary-expr",locations:[{start:{line:28,column:325},end:{line:28,column:333}},{start:{line:28,column:337},end:{line:28,column:345}}],line:28},"10":{loc:{start:{line:30,column:50},end:{line:30,column:151}},type:"if",locations:[{start:{line:30,column:50},end:{line:30,column:151}},{start:{line:30,column:50},end:{line:30,column:151}}],line:30},"11":{loc:{start:{line:32,column:136},end:{line:32,column:166}},type:"binary-expr",locations:[{start:{line:32,column:136},end:{line:32,column:157}},{start:{line:32,column:161},end:{line:32,column:166}}],line:32},"12":{loc:{start:{line:32,column:200},end:{line:32,column:254}},type:"if",locations:[{start:{line:32,column:200},end:{line:32,column:254}},{start:{line:32,column:200},end:{line:32,column:254}}],line:32},"13":{loc:{start:{line:34,column:62},end:{line:34,column:131}},type:"if",locations:[{start:{line:34,column:62},end:{line:34,column:131}},{start:{line:34,column:62},end:{line:34,column:131}}],line:34},"14":{loc:{start:{line:34,column:132},end:{line:34,column:193}},type:"if",locations:[{start:{line:34,column:132},end:{line:34,column:193}},{start:{line:34,column:132},end:{line:34,column:193}}],line:34},"15":{loc:{start:{line:39,column:2},end:{line:61,column:3}},type:"if",locations:[{start:{line:39,column:2},end:{line:61,column:3}},{start:{line:39,column:2},end:{line:61,column:3}}],line:39},"16":{loc:{start:{line:46,column:4},end:{line:48,column:5}},type:"if",locations:[{start:{line:46,column:4},end:{line:48,column:5}},{start:{line:46,column:4},end:{line:48,column:5}}],line:46},"17":{loc:{start:{line:84,column:4},end:{line:89,column:5}},type:"if",locations:[{start:{line:84,column:4},end:{line:89,column:5}},{start:{line:84,column:4},end:{line:89,column:5}}],line:84},"18":{loc:{start:{line:84,column:8},end:{line:84,column:70}},type:"binary-expr",locations:[{start:{line:84,column:8},end:{line:84,column:16}},{start:{line:84,column:20},end:{line:84,column:32}},{start:{line:84,column:36},end:{line:84,column:70}}],line:84},"19":{loc:{start:{line:176,column:6},end:{line:178,column:7}},type:"if",locations:[{start:{line:176,column:6},end:{line:178,column:7}},{start:{line:176,column:6},end:{line:178,column:7}}],line:176},"20":{loc:{start:{line:184,column:8},end:{line:191,column:9}},type:"if",locations:[{start:{line:184,column:8},end:{line:191,column:9}},{start:{line:184,column:8},end:{line:191,column:9}}],line:184},"21":{loc:{start:{line:196,column:35},end:{line:196,column:117}},type:"binary-expr",locations:[{start:{line:196,column:35},end:{line:196,column:74}},{start:{line:196,column:78},end:{line:196,column:117}}],line:196},"22":{loc:{start:{line:199,column:63},end:{line:199,column:97}},type:"cond-expr",locations:[{start:{line:199,column:78},end:{line:199,column:86}},{start:{line:199,column:89},end:{line:199,column:97}}],line:199},"23":{loc:{start:{line:244,column:17},end:{line:244,column:100}},type:"cond-expr",locations:[{start:{line:244,column:70},end:{line:244,column:82}},{start:{line:244,column:85},end:{line:244,column:100}}],line:244},"24":{loc:{start:{line:244,column:17},end:{line:244,column:67}},type:"binary-expr",locations:[{start:{line:244,column:17},end:{line:244,column:37}},{start:{line:244,column:41},end:{line:244,column:67}}],line:244},"25":{loc:{start:{line:245,column:20},end:{line:245,column:67}},type:"cond-expr",locations:[{start:{line:245,column:43},end:{line:245,column:55}},{start:{line:245,column:58},end:{line:245,column:67}}],line:245},"26":{loc:{start:{line:253,column:14},end:{line:253,column:37}},type:"binary-expr",locations:[{start:{line:253,column:14},end:{line:253,column:18}},{start:{line:253,column:22},end:{line:253,column:37}}],line:253},"27":{loc:{start:{line:313,column:6},end:{line:341,column:7}},type:"if",locations:[{start:{line:313,column:6},end:{line:341,column:7}},{start:{line:313,column:6},end:{line:341,column:7}}],line:313},"28":{loc:{start:{line:313,column:10},end:{line:313,column:21}},type:"binary-expr",locations:[{start:{line:313,column:10},end:{line:313,column:14}},{start:{line:313,column:18},end:{line:313,column:21}}],line:313},"29":{loc:{start:{line:315,column:10},end:{line:331,column:11}},type:"if",locations:[{start:{line:315,column:10},end:{line:331,column:11}},{start:{line:315,column:10},end:{line:331,column:11}}],line:315},"30":{loc:{start:{line:315,column:14},end:{line:315,column:51}},type:"binary-expr",locations:[{start:{line:315,column:14},end:{line:315,column:38}},{start:{line:315,column:42},end:{line:315,column:51}}],line:315},"31":{loc:{start:{line:317,column:49},end:{line:317,column:84}},type:"cond-expr",locations:[{start:{line:317,column:60},end:{line:317,column:77}},{start:{line:317,column:80},end:{line:317,column:84}}],line:317},"32":{loc:{start:{line:318,column:21},end:{line:318,column:56}},type:"cond-expr",locations:[{start:{line:318,column:32},end:{line:318,column:49}},{start:{line:318,column:52},end:{line:318,column:56}}],line:318},"33":{loc:{start:{line:319,column:17},end:{line:331,column:11}},type:"if",locations:[{start:{line:319,column:17},end:{line:331,column:11}},{start:{line:319,column:17},end:{line:331,column:11}}],line:319},"34":{loc:{start:{line:325,column:12},end:{line:330,column:13}},type:"if",locations:[{start:{line:325,column:12},end:{line:330,column:13}},{start:{line:325,column:12},end:{line:330,column:13}}],line:325},"35":{loc:{start:{line:325,column:16},end:{line:325,column:106}},type:"binary-expr",locations:[{start:{line:325,column:16},end:{line:325,column:59}},{start:{line:325,column:63},end:{line:325,column:106}}],line:325},"36":{loc:{start:{line:336,column:8},end:{line:338,column:9}},type:"if",locations:[{start:{line:336,column:8},end:{line:338,column:9}},{start:{line:336,column:8},end:{line:338,column:9}}],line:336},"37":{loc:{start:{line:423,column:6},end:{line:425,column:7}},type:"if",locations:[{start:{line:423,column:6},end:{line:425,column:7}},{start:{line:423,column:6},end:{line:425,column:7}}],line:423},"38":{loc:{start:{line:440,column:6},end:{line:442,column:7}},type:"if",locations:[{start:{line:440,column:6},end:{line:442,column:7}},{start:{line:440,column:6},end:{line:442,column:7}}],line:440},"39":{loc:{start:{line:502,column:18},end:{line:502,column:90}},type:"cond-expr",locations:[{start:{line:502,column:71},end:{line:502,column:83}},{start:{line:502,column:86},end:{line:502,column:90}}],line:502},"40":{loc:{start:{line:502,column:18},end:{line:502,column:68}},type:"binary-expr",locations:[{start:{line:502,column:18},end:{line:502,column:38}},{start:{line:502,column:42},end:{line:502,column:68}}],line:502},"41":{loc:{start:{line:503,column:23},end:{line:503,column:96}},type:"cond-expr",locations:[{start:{line:503,column:76},end:{line:503,column:88}},{start:{line:503,column:91},end:{line:503,column:96}}],line:503},"42":{loc:{start:{line:503,column:23},end:{line:503,column:73}},type:"binary-expr",locations:[{start:{line:503,column:23},end:{line:503,column:43}},{start:{line:503,column:47},end:{line:503,column:73}}],line:503},"43":{loc:{start:{line:505,column:6},end:{line:507,column:7}},type:"if",locations:[{start:{line:505,column:6},end:{line:507,column:7}},{start:{line:505,column:6},end:{line:507,column:7}}],line:505},"44":{loc:{start:{line:512,column:14},end:{line:512,column:81}},type:"binary-expr",locations:[{start:{line:512,column:14},end:{line:512,column:18}},{start:{line:512,column:22},end:{line:512,column:81}}],line:512},"45":{loc:{start:{line:547,column:8},end:{line:549,column:9}},type:"if",locations:[{start:{line:547,column:8},end:{line:549,column:9}},{start:{line:547,column:8},end:{line:549,column:9}}],line:547}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/Room.js"],names:["_joinRoom","room","role","uid","cache","user","split","join","status","CLOSED","participant","CONNECTED","userAgent","_joined","DataSync","ts","Log","w","update","then","Promise","reject","Error","Room","snapData","roomUid","values","val","Object","assign","name","localStream","owner","_public","extra","_callbacks","list","Participant","Message","localStreams","get","d","keys","map","key","roomId","streams","filter","stream","device","from","bind","_streams","catch","r","users","NONE","message","_path","_data","NOT_CONNECTED","all","set","Invite","send","invites","removeParticipant","invite","remove","to","forEach","on","REJECTED","CANCELED","e","event","callback","cancelCallback","path","Events","toPath","Obj","toClass","typedCallback","test","i","streamData","remoteStream","getRemote","push","type","localStreamContainer","constraints","Local","getLocalVideo","publish","onDisconnect","cancel","off","close","remoteStreams","unSubscribe","WAS_CONNECTED","leave","_closed","publicRoom","roomMetaData","Date","now","roomFullMetaData","OPENED","_created","id1","Math","floor","random","id2","roomRef","OWNER"],mappings:"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",sourcesContent:["import {\n  CANCELED,\n  CLOSED,\n  CONNECTED,\n  NONE,\n  NOT_CONNECTED,\n  OPENED,\n  OWNER,\n  REJECTED,\n  WAS_CONNECTED\n} from './util/constants';\nimport * as DataSync from './util/DataSync';\nimport cache from './util/cache';\nimport Participant from './Participant';\nimport Message from './Message';\nimport Local from './stream/Local';\nimport Invite from './Invite';\nimport * as Events from '../definitions/Events';\nimport * as Log from './util/Log';\n\nconst _joinRoom = (room, role) => {\n  const uid = cache.user.uid.split('/').join(':');\n\n  if (room.status !== CLOSED) {\n    const participant = {\n      status: CONNECTED,\n      userAgent: cache.userAgent,\n      _joined: DataSync.ts()\n    };\n    if (role) {\n      participant.role = role;\n    }\n    Log.w('Room#join', [participant, `_/rooms/${room.uid}/participants/${uid}`]);\n    return DataSync\n    // .update(`_/rooms/${room.uid}/participants/${cache.user.uid}`, participant)\n      .update(`_/rooms/${room.uid}/participants/${uid}`, participant)\n      .then(() => room);\n    /* .then(() => {\n      DataSync\n        .onDisconnect(`_/rooms/${room.uid}/participants/${shortUserId}/status`)\n        .set(WAS_CONNECTED);\n      return room;\n    }); */\n  }\n  return Promise.reject(new Error('can\\'t join a close room'));\n};\n\n/**\n * Room information\n * @access public\n */\nexport default class Room {\n  /**\n   * Create a room\n   * @param {Webcom/api.DataSnapshot|Object} snapData The data snapshot\n   * @access protected\n   */\n  constructor(snapData, roomUid) {\n    let values = snapData;\n    if (snapData && snapData.val && typeof snapData.val === 'function') {\n      // values = Object.assign({}, snapData.val(), {uid: snapData.name()});\n      values = Object.assign({}, snapData.val(), { uid: roomUid });\n    }\n    /**\n     * The room unique id\n     * @type {string}\n     */\n    this.uid = values.uid;\n    /**\n     * The room name\n     * @type {string}\n     */\n    this.name = values.name;\n    /**\n     * The local stream of the room\n     * @type {Local}\n     */\n    this.localStream = {};\n    /**\n     * The room owner uid\n     * @type {string}\n     */\n    this.owner = values.owner;\n    /**\n     * The room status:\n     * - OPENED\n     * - CLOSED\n     * @type {string}\n     */\n    this.status = values.status;\n\n    /**\n     * Indicates that the room is public so all users can join\n     * @type {boolean}\n     */\n    this._public = !!values._public;\n\n    /**\n     * Additional room informations\n     * @type {Object}\n     */\n    this.extra = values.extra;\n\n    /**\n     * List of declared callbacks\n     * @type {Object}\n     */\n    this._callbacks = {};\n  }\n\n  /**\n   * Get the list of participants.\n   * This will only work if the user is either a participant or the owner of the room.\n   * @returns {Promise<Participant[], Error>}\n   */\n  participants() {\n    return DataSync.list(`_/rooms/${this.uid}/participants`, Participant, this.uid);\n  }\n\n  /**\n   * Get the list of messages.\n   * This will only work if the user is either a participant or the owner of the room.\n   * @return {Promise<Message[], Error>}\n   */\n  messages() {\n    return DataSync.list(`_/rooms/${this.uid}/messages`, Message, this.uid);\n  }\n\n  /**\n   * Get the list of streams\n   * @returns {Promise}\n   * @access private\n   */\n  _streams(localStreams) {\n    if (!cache.user) {\n      return Promise.reject(new Error('Only an authenticated user can list a Room\\'s streams.'));\n    }\n    return DataSync.get(`_/rooms/${this.uid}/streams`)\n      .then((snapData) => {\n        const values = snapData.val();\n        Log.d('Rooms~_streams', values);\n        if (values) {\n          return Object.keys(values).map(key => Object.assign({\n            uid: key,\n            roomId: this.uid\n          }, values[key]));\n        }\n        return [];\n      })\n      .then(streams => streams.filter(stream => (\n        localStreams === (stream.device === cache.device && stream.from === cache.user.uid))))\n      .then(streams => streams.map(cache.streams[`get${localStreams ? 'Shared' : 'Remote'}`].bind(cache.streams)))\n      .then(streams => streams.filter(stream => stream !== null));\n  }\n\n  /**\n   * Get the list of locally published streams.\n   * The streams published with another device won't be visible here\n   * This will only work if the user is either a participant or the owner of the room.\n   * @return {Promise<Local[], Error>}\n   */\n  localStreams() {\n    return this._streams(true)\n      .catch(Log.r('Room~localStreams'));\n  }\n\n  /**\n   * Get the list of remotely published streams.\n   * This will only work if the user is either a participant or the owner of the room.\n   * @return {Promise<Remote[], Error>}\n   */\n  remoteStreams() {\n    return this._streams(false)\n      .catch(Log.r('Room~remoteStreams'));\n  }\n\n  /**\n   * Invite users to the room.\n   * This will only work if the current User is the owner or a moderator of this Room.\n   * This will create the invitation and add the user to the participants list.\n   * @param {User[]} users the users to invite\n   * @param {string} [role='NONE'] the role of the invitee\n   * @param {string} [message] a message to add to the invite\n   * @return {Promise<{room: Room, invites: Invite[]}, Error>}\n   */\n  invite(users, role = NONE, message) {\n    const _path = user => `_/rooms/${this.uid}/participants/${user.uid}`;\n    const _data = {\n      status: NOT_CONNECTED,\n      role: role || NONE\n    };\n    // Add users as participant so they can join the room\n    return Promise.all(users.map(user => DataSync.set(_path(user), _data)))\n    // Send invites\n      .then(() => Promise.all(users.map(user => Invite.send(user, this, message))))\n      .then((invites) => {\n        const removeParticipant = invite => DataSync.remove(`_/rooms/${invite.room}/participants/${invite.to}`);\n        invites.forEach((invite) => {\n          invite.on(REJECTED, removeParticipant);\n          invite.on(CANCELED, removeParticipant);\n        });\n        return { room: this, invites };\n      })\n      .catch((e) => {\n        Log.e('Room~invite', e);\n        users.forEach(user => DataSync.remove(`_/rooms/${this.uid}/participants/${user.uid}`));\n        return Promise.reject(e);\n      });\n  }\n\n  /**\n   * Register a callback for a specific event\n   * @param {string} event The event name ({@link Events/Room}):\n   * - PARTICIPANT_ADDED: a participant is added to the room\n   * - PARTICIPANT_CHANGED: a participant changes his status (join)\n   * - PARTICIPANT_REMOVED: a participant leave the room\n   * - MESSAGE_ADDED: new instant message\n   * - MESSAGE_CHANGED: an existing message has been modified (moderation)\n   * - MESSAGE_REMOVED: a message has been removed (moderation)\n   * - STREAM_PUBLISHED: a participant published a new Stream\n   * - STREAM_CHANGED: a participant changes his published Stream (moderation, type, mute...)\n   * - STREAM_UNPUBLISHED: a participant stops the publication of his Stream\n   * @param {function} callback\n   * The callback for the event, the arguments depends on the type of event:\n   * - PARTICIPANT_* : callback({@link Participant} p [, Error e])\n   * - MESSAGE_* : callback({@link Message} m [, Error e])\n   * - STREAM_* : callback({@link Remote} s [, Error e])\n   * @param {Webcom/api.Query~cancelCallback} cancelCallback The error callback for the event,\n   * takes an Error as only argument\n   */\n  on(event, callback, cancelCallback) {\n    const\n      path = Events.room.toPath(event)(this);\n\n\n    const Obj = Events.room.toClass(event);\n    if (path && Obj) {\n      const typedCallback = (snapData) => {\n        if (!/^STREAM_/i.test(event) || !snapData) {\n          // if(/^MESSAGE_/i.test(event) || !snapData) {\n          Log.i(`Room~on(${event})`, snapData ? new Obj(snapData) : null);\n          callback(snapData ? new Obj(snapData) : null);\n        } else if (cache.user) {\n          const streamData = Object.assign({\n            uid: snapData.name(),\n            roomId: this.uid\n          }, snapData.val());\n          if (streamData.from !== cache.user.uid || streamData.device !== cache.device) {\n            const remoteStream = cache.streams.getRemote(streamData);\n            Log.i(`Room~on(${event})`, remoteStream);\n            callback(remoteStream);\n          }\n        }\n      };\n      DataSync.on(path, event, typedCallback, cancelCallback);\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(typedCallback);\n    }\n  }\n\n  /**\n   * Send an instant message\n   * @param {string} message The message to send\n   * @return {Promise<Message>}\n   */\n  sendMessage(message) {\n    return Message.send(this, message);\n  }\n\n  /**\n   * Publish a local stream\n   * @param {string} type The stream type, see {@link StreamTypes} for possible values\n   * @param {Element} [localStreamContainer] The element the stream is attached to.\n   * Can be null if already specified in {@link Config}.\n   * @param {MediaStreamConstraints} [constraints] The stream constraints.\n   * If not defined, the constraints defined in {@link Config} will be used.\n   * @returns {Promise<Local, Error>}\n   */\n  share(type, localStreamContainer, constraints) {\n    Log.i('Room~share', { type, localStreamContainer, constraints });\n    // return Local.share(this.uid, type, localStreamContainer, constraints);\n    return Local.getLocalVideo(this.uid, type, localStreamContainer, constraints)\n      .then(stream => stream.publish(stream));\n  }\n\n  /**\n   * get a local stream in video tag\n   * @param {string} type The stream type, see {@link StreamTypes} for possible values\n   * @param {Element} [localStreamContainer] The element the stream is attached to.\n   * Can be null if already specified in {@link Config}.\n   * @param {MediaStreamConstraints} [constraints] The stream constraints.\n   * If not defined, the constraints defined in {@link Config} will be used.\n   * @returns {Promise<Local, Error>}\n   */\n  getLocalVideo(type, localStreamContainer, constraints) {\n    Log.i('Room~getLocalVideo', { type, localStreamContainer, constraints });\n    return Local.getLocalVideo(this.uid, type, localStreamContainer, constraints)\n      .then((localStream) => {\n        this.localStream = localStream;\n        return localStream;\n      });\n  }\n\n  /**\n   * publish a local stream\n   * @returns {Local}\n   */\n  publish() {\n    Log.i('Room~publish Local');\n    return this.localStream.publish(this.localStream);\n  }\n\n  /**\n   * Join the room. Sets the connected status of the current participant to CONNECTED.\n   * @return {Promise}\n   */\n  join() {\n    Log.i('Room~join', this);\n    if (!cache.user) {\n      return Promise.reject(new Error('Only an authenticated user can join a Room.'));\n    }\n    return _joinRoom(this).catch(Log.r('Room~join'));\n  }\n\n  /**\n   * Leave the room. Sets the connected status of the current participant to WAS_CONNECTED,\n   * deletes medias and callbacks, closes WebRTC stacks in use.\n   * @return {Promise}\n   */\n  leave() {\n    if (!cache.user) {\n      return Promise.reject(new Error('Only an authenticated user can leave a Room.'));\n    }\n    Log.i('Room~leave', this);\n    // Cancel onDisconnect\n    const uid = cache.user.uid.split('/').join(':');\n    DataSync.onDisconnect(`_/rooms/${this.uid}/participants/${uid}/status`).cancel();\n\n    // Disconnect user's callbacks\n    Object.keys(this._callbacks).forEach((event) => {\n      DataSync.off(Events.room.toPath(event)(this), event);\n    });\n    // Unpublish all published local streams\n    this.localStreams()\n      .then(localStreams => localStreams.forEach(localStream => localStream.close()));\n    // Unsubscribe all remote streams\n    this.remoteStreams()\n      .then(remoteStreams => remoteStreams.forEach(remoteStream => remoteStream.unSubscribe()));\n    // Update status\n    return DataSync.set(`_/rooms/${this.uid}/participants/${uid}/status`, WAS_CONNECTED)\n    // return DataSync.set(`_/rooms/${this.uid}/participants/${shortUserId}/status`, WAS_CONNECTED)\n      .catch(Log.r('Room~leave'));\n  }\n\n  /**\n   * Leaves & close the Room. Only the owner/moderator can close a room.\n   * @return {Promise}\n   */\n  close() {\n    Log.i('Room~close', this);\n    this.status = CLOSED;\n    return this.leave()\n      .then(() => DataSync.update(`rooms/${this.uid}`, { status: CLOSED, _closed: DataSync.ts() }))\n      .then(() => DataSync.remove(`_/rooms/${this.uid}`))\n      .catch(Log.r('Room~close'));\n  }\n\n  /**\n   * Create a room\n   * @access protected\n   * @param {String} [name] The room name\n   * @param {object} [extra=null] Extra informations\n   * @param {boolean} [publicRoom=false] Indicates public room\n   * @returns {Promise<Room, Error>}\n   */\n  static create(name, extra = null, publicRoom = false) {\n    if (!cache.user) {\n      return Promise.reject(new Error('Only an authenticated user can create a Room.'));\n    }\n\n    const roomMetaData = {\n      owner: cache.user.uid,\n      _public: publicRoom,\n      name: name || `${cache.user.name}-${Date.now()}`\n    };\n    const roomFullMetaData = Object.assign({\n      status: OPENED,\n      _created: DataSync.ts(),\n      extra\n    }, roomMetaData);\n\n    let room = null;\n    // Create public room infos\n    // return DataSync.push('rooms', roomFullMetaData)\n    const id1 = Math.floor(Math.random() * 1000);\n    const id2 = Math.floor(Math.random() * 1000);\n    return DataSync.push(`rooms/${id1}/${id2}`, roomFullMetaData)\n    // Create private room infos\n      .then((roomRef) => {\n        room = new Room(Object.assign({ uid: `${id1}/${id2}/${roomRef.name()}` }, roomFullMetaData));\n        cache.room = roomFullMetaData;\n        return DataSync.update(`_/rooms/${room.uid}/meta`, roomMetaData);\n      })\n      // Join the room\n      .then(() => _joinRoom(room, OWNER))\n      .catch(Log.r('Room#create'));\n  }\n\n  /**\n   * Get a {@link Room} from its `uid`\n   * @access protected\n   * @param uid\n   * @returns {Promise.<Room>}\n   */\n  static get(uid) {\n    return DataSync.get(`rooms/${uid}`)\n      .then((snapData) => {\n        if (snapData.val()) {\n          return new Room(snapData, uid);\n        }\n        return null;\n      });\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_kjwtkr9ny.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_kjwtkr9ny.s[1]++;exports.default=void 0;var _constants=(cov_kjwtkr9ny.s[2]++,__webpack_require__(/*! ./util/constants */ "./src/core/util/constants.js"));var DataSync=(cov_kjwtkr9ny.s[3]++,_interopRequireWildcard(__webpack_require__(/*! ./util/DataSync */ "./src/core/util/DataSync.js")));var _cache=(cov_kjwtkr9ny.s[4]++,_interopRequireDefault(__webpack_require__(/*! ./util/cache */ "./src/core/util/cache.js")));var _Participant=(cov_kjwtkr9ny.s[5]++,_interopRequireDefault(__webpack_require__(/*! ./Participant */ "./src/core/Participant.js")));var _Message=(cov_kjwtkr9ny.s[6]++,_interopRequireDefault(__webpack_require__(/*! ./Message */ "./src/core/Message.js")));var _Local=(cov_kjwtkr9ny.s[7]++,_interopRequireDefault(__webpack_require__(/*! ./stream/Local */ "./src/core/stream/Local.js")));var _Invite=(cov_kjwtkr9ny.s[8]++,_interopRequireDefault(__webpack_require__(/*! ./Invite */ "./src/core/Invite.js")));var Events=(cov_kjwtkr9ny.s[9]++,_interopRequireWildcard(__webpack_require__(/*! ../definitions/Events */ "./src/definitions/Events.js")));var Log=(cov_kjwtkr9ny.s[10]++,_interopRequireWildcard(__webpack_require__(/*! ./util/Log */ "./src/core/util/Log.js")));function _interopRequireDefault(obj){cov_kjwtkr9ny.f[0]++;cov_kjwtkr9ny.s[11]++;return(cov_kjwtkr9ny.b[1][0]++,obj)&&(cov_kjwtkr9ny.b[1][1]++,obj.__esModule)?(cov_kjwtkr9ny.b[0][0]++,obj):(cov_kjwtkr9ny.b[0][1]++,{default:obj});}function _interopRequireWildcard(obj){cov_kjwtkr9ny.f[1]++;cov_kjwtkr9ny.s[12]++;if((cov_kjwtkr9ny.b[3][0]++,obj)&&(cov_kjwtkr9ny.b[3][1]++,obj.__esModule)){cov_kjwtkr9ny.b[2][0]++;cov_kjwtkr9ny.s[13]++;return obj;}else{cov_kjwtkr9ny.b[2][1]++;var newObj=(cov_kjwtkr9ny.s[14]++,{});cov_kjwtkr9ny.s[15]++;if(obj!=null){cov_kjwtkr9ny.b[4][0]++;cov_kjwtkr9ny.s[16]++;for(var key in obj){cov_kjwtkr9ny.s[17]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_kjwtkr9ny.b[5][0]++;var desc=(cov_kjwtkr9ny.s[18]++,(cov_kjwtkr9ny.b[7][0]++,Object.defineProperty)&&(cov_kjwtkr9ny.b[7][1]++,Object.getOwnPropertyDescriptor)?(cov_kjwtkr9ny.b[6][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_kjwtkr9ny.b[6][1]++,{}));cov_kjwtkr9ny.s[19]++;if((cov_kjwtkr9ny.b[9][0]++,desc.get)||(cov_kjwtkr9ny.b[9][1]++,desc.set)){cov_kjwtkr9ny.b[8][0]++;cov_kjwtkr9ny.s[20]++;Object.defineProperty(newObj,key,desc);}else{cov_kjwtkr9ny.b[8][1]++;cov_kjwtkr9ny.s[21]++;newObj[key]=obj[key];}}else{cov_kjwtkr9ny.b[5][1]++;}}}else{cov_kjwtkr9ny.b[4][1]++;}cov_kjwtkr9ny.s[22]++;newObj.default=obj;cov_kjwtkr9ny.s[23]++;return newObj;}}function _classCallCheck(instance,Constructor){cov_kjwtkr9ny.f[2]++;cov_kjwtkr9ny.s[24]++;if(!(instance instanceof Constructor)){cov_kjwtkr9ny.b[10][0]++;cov_kjwtkr9ny.s[25]++;throw new TypeError("Cannot call a class as a function");}else{cov_kjwtkr9ny.b[10][1]++;}}function _defineProperties(target,props){cov_kjwtkr9ny.f[3]++;cov_kjwtkr9ny.s[26]++;for(var i=0;i<props.length;i++){var descriptor=(cov_kjwtkr9ny.s[27]++,props[i]);cov_kjwtkr9ny.s[28]++;descriptor.enumerable=(cov_kjwtkr9ny.b[11][0]++,descriptor.enumerable)||(cov_kjwtkr9ny.b[11][1]++,false);cov_kjwtkr9ny.s[29]++;descriptor.configurable=true;cov_kjwtkr9ny.s[30]++;if("value"in descriptor){cov_kjwtkr9ny.b[12][0]++;cov_kjwtkr9ny.s[31]++;descriptor.writable=true;}else{cov_kjwtkr9ny.b[12][1]++;}cov_kjwtkr9ny.s[32]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_kjwtkr9ny.f[4]++;cov_kjwtkr9ny.s[33]++;if(protoProps){cov_kjwtkr9ny.b[13][0]++;cov_kjwtkr9ny.s[34]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_kjwtkr9ny.b[13][1]++;}cov_kjwtkr9ny.s[35]++;if(staticProps){cov_kjwtkr9ny.b[14][0]++;cov_kjwtkr9ny.s[36]++;_defineProperties(Constructor,staticProps);}else{cov_kjwtkr9ny.b[14][1]++;}cov_kjwtkr9ny.s[37]++;return Constructor;}cov_kjwtkr9ny.s[38]++;var _joinRoom=function _joinRoom(room,role){cov_kjwtkr9ny.f[5]++;var uid=(cov_kjwtkr9ny.s[39]++,_cache.default.user.uid.split('/').join(':'));cov_kjwtkr9ny.s[40]++;if(room.status!==_constants.CLOSED){cov_kjwtkr9ny.b[15][0]++;var participant=(cov_kjwtkr9ny.s[41]++,{status:_constants.CONNECTED,userAgent:_cache.default.userAgent,_joined:DataSync.ts()});cov_kjwtkr9ny.s[42]++;if(role){cov_kjwtkr9ny.b[16][0]++;cov_kjwtkr9ny.s[43]++;participant.role=role;}else{cov_kjwtkr9ny.b[16][1]++;}cov_kjwtkr9ny.s[44]++;Log.w('Room#join',[participant,"_/rooms/".concat(room.uid,"/participants/").concat(uid)]);cov_kjwtkr9ny.s[45]++;return DataSync.update("_/rooms/".concat(room.uid,"/participants/").concat(uid),participant).then(function(){cov_kjwtkr9ny.f[6]++;cov_kjwtkr9ny.s[46]++;return room;});}else{cov_kjwtkr9ny.b[15][1]++;}cov_kjwtkr9ny.s[47]++;return Promise.reject(new Error('can\'t join a close room'));};var Room=(cov_kjwtkr9ny.s[48]++,function(){cov_kjwtkr9ny.f[7]++;function Room(snapData,roomUid){cov_kjwtkr9ny.f[8]++;cov_kjwtkr9ny.s[49]++;_classCallCheck(this,Room);var values=(cov_kjwtkr9ny.s[50]++,snapData);cov_kjwtkr9ny.s[51]++;if((cov_kjwtkr9ny.b[18][0]++,snapData)&&(cov_kjwtkr9ny.b[18][1]++,snapData.val)&&(cov_kjwtkr9ny.b[18][2]++,typeof snapData.val==='function')){cov_kjwtkr9ny.b[17][0]++;cov_kjwtkr9ny.s[52]++;values=Object.assign({},snapData.val(),{uid:roomUid});}else{cov_kjwtkr9ny.b[17][1]++;}cov_kjwtkr9ny.s[53]++;this.uid=values.uid;cov_kjwtkr9ny.s[54]++;this.name=values.name;cov_kjwtkr9ny.s[55]++;this.localStream={};cov_kjwtkr9ny.s[56]++;this.owner=values.owner;cov_kjwtkr9ny.s[57]++;this.status=values.status;cov_kjwtkr9ny.s[58]++;this._public=!!values._public;cov_kjwtkr9ny.s[59]++;this.extra=values.extra;cov_kjwtkr9ny.s[60]++;this._callbacks={};}cov_kjwtkr9ny.s[61]++;_createClass(Room,[{key:"participants",value:function participants(){cov_kjwtkr9ny.f[9]++;cov_kjwtkr9ny.s[62]++;return DataSync.list("_/rooms/".concat(this.uid,"/participants"),_Participant.default,this.uid);}},{key:"messages",value:function messages(){cov_kjwtkr9ny.f[10]++;cov_kjwtkr9ny.s[63]++;return DataSync.list("_/rooms/".concat(this.uid,"/messages"),_Message.default,this.uid);}},{key:"_streams",value:function _streams(localStreams){cov_kjwtkr9ny.f[11]++;var _this=(cov_kjwtkr9ny.s[64]++,this);cov_kjwtkr9ny.s[65]++;if(!_cache.default.user){cov_kjwtkr9ny.b[19][0]++;cov_kjwtkr9ny.s[66]++;return Promise.reject(new Error('Only an authenticated user can list a Room\'s streams.'));}else{cov_kjwtkr9ny.b[19][1]++;}cov_kjwtkr9ny.s[67]++;return DataSync.get("_/rooms/".concat(this.uid,"/streams")).then(function(snapData){cov_kjwtkr9ny.f[12]++;var values=(cov_kjwtkr9ny.s[68]++,snapData.val());cov_kjwtkr9ny.s[69]++;Log.d('Rooms~_streams',values);cov_kjwtkr9ny.s[70]++;if(values){cov_kjwtkr9ny.b[20][0]++;cov_kjwtkr9ny.s[71]++;return Object.keys(values).map(function(key){cov_kjwtkr9ny.f[13]++;cov_kjwtkr9ny.s[72]++;return Object.assign({uid:key,roomId:_this.uid},values[key]);});}else{cov_kjwtkr9ny.b[20][1]++;}cov_kjwtkr9ny.s[73]++;return[];}).then(function(streams){cov_kjwtkr9ny.f[14]++;cov_kjwtkr9ny.s[74]++;return streams.filter(function(stream){cov_kjwtkr9ny.f[15]++;cov_kjwtkr9ny.s[75]++;return localStreams===((cov_kjwtkr9ny.b[21][0]++,stream.device===_cache.default.device)&&(cov_kjwtkr9ny.b[21][1]++,stream.from===_cache.default.user.uid));});}).then(function(streams){cov_kjwtkr9ny.f[16]++;cov_kjwtkr9ny.s[76]++;return streams.map(_cache.default.streams["get".concat(localStreams?(cov_kjwtkr9ny.b[22][0]++,'Shared'):(cov_kjwtkr9ny.b[22][1]++,'Remote'))].bind(_cache.default.streams));}).then(function(streams){cov_kjwtkr9ny.f[17]++;cov_kjwtkr9ny.s[77]++;return streams.filter(function(stream){cov_kjwtkr9ny.f[18]++;cov_kjwtkr9ny.s[78]++;return stream!==null;});});}},{key:"localStreams",value:function localStreams(){cov_kjwtkr9ny.f[19]++;cov_kjwtkr9ny.s[79]++;return this._streams(true).catch(Log.r('Room~localStreams'));}},{key:"remoteStreams",value:function remoteStreams(){cov_kjwtkr9ny.f[20]++;cov_kjwtkr9ny.s[80]++;return this._streams(false).catch(Log.r('Room~remoteStreams'));}},{key:"invite",value:function invite(users){cov_kjwtkr9ny.f[21]++;var _this2=(cov_kjwtkr9ny.s[81]++,this);var role=(cov_kjwtkr9ny.s[82]++,(cov_kjwtkr9ny.b[24][0]++,arguments.length>1)&&(cov_kjwtkr9ny.b[24][1]++,arguments[1]!==undefined)?(cov_kjwtkr9ny.b[23][0]++,arguments[1]):(cov_kjwtkr9ny.b[23][1]++,_constants.NONE));var message=(cov_kjwtkr9ny.s[83]++,arguments.length>2?(cov_kjwtkr9ny.b[25][0]++,arguments[2]):(cov_kjwtkr9ny.b[25][1]++,undefined));cov_kjwtkr9ny.s[84]++;var _path=function _path(user){cov_kjwtkr9ny.f[22]++;cov_kjwtkr9ny.s[85]++;return"_/rooms/".concat(_this2.uid,"/participants/").concat(user.uid);};var _data=(cov_kjwtkr9ny.s[86]++,{status:_constants.NOT_CONNECTED,role:(cov_kjwtkr9ny.b[26][0]++,role)||(cov_kjwtkr9ny.b[26][1]++,_constants.NONE)});cov_kjwtkr9ny.s[87]++;return Promise.all(users.map(function(user){cov_kjwtkr9ny.f[23]++;cov_kjwtkr9ny.s[88]++;return DataSync.set(_path(user),_data);})).then(function(){cov_kjwtkr9ny.f[24]++;cov_kjwtkr9ny.s[89]++;return Promise.all(users.map(function(user){cov_kjwtkr9ny.f[25]++;cov_kjwtkr9ny.s[90]++;return _Invite.default.send(user,_this2,message);}));}).then(function(invites){cov_kjwtkr9ny.f[26]++;cov_kjwtkr9ny.s[91]++;var removeParticipant=function removeParticipant(invite){cov_kjwtkr9ny.f[27]++;cov_kjwtkr9ny.s[92]++;return DataSync.remove("_/rooms/".concat(invite.room,"/participants/").concat(invite.to));};cov_kjwtkr9ny.s[93]++;invites.forEach(function(invite){cov_kjwtkr9ny.f[28]++;cov_kjwtkr9ny.s[94]++;invite.on(_constants.REJECTED,removeParticipant);cov_kjwtkr9ny.s[95]++;invite.on(_constants.CANCELED,removeParticipant);});cov_kjwtkr9ny.s[96]++;return{room:_this2,invites:invites};}).catch(function(e){cov_kjwtkr9ny.f[29]++;cov_kjwtkr9ny.s[97]++;Log.e('Room~invite',e);cov_kjwtkr9ny.s[98]++;users.forEach(function(user){cov_kjwtkr9ny.f[30]++;cov_kjwtkr9ny.s[99]++;return DataSync.remove("_/rooms/".concat(_this2.uid,"/participants/").concat(user.uid));});cov_kjwtkr9ny.s[100]++;return Promise.reject(e);});}},{key:"on",value:function on(event,callback,cancelCallback){cov_kjwtkr9ny.f[31]++;var _this3=(cov_kjwtkr9ny.s[101]++,this);var path=(cov_kjwtkr9ny.s[102]++,Events.room.toPath(event)(this));var Obj=(cov_kjwtkr9ny.s[103]++,Events.room.toClass(event));cov_kjwtkr9ny.s[104]++;if((cov_kjwtkr9ny.b[28][0]++,path)&&(cov_kjwtkr9ny.b[28][1]++,Obj)){cov_kjwtkr9ny.b[27][0]++;cov_kjwtkr9ny.s[105]++;var typedCallback=function typedCallback(snapData){cov_kjwtkr9ny.f[32]++;cov_kjwtkr9ny.s[106]++;if((cov_kjwtkr9ny.b[30][0]++,!/^STREAM_/i.test(event))||(cov_kjwtkr9ny.b[30][1]++,!snapData)){cov_kjwtkr9ny.b[29][0]++;cov_kjwtkr9ny.s[107]++;Log.i("Room~on(".concat(event,")"),snapData?(cov_kjwtkr9ny.b[31][0]++,new Obj(snapData)):(cov_kjwtkr9ny.b[31][1]++,null));cov_kjwtkr9ny.s[108]++;callback(snapData?(cov_kjwtkr9ny.b[32][0]++,new Obj(snapData)):(cov_kjwtkr9ny.b[32][1]++,null));}else{cov_kjwtkr9ny.b[29][1]++;cov_kjwtkr9ny.s[109]++;if(_cache.default.user){cov_kjwtkr9ny.b[33][0]++;var streamData=(cov_kjwtkr9ny.s[110]++,Object.assign({uid:snapData.name(),roomId:_this3.uid},snapData.val()));cov_kjwtkr9ny.s[111]++;if((cov_kjwtkr9ny.b[35][0]++,streamData.from!==_cache.default.user.uid)||(cov_kjwtkr9ny.b[35][1]++,streamData.device!==_cache.default.device)){cov_kjwtkr9ny.b[34][0]++;var remoteStream=(cov_kjwtkr9ny.s[112]++,_cache.default.streams.getRemote(streamData));cov_kjwtkr9ny.s[113]++;Log.i("Room~on(".concat(event,")"),remoteStream);cov_kjwtkr9ny.s[114]++;callback(remoteStream);}else{cov_kjwtkr9ny.b[34][1]++;}}else{cov_kjwtkr9ny.b[33][1]++;}}};cov_kjwtkr9ny.s[115]++;DataSync.on(path,event,typedCallback,cancelCallback);cov_kjwtkr9ny.s[116]++;if(!this._callbacks[event]){cov_kjwtkr9ny.b[36][0]++;cov_kjwtkr9ny.s[117]++;this._callbacks[event]=[];}else{cov_kjwtkr9ny.b[36][1]++;}cov_kjwtkr9ny.s[118]++;this._callbacks[event].push(typedCallback);}else{cov_kjwtkr9ny.b[27][1]++;}}},{key:"sendMessage",value:function sendMessage(message){cov_kjwtkr9ny.f[33]++;cov_kjwtkr9ny.s[119]++;return _Message.default.send(this,message);}},{key:"share",value:function share(type,localStreamContainer,constraints){cov_kjwtkr9ny.f[34]++;cov_kjwtkr9ny.s[120]++;Log.i('Room~share',{type:type,localStreamContainer:localStreamContainer,constraints:constraints});cov_kjwtkr9ny.s[121]++;return _Local.default.getLocalVideo(this.uid,type,localStreamContainer,constraints).then(function(stream){cov_kjwtkr9ny.f[35]++;cov_kjwtkr9ny.s[122]++;return stream.publish(stream);});}},{key:"getLocalVideo",value:function getLocalVideo(type,localStreamContainer,constraints){cov_kjwtkr9ny.f[36]++;var _this4=(cov_kjwtkr9ny.s[123]++,this);cov_kjwtkr9ny.s[124]++;Log.i('Room~getLocalVideo',{type:type,localStreamContainer:localStreamContainer,constraints:constraints});cov_kjwtkr9ny.s[125]++;return _Local.default.getLocalVideo(this.uid,type,localStreamContainer,constraints).then(function(localStream){cov_kjwtkr9ny.f[37]++;cov_kjwtkr9ny.s[126]++;_this4.localStream=localStream;cov_kjwtkr9ny.s[127]++;return localStream;});}},{key:"publish",value:function publish(){cov_kjwtkr9ny.f[38]++;cov_kjwtkr9ny.s[128]++;Log.i('Room~publish Local');cov_kjwtkr9ny.s[129]++;return this.localStream.publish(this.localStream);}},{key:"join",value:function join(){cov_kjwtkr9ny.f[39]++;cov_kjwtkr9ny.s[130]++;Log.i('Room~join',this);cov_kjwtkr9ny.s[131]++;if(!_cache.default.user){cov_kjwtkr9ny.b[37][0]++;cov_kjwtkr9ny.s[132]++;return Promise.reject(new Error('Only an authenticated user can join a Room.'));}else{cov_kjwtkr9ny.b[37][1]++;}cov_kjwtkr9ny.s[133]++;return _joinRoom(this).catch(Log.r('Room~join'));}},{key:"leave",value:function leave(){cov_kjwtkr9ny.f[40]++;var _this5=(cov_kjwtkr9ny.s[134]++,this);cov_kjwtkr9ny.s[135]++;if(!_cache.default.user){cov_kjwtkr9ny.b[38][0]++;cov_kjwtkr9ny.s[136]++;return Promise.reject(new Error('Only an authenticated user can leave a Room.'));}else{cov_kjwtkr9ny.b[38][1]++;}cov_kjwtkr9ny.s[137]++;Log.i('Room~leave',this);var uid=(cov_kjwtkr9ny.s[138]++,_cache.default.user.uid.split('/').join(':'));cov_kjwtkr9ny.s[139]++;DataSync.onDisconnect("_/rooms/".concat(this.uid,"/participants/").concat(uid,"/status")).cancel();cov_kjwtkr9ny.s[140]++;Object.keys(this._callbacks).forEach(function(event){cov_kjwtkr9ny.f[41]++;cov_kjwtkr9ny.s[141]++;DataSync.off(Events.room.toPath(event)(_this5),event);});cov_kjwtkr9ny.s[142]++;this.localStreams().then(function(localStreams){cov_kjwtkr9ny.f[42]++;cov_kjwtkr9ny.s[143]++;return localStreams.forEach(function(localStream){cov_kjwtkr9ny.f[43]++;cov_kjwtkr9ny.s[144]++;return localStream.close();});});cov_kjwtkr9ny.s[145]++;this.remoteStreams().then(function(remoteStreams){cov_kjwtkr9ny.f[44]++;cov_kjwtkr9ny.s[146]++;return remoteStreams.forEach(function(remoteStream){cov_kjwtkr9ny.f[45]++;cov_kjwtkr9ny.s[147]++;return remoteStream.unSubscribe();});});cov_kjwtkr9ny.s[148]++;return DataSync.set("_/rooms/".concat(this.uid,"/participants/").concat(uid,"/status"),_constants.WAS_CONNECTED).catch(Log.r('Room~leave'));}},{key:"close",value:function close(){cov_kjwtkr9ny.f[46]++;var _this6=(cov_kjwtkr9ny.s[149]++,this);cov_kjwtkr9ny.s[150]++;Log.i('Room~close',this);cov_kjwtkr9ny.s[151]++;this.status=_constants.CLOSED;cov_kjwtkr9ny.s[152]++;return this.leave().then(function(){cov_kjwtkr9ny.f[47]++;cov_kjwtkr9ny.s[153]++;return DataSync.update("rooms/".concat(_this6.uid),{status:_constants.CLOSED,_closed:DataSync.ts()});}).then(function(){cov_kjwtkr9ny.f[48]++;cov_kjwtkr9ny.s[154]++;return DataSync.remove("_/rooms/".concat(_this6.uid));}).catch(Log.r('Room~close'));}}],[{key:"create",value:function create(name){cov_kjwtkr9ny.f[49]++;var extra=(cov_kjwtkr9ny.s[155]++,(cov_kjwtkr9ny.b[40][0]++,arguments.length>1)&&(cov_kjwtkr9ny.b[40][1]++,arguments[1]!==undefined)?(cov_kjwtkr9ny.b[39][0]++,arguments[1]):(cov_kjwtkr9ny.b[39][1]++,null));var publicRoom=(cov_kjwtkr9ny.s[156]++,(cov_kjwtkr9ny.b[42][0]++,arguments.length>2)&&(cov_kjwtkr9ny.b[42][1]++,arguments[2]!==undefined)?(cov_kjwtkr9ny.b[41][0]++,arguments[2]):(cov_kjwtkr9ny.b[41][1]++,false));cov_kjwtkr9ny.s[157]++;if(!_cache.default.user){cov_kjwtkr9ny.b[43][0]++;cov_kjwtkr9ny.s[158]++;return Promise.reject(new Error('Only an authenticated user can create a Room.'));}else{cov_kjwtkr9ny.b[43][1]++;}var roomMetaData=(cov_kjwtkr9ny.s[159]++,{owner:_cache.default.user.uid,_public:publicRoom,name:(cov_kjwtkr9ny.b[44][0]++,name)||(cov_kjwtkr9ny.b[44][1]++,"".concat(_cache.default.user.name,"-").concat(Date.now()))});var roomFullMetaData=(cov_kjwtkr9ny.s[160]++,Object.assign({status:_constants.OPENED,_created:DataSync.ts(),extra:extra},roomMetaData));var room=(cov_kjwtkr9ny.s[161]++,null);var id1=(cov_kjwtkr9ny.s[162]++,Math.floor(Math.random()*1000));var id2=(cov_kjwtkr9ny.s[163]++,Math.floor(Math.random()*1000));cov_kjwtkr9ny.s[164]++;return DataSync.push("rooms/".concat(id1,"/").concat(id2),roomFullMetaData).then(function(roomRef){cov_kjwtkr9ny.f[50]++;cov_kjwtkr9ny.s[165]++;room=new Room(Object.assign({uid:"".concat(id1,"/").concat(id2,"/").concat(roomRef.name())},roomFullMetaData));cov_kjwtkr9ny.s[166]++;_cache.default.room=roomFullMetaData;cov_kjwtkr9ny.s[167]++;return DataSync.update("_/rooms/".concat(room.uid,"/meta"),roomMetaData);}).then(function(){cov_kjwtkr9ny.f[51]++;cov_kjwtkr9ny.s[168]++;return _joinRoom(room,_constants.OWNER);}).catch(Log.r('Room#create'));}},{key:"get",value:function get(uid){cov_kjwtkr9ny.f[52]++;cov_kjwtkr9ny.s[169]++;return DataSync.get("rooms/".concat(uid)).then(function(snapData){cov_kjwtkr9ny.f[53]++;cov_kjwtkr9ny.s[170]++;if(snapData.val()){cov_kjwtkr9ny.b[45][0]++;cov_kjwtkr9ny.s[171]++;return new Room(snapData,uid);}else{cov_kjwtkr9ny.b[45][1]++;}cov_kjwtkr9ny.s[172]++;return null;});}}]);cov_kjwtkr9ny.s[173]++;return Room;}());cov_kjwtkr9ny.s[174]++;exports.default=Room;

/***/ }),

/***/ "./src/core/User.js":
/*!**************************!*\
  !*** ./src/core/User.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_1o4xyazur9=function(){var path="/home/florent/Projets/reach/src/core/User.js",hash="ea2aad0890e2e31488cb36ec00067ebd72ced1c9",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/User.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:14},end:{line:8,column:62}},"3":{start:{line:10,column:15},end:{line:10,column:66}},"4":{start:{line:12,column:13},end:{line:12,column:60}},"5":{start:{line:14,column:10},end:{line:14,column:56}},"6":{start:{line:16,column:12},end:{line:16,column:53}},"7":{start:{line:18,column:14},end:{line:18,column:57}},"8":{start:{line:20,column:17},end:{line:20,column:44}},"9":{start:{line:22,column:40},end:{line:22,column:470}},"10":{start:{line:22,column:69},end:{line:22,column:80}},"11":{start:{line:22,column:103},end:{line:22,column:105}},"12":{start:{line:22,column:107},end:{line:22,column:431}},"13":{start:{line:22,column:126},end:{line:22,column:429}},"14":{start:{line:22,column:149},end:{line:22,column:427}},"15":{start:{line:22,column:214},end:{line:22,column:319}},"16":{start:{line:22,column:321},end:{line:22,column:425}},"17":{start:{line:22,column:349},end:{line:22,column:390}},"18":{start:{line:22,column:400},end:{line:22,column:423}},"19":{start:{line:22,column:432},end:{line:22,column:453}},"20":{start:{line:22,column:454},end:{line:22,column:468}},"21":{start:{line:24,column:39},end:{line:24,column:93}},"22":{start:{line:26,column:50},end:{line:26,column:151}},"23":{start:{line:26,column:92},end:{line:26,column:149}},"24":{start:{line:28,column:44},end:{line:28,column:315}},"25":{start:{line:28,column:102},end:{line:28,column:110}},"26":{start:{line:28,column:112},end:{line:28,column:167}},"27":{start:{line:28,column:168},end:{line:28,column:199}},"28":{start:{line:28,column:200},end:{line:28,column:254}},"29":{start:{line:28,column:227},end:{line:28,column:254}},"30":{start:{line:28,column:255},end:{line:28,column:313}},"31":{start:{line:30,column:62},end:{line:30,column:131}},"32":{start:{line:30,column:78},end:{line:30,column:131}},"33":{start:{line:30,column:132},end:{line:30,column:193}},"34":{start:{line:30,column:149},end:{line:30,column:193}},"35":{start:{line:30,column:194},end:{line:30,column:213}},"36":{start:{line:32,column:19},end:{line:32,column:24}},"37":{start:{line:40,column:0},end:{line:278,column:3}},"38":{start:{line:47,column:4},end:{line:47,column:32}},"39":{start:{line:49,column:17},end:{line:49,column:50}},"40":{start:{line:56,column:4},end:{line:56,column:22}},"41":{start:{line:62,column:4},end:{line:62,column:28}},"42":{start:{line:68,column:4},end:{line:68,column:32}},"43":{start:{line:74,column:4},end:{line:74,column:36}},"44":{start:{line:80,column:4},end:{line:80,column:56}},"45":{start:{line:89,column:2},end:{line:275,column:6}},"46":{start:{line:92,column:18},end:{line:92,column:22}},"47":{start:{line:94,column:6},end:{line:96,column:7}},"48":{start:{line:95,column:8},end:{line:95,column:96}},"49":{start:{line:98,column:6},end:{line:105,column:37}},"50":{start:{line:99,column:8},end:{line:99,column:51}},"51":{start:{line:101,column:8},end:{line:104,column:10}},"52":{start:{line:116,column:6},end:{line:116,column:75}},"53":{start:{line:129,column:16},end:{line:129,column:48}},"54":{start:{line:130,column:16},end:{line:130,column:48}},"55":{start:{line:131,column:16},end:{line:131,column:69}},"56":{start:{line:132,column:20},end:{line:132,column:73}},"57":{start:{line:134,column:6},end:{line:198,column:7}},"58":{start:{line:135,column:8},end:{line:135,column:28}},"59":{start:{line:136,column:16},end:{line:140,column:9}},"60":{start:{line:142,column:8},end:{line:146,column:9}},"61":{start:{line:143,column:10},end:{line:145,column:13}},"62":{start:{line:148,column:23},end:{line:148,column:74}},"63":{start:{line:150,column:8},end:{line:197,column:11}},"64":{start:{line:152,column:31},end:{line:160,column:11}},"65":{start:{line:161,column:10},end:{line:161,column:62}},"66":{start:{line:163,column:10},end:{line:165,column:11}},"67":{start:{line:164,column:12},end:{line:164,column:99}},"68":{start:{line:167,column:10},end:{line:167,column:73}},"69":{start:{line:170,column:10},end:{line:174,column:11}},"70":{start:{line:171,column:12},end:{line:171,column:40}},"71":{start:{line:173,column:12},end:{line:173,column:74}},"72":{start:{line:176,column:10},end:{line:176,column:43}},"73":{start:{line:180,column:10},end:{line:180,column:121}},"74":{start:{line:182,column:10},end:{line:185,column:13}},"75":{start:{line:189,column:10},end:{line:189,column:35}},"76":{start:{line:191,column:10},end:{line:191,column:31}},"77":{start:{line:192,column:10},end:{line:192,column:22}},"78":{start:{line:194,column:10},end:{line:194,column:19}},"79":{start:{line:195,column:10},end:{line:195,column:31}},"80":{start:{line:196,column:10},end:{line:196,column:35}},"81":{start:{line:201,column:6},end:{line:201,column:31}},"82":{start:{line:215,column:20},end:{line:215,column:47}},"83":{start:{line:218,column:6},end:{line:218,column:113}},"84":{start:{line:219,column:6},end:{line:219,column:63}},"85":{start:{line:221,column:6},end:{line:239,column:7}},"86":{start:{line:222,column:8},end:{line:238,column:53}},"87":{start:{line:223,column:10},end:{line:223,column:60}},"88":{start:{line:225,column:26},end:{line:225,column:28}},"89":{start:{line:226,column:10},end:{line:228,column:13}},"90":{start:{line:227,column:12},end:{line:227,column:42}},"91":{start:{line:229,column:10},end:{line:231,column:14}},"92":{start:{line:230,column:12},end:{line:230,column:87}},"93":{start:{line:235,column:10},end:{line:235,column:59}},"94":{start:{line:237,column:10},end:{line:237,column:69}},"95":{start:{line:241,column:6},end:{line:256,column:41}},"96":{start:{line:242,column:8},end:{line:242,column:58}},"97":{start:{line:245,column:34},end:{line:247,column:10}},"98":{start:{line:246,column:10},end:{line:246,column:93}},"99":{start:{line:249,column:8},end:{line:253,column:9}},"100":{start:{line:250,column:10},end:{line:252,column:13}},"101":{start:{line:255,column:8},end:{line:255,column:20}},"102":{start:{line:269,column:20},end:{line:269,column:42}},"103":{start:{line:270,column:6},end:{line:273,column:34}},"104":{start:{line:272,column:8},end:{line:272,column:57}},"105":{start:{line:277,column:2},end:{line:277,column:14}},"106":{start:{line:280,column:0},end:{line:280,column:23}}},fnMap:{"0":{name:"_interopRequireWildcard",decl:{start:{line:22,column:9},end:{line:22,column:32}},loc:{start:{line:22,column:38},end:{line:22,column:472}},line:22},"1":{name:"_interopRequireDefault",decl:{start:{line:24,column:9},end:{line:24,column:31}},loc:{start:{line:24,column:37},end:{line:24,column:95}},line:24},"2":{name:"_classCallCheck",decl:{start:{line:26,column:9},end:{line:26,column:24}},loc:{start:{line:26,column:48},end:{line:26,column:153}},line:26},"3":{name:"_defineProperties",decl:{start:{line:28,column:9},end:{line:28,column:26}},loc:{start:{line:28,column:42},end:{line:28,column:317}},line:28},"4":{name:"_createClass",decl:{start:{line:30,column:9},end:{line:30,column:21}},loc:{start:{line:30,column:60},end:{line:30,column:215}},line:30},"5":{name:"(anonymous_5)",decl:{start:{line:40,column:0},end:{line:40,column:1}},loc:{start:{line:40,column:12},end:{line:278,column:1}},line:40},"6":{name:"User",decl:{start:{line:46,column:11},end:{line:46,column:15}},loc:{start:{line:46,column:34},end:{line:81,column:3}},line:46},"7":{name:"invite",decl:{start:{line:91,column:20},end:{line:91,column:26}},loc:{start:{line:91,column:36},end:{line:106,column:5}},line:91},"8":{name:"(anonymous_8)",decl:{start:{line:98,column:97},end:{line:98,column:98}},loc:{start:{line:98,column:113},end:{line:100,column:7}},line:98},"9":{name:"(anonymous_9)",decl:{start:{line:100,column:14},end:{line:100,column:15}},loc:{start:{line:100,column:30},end:{line:105,column:7}},line:100},"10":{name:"devices",decl:{start:{line:115,column:20},end:{line:115,column:27}},loc:{start:{line:115,column:30},end:{line:117,column:5}},line:115},"11":{name:"init",decl:{start:{line:128,column:20},end:{line:128,column:24}},loc:{start:{line:128,column:37},end:{line:202,column:5}},line:128},"12":{name:"(anonymous_12)",decl:{start:{line:151,column:14},end:{line:151,column:15}},loc:{start:{line:151,column:26},end:{line:168,column:9}},line:151},"13":{name:"(anonymous_13)",decl:{start:{line:169,column:14},end:{line:169,column:15}},loc:{start:{line:169,column:35},end:{line:177,column:9}},line:169},"14":{name:"(anonymous_14)",decl:{start:{line:178,column:14},end:{line:178,column:15}},loc:{start:{line:178,column:26},end:{line:186,column:9}},line:178},"15":{name:"(anonymous_15)",decl:{start:{line:188,column:14},end:{line:188,column:15}},loc:{start:{line:188,column:26},end:{line:190,column:9}},line:188},"16":{name:"(anonymous_16)",decl:{start:{line:190,column:16},end:{line:190,column:17}},loc:{start:{line:190,column:32},end:{line:193,column:9}},line:190},"17":{name:"(anonymous_17)",decl:{start:{line:193,column:17},end:{line:193,column:18}},loc:{start:{line:193,column:30},end:{line:197,column:9}},line:193},"18":{name:"disconnect",decl:{start:{line:212,column:20},end:{line:212,column:30}},loc:{start:{line:212,column:37},end:{line:257,column:5}},line:212},"19":{name:"(anonymous_19)",decl:{start:{line:222,column:66},end:{line:222,column:67}},loc:{start:{line:222,column:78},end:{line:224,column:9}},line:222},"20":{name:"(anonymous_20)",decl:{start:{line:224,column:16},end:{line:224,column:17}},loc:{start:{line:224,column:35},end:{line:232,column:9}},line:224},"21":{name:"(anonymous_21)",decl:{start:{line:226,column:26},end:{line:226,column:27}},loc:{start:{line:226,column:44},end:{line:228,column:11}},line:226},"22":{name:"(anonymous_22)",decl:{start:{line:229,column:43},end:{line:229,column:44}},loc:{start:{line:229,column:63},end:{line:231,column:11}},line:229},"23":{name:"(anonymous_23)",decl:{start:{line:234,column:14},end:{line:234,column:15}},loc:{start:{line:234,column:26},end:{line:236,column:9}},line:234},"24":{name:"(anonymous_24)",decl:{start:{line:236,column:16},end:{line:236,column:17}},loc:{start:{line:236,column:28},end:{line:238,column:9}},line:236},"25":{name:"(anonymous_25)",decl:{start:{line:241,column:133},end:{line:241,column:134}},loc:{start:{line:241,column:145},end:{line:243,column:7}},line:241},"26":{name:"(anonymous_26)",decl:{start:{line:243,column:14},end:{line:243,column:15}},loc:{start:{line:243,column:33},end:{line:256,column:7}},line:243},"27":{name:"(anonymous_27)",decl:{start:{line:245,column:50},end:{line:245,column:51}},loc:{start:{line:245,column:68},end:{line:247,column:9}},line:245},"28":{name:"get",decl:{start:{line:267,column:20},end:{line:267,column:23}},loc:{start:{line:267,column:29},end:{line:274,column:5}},line:267},"29":{name:"(anonymous_29)",decl:{start:{line:271,column:12},end:{line:271,column:13}},loc:{start:{line:271,column:32},end:{line:273,column:7}},line:271}},branchMap:{"0":{loc:{start:{line:22,column:40},end:{line:22,column:470}},type:"if",locations:[{start:{line:22,column:40},end:{line:22,column:470}},{start:{line:22,column:40},end:{line:22,column:470}}],line:22},"1":{loc:{start:{line:22,column:44},end:{line:22,column:65}},type:"binary-expr",locations:[{start:{line:22,column:44},end:{line:22,column:47}},{start:{line:22,column:51},end:{line:22,column:65}}],line:22},"2":{loc:{start:{line:22,column:107},end:{line:22,column:431}},type:"if",locations:[{start:{line:22,column:107},end:{line:22,column:431}},{start:{line:22,column:107},end:{line:22,column:431}}],line:22},"3":{loc:{start:{line:22,column:149},end:{line:22,column:427}},type:"if",locations:[{start:{line:22,column:149},end:{line:22,column:427}},{start:{line:22,column:149},end:{line:22,column:427}}],line:22},"4":{loc:{start:{line:22,column:214},end:{line:22,column:319}},type:"cond-expr",locations:[{start:{line:22,column:273},end:{line:22,column:314}},{start:{line:22,column:317},end:{line:22,column:319}}],line:22},"5":{loc:{start:{line:22,column:214},end:{line:22,column:270}},type:"binary-expr",locations:[{start:{line:22,column:214},end:{line:22,column:235}},{start:{line:22,column:239},end:{line:22,column:270}}],line:22},"6":{loc:{start:{line:22,column:321},end:{line:22,column:425}},type:"if",locations:[{start:{line:22,column:321},end:{line:22,column:425}},{start:{line:22,column:321},end:{line:22,column:425}}],line:22},"7":{loc:{start:{line:22,column:325},end:{line:22,column:345}},type:"binary-expr",locations:[{start:{line:22,column:325},end:{line:22,column:333}},{start:{line:22,column:337},end:{line:22,column:345}}],line:22},"8":{loc:{start:{line:24,column:46},end:{line:24,column:92}},type:"cond-expr",locations:[{start:{line:24,column:70},end:{line:24,column:73}},{start:{line:24,column:76},end:{line:24,column:92}}],line:24},"9":{loc:{start:{line:24,column:46},end:{line:24,column:67}},type:"binary-expr",locations:[{start:{line:24,column:46},end:{line:24,column:49}},{start:{line:24,column:53},end:{line:24,column:67}}],line:24},"10":{loc:{start:{line:26,column:50},end:{line:26,column:151}},type:"if",locations:[{start:{line:26,column:50},end:{line:26,column:151}},{start:{line:26,column:50},end:{line:26,column:151}}],line:26},"11":{loc:{start:{line:28,column:136},end:{line:28,column:166}},type:"binary-expr",locations:[{start:{line:28,column:136},end:{line:28,column:157}},{start:{line:28,column:161},end:{line:28,column:166}}],line:28},"12":{loc:{start:{line:28,column:200},end:{line:28,column:254}},type:"if",locations:[{start:{line:28,column:200},end:{line:28,column:254}},{start:{line:28,column:200},end:{line:28,column:254}}],line:28},"13":{loc:{start:{line:30,column:62},end:{line:30,column:131}},type:"if",locations:[{start:{line:30,column:62},end:{line:30,column:131}},{start:{line:30,column:62},end:{line:30,column:131}}],line:30},"14":{loc:{start:{line:30,column:132},end:{line:30,column:193}},type:"if",locations:[{start:{line:30,column:132},end:{line:30,column:193}},{start:{line:30,column:132},end:{line:30,column:193}}],line:30},"15":{loc:{start:{line:94,column:6},end:{line:96,column:7}},type:"if",locations:[{start:{line:94,column:6},end:{line:96,column:7}},{start:{line:94,column:6},end:{line:96,column:7}}],line:94},"16":{loc:{start:{line:134,column:6},end:{line:198,column:7}},type:"if",locations:[{start:{line:134,column:6},end:{line:198,column:7}},{start:{line:134,column:6},end:{line:198,column:7}}],line:134},"17":{loc:{start:{line:142,column:8},end:{line:146,column:9}},type:"if",locations:[{start:{line:142,column:8},end:{line:146,column:9}},{start:{line:142,column:8},end:{line:146,column:9}}],line:142},"18":{loc:{start:{line:163,column:10},end:{line:165,column:11}},type:"if",locations:[{start:{line:163,column:10},end:{line:165,column:11}},{start:{line:163,column:10},end:{line:165,column:11}}],line:163},"19":{loc:{start:{line:170,column:10},end:{line:174,column:11}},type:"if",locations:[{start:{line:170,column:10},end:{line:174,column:11}},{start:{line:170,column:10},end:{line:174,column:11}}],line:170},"20":{loc:{start:{line:221,column:6},end:{line:239,column:7}},type:"if",locations:[{start:{line:221,column:6},end:{line:239,column:7}},{start:{line:221,column:6},end:{line:239,column:7}}],line:221},"21":{loc:{start:{line:249,column:8},end:{line:253,column:9}},type:"if",locations:[{start:{line:249,column:8},end:{line:253,column:9}},{start:{line:249,column:8},end:{line:253,column:9}}],line:249},"22":{loc:{start:{line:272,column:15},end:{line:272,column:56}},type:"cond-expr",locations:[{start:{line:272,column:26},end:{line:272,column:49}},{start:{line:272,column:52},end:{line:272,column:56}}],line:272}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/User.js"],names:["initializing","User","snapData","userId","values","Object","assign","val","uid","name","status","lastSeen","anonymous","test","provider","message","cache","user","Promise","reject","Error","Room","create","then","room","invite","data","invites","catch","Log","r","DataSync","list","Device","auth","id1","Math","floor","random","id2","userUid","d","CONNECTED","ts","deviceId","Webcom","INTERNAL","PersistentStorage","get","update","deviceMetadata","sdk","reach","SDK_VERSION","webcom","userAgent","navigator","push","deviceRef","set","device","onDisconnect","NOT_CONNECTED","e","replace","cancel","remove","inviteIds","forEach","all","map","inviteId","devices","hasConnectedDevices","RegExp"],mappings:"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",sourcesContent:["import Webcom from 'webcom/webcom';\nimport * as DataSync from './util/DataSync';\nimport cache from './util/cache';\nimport * as Log from './util/Log';\nimport Room from './Room';\nimport Device from './Device';\nimport { CONNECTED, NOT_CONNECTED } from './util/constants';\n\nlet initializing = false;\n\n/**\n * User informations\n * @public\n */\nexport default class User {\n  /**\n   * Create a user\n   * @param {Webcom/api.DataSnapshot|object} snapData The data snapshot\n   * @access protected\n   */\n  constructor(snapData, userId) {\n    const values = Object.assign({}, snapData.val());\n    /**\n     * User's unique id\n     * @type {string}\n     */\n    // this.uid = snapData.name();\n    this.uid = userId;\n    /**\n     * User's display name\n     * @type {string}\n     */\n    this.name = values.name;\n    /**\n     * User's status\n     * @type {string}\n     */\n    this.status = values.status;\n    /**\n     * User's last know connection ts\n     * @type {number}\n     */\n    this.lastSeen = values.lastSeen;\n    /**\n     * Indicates if the user is an anonymous user\n     * @type {boolean}\n     */\n    this.anonymous = /^anonymous/.test(values.provider);\n    // TODO #Feat: Add 'extra' property for unrestricted additional information ?\n  }\n\n  /**\n   * Invite a user directly. This will create a new Room, log you in it & invite the user.\n   * @param {string} [message] a message to add to the invite\n   * @return {Promise<{room: Room, invite: Invite}, Error>}\n   */\n  invite(message) {\n    if (!cache.user) {\n      return Promise.reject(new Error('Only an authenticated user can invite another User.'));\n    }\n    return Room.create(`${cache.user.uid}-${this.uid}`)\n      .then(room => room.invite([this], null, message))\n      .then(data => ({ room: data.room, invite: data.invites[0] }))\n      .catch(Log.r('User~invite'));\n  }\n\n  /**\n   * List Users's devices. Only for current user.\n   * @access protected\n   * @return {Promise<Device[], Error>}\n   */\n  devices() {\n    return DataSync.list(`_/devices/${this.uid}`, Device);\n  }\n\n  /**\n   * Init the current user\n   * @access protected\n   * @param {json} auth The user's identity (webcom JSON structure)\n   * @param {string} [name] The user's display name\n   * @returns {Promise<User, Error>}\n   */\n  static init(auth, name) {\n    const id1 = Math.floor(Math.random() * 1000);\n    const id2 = Math.floor(Math.random() * 1000);\n    const uid = `${id1}/${id2}/${auth.uid}`;\n    const userUid = `${id1}:${id2}:${auth.uid}`;\n    // const uid = auth.uid;\n    if (!initializing) {\n      initializing = true;\n      const d = { status: CONNECTED, lastSeen: DataSync.ts(), provider: auth.provider };\n      if (name) {\n        Object.assign(d, { name });\n      }\n      let deviceId = Webcom.INTERNAL.PersistentStorage.get(uid);\n      return DataSync.update(`users/${uid}`, d)\n      // Register current device\n        .then(() => {\n          const deviceMetadata = {\n            status: CONNECTED,\n            sdk: {\n              reach: SDK_VERSION, // eslint-disable-line no-undef\n              webcom: Webcom.SDK_VERSION\n            },\n            userAgent: navigator.userAgent\n          };\n          cache.userAgent = deviceMetadata.userAgent;\n          if (deviceId) {\n            return DataSync.update(`_/devices/${uid}/${deviceId}`, deviceMetadata);\n          }\n          return DataSync.push(`_/devices/${uid}`, deviceMetadata);\n        })\n        // Save device\n        .then((deviceRef) => {\n          if (!deviceId) {\n            deviceId = deviceRef.name();\n            Webcom.INTERNAL.PersistentStorage.set(uid, deviceId);\n          }\n          cache.device = deviceId;\n        })\n        // Add onDisconnect actions\n        .then(() => {\n          // Disconnect device\n          DataSync.onDisconnect(`_/devices/${uid}/${deviceId}/status`).set(NOT_CONNECTED);\n          // Update user status\n          DataSync.onDisconnect(`users/${uid}`).update({\n            status: NOT_CONNECTED,\n            lastSeen: DataSync.ts()\n          });\n        })\n        // Get user\n        // .then(() => User.get(uid))\n        .then(() => User.get(userUid))\n        .then((user) => {\n          initializing = false;\n          return user;\n        })\n        .catch((e) => {\n          Log.e(e);\n          initializing = false;\n          return Promise.reject(e);\n        });\n    }\n    // return User.get(uid);\n    return User.get(userUid);\n  }\n\n  /**\n   * Disconnect the current user\n   * @access protected\n   * @param {User} user The current user\n   * @returns {Promise}\n   */\n  static disconnect(user) {\n    // Cancel onDisconnect\n    // due to the problem of long list, uids have a : instead of /\n    const userUid = user.uid.replace(/:/g, '/');\n    // DataSync.onDisconnect(`_/devices/${user.uid}/${cache.device}/status`).cancel();\n    // DataSync.onDisconnect(`users/${user.uid}`).cancel();\n    DataSync.onDisconnect(`_/devices/${userUid}/${cache.device}/status`).cancel();\n    DataSync.onDisconnect(`users/${userUid}`).cancel();\n    if (user.anonymous) {\n      return DataSync.remove(`_/devices/${userUid}`)\n        .then(() => DataSync.get(`_/invites/${userUid}`))\n        .then((invites) => {\n          const inviteIds = [];\n          invites.forEach((invite) => {\n            inviteIds.push(invite.name());\n          });\n          return Promise.all(inviteIds.map(inviteId => DataSync.remove(`_/invites/${userUid}/${inviteId}`)));\n        })\n        // TODO refactor data model for invites so we can delete _/invites/${user.uid}\n        // .then(() => DataSync.remove(`_/invites/${user.uid}`))\n        .then(() => DataSync.remove(`users/${userUid}`))\n        .then(() => {\n          Webcom.INTERNAL.PersistentStorage.remove(userUid);\n        })\n        .catch(Log.r('User#anonymous_disconnect'));\n    }\n    return DataSync.set(`_/devices/${userUid}/${cache.device}/status`, NOT_CONNECTED)\n      .then(() => DataSync.get(`_/devices/${userUid}`))\n      .then((devices) => {\n        // Only change user's status if no other device connected\n        const hasConnectedDevices = devices.forEach(device => (\n          new RegExp(`^${CONNECTED}$`)\n        ).test(device.val().status));\n\n        if (!hasConnectedDevices) {\n          return DataSync.update(`users/${userUid}`, { status: NOT_CONNECTED });\n        }\n        return true;\n      })\n      .catch(Log.r('User#disconnect'));\n  }\n\n  /**\n   * Get a user by its uid\n   * @access private\n   * @param {string} uid The user's uid\n   * @returns {Promise<User, Error>}\n   */\n  static get(uid) {\n    // due to the problem of long list, uids have a : instead of /\n    const userUid = uid.replace(/:/g, '/');\n    return DataSync.get(`users/${userUid}`)\n      // .then(snapData => snapData ? new User(snapData, newUid) : null)\n      .then(snapData => (snapData ? new User(snapData, uid) : null))\n      .catch(Log.r('User#get'));\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1o4xyazur9.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1o4xyazur9.s[1]++;exports.default=void 0;var _webcom=(cov_1o4xyazur9.s[2]++,_interopRequireDefault(__webpack_require__(/*! webcom/webcom */ "webcom/webcom")));var DataSync=(cov_1o4xyazur9.s[3]++,_interopRequireWildcard(__webpack_require__(/*! ./util/DataSync */ "./src/core/util/DataSync.js")));var _cache=(cov_1o4xyazur9.s[4]++,_interopRequireDefault(__webpack_require__(/*! ./util/cache */ "./src/core/util/cache.js")));var Log=(cov_1o4xyazur9.s[5]++,_interopRequireWildcard(__webpack_require__(/*! ./util/Log */ "./src/core/util/Log.js")));var _Room=(cov_1o4xyazur9.s[6]++,_interopRequireDefault(__webpack_require__(/*! ./Room */ "./src/core/Room.js")));var _Device=(cov_1o4xyazur9.s[7]++,_interopRequireDefault(__webpack_require__(/*! ./Device */ "./src/core/Device.js")));var _constants=(cov_1o4xyazur9.s[8]++,__webpack_require__(/*! ./util/constants */ "./src/core/util/constants.js"));function _interopRequireWildcard(obj){cov_1o4xyazur9.f[0]++;cov_1o4xyazur9.s[9]++;if((cov_1o4xyazur9.b[1][0]++,obj)&&(cov_1o4xyazur9.b[1][1]++,obj.__esModule)){cov_1o4xyazur9.b[0][0]++;cov_1o4xyazur9.s[10]++;return obj;}else{cov_1o4xyazur9.b[0][1]++;var newObj=(cov_1o4xyazur9.s[11]++,{});cov_1o4xyazur9.s[12]++;if(obj!=null){cov_1o4xyazur9.b[2][0]++;cov_1o4xyazur9.s[13]++;for(var key in obj){cov_1o4xyazur9.s[14]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_1o4xyazur9.b[3][0]++;var desc=(cov_1o4xyazur9.s[15]++,(cov_1o4xyazur9.b[5][0]++,Object.defineProperty)&&(cov_1o4xyazur9.b[5][1]++,Object.getOwnPropertyDescriptor)?(cov_1o4xyazur9.b[4][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_1o4xyazur9.b[4][1]++,{}));cov_1o4xyazur9.s[16]++;if((cov_1o4xyazur9.b[7][0]++,desc.get)||(cov_1o4xyazur9.b[7][1]++,desc.set)){cov_1o4xyazur9.b[6][0]++;cov_1o4xyazur9.s[17]++;Object.defineProperty(newObj,key,desc);}else{cov_1o4xyazur9.b[6][1]++;cov_1o4xyazur9.s[18]++;newObj[key]=obj[key];}}else{cov_1o4xyazur9.b[3][1]++;}}}else{cov_1o4xyazur9.b[2][1]++;}cov_1o4xyazur9.s[19]++;newObj.default=obj;cov_1o4xyazur9.s[20]++;return newObj;}}function _interopRequireDefault(obj){cov_1o4xyazur9.f[1]++;cov_1o4xyazur9.s[21]++;return(cov_1o4xyazur9.b[9][0]++,obj)&&(cov_1o4xyazur9.b[9][1]++,obj.__esModule)?(cov_1o4xyazur9.b[8][0]++,obj):(cov_1o4xyazur9.b[8][1]++,{default:obj});}function _classCallCheck(instance,Constructor){cov_1o4xyazur9.f[2]++;cov_1o4xyazur9.s[22]++;if(!(instance instanceof Constructor)){cov_1o4xyazur9.b[10][0]++;cov_1o4xyazur9.s[23]++;throw new TypeError("Cannot call a class as a function");}else{cov_1o4xyazur9.b[10][1]++;}}function _defineProperties(target,props){cov_1o4xyazur9.f[3]++;cov_1o4xyazur9.s[24]++;for(var i=0;i<props.length;i++){var descriptor=(cov_1o4xyazur9.s[25]++,props[i]);cov_1o4xyazur9.s[26]++;descriptor.enumerable=(cov_1o4xyazur9.b[11][0]++,descriptor.enumerable)||(cov_1o4xyazur9.b[11][1]++,false);cov_1o4xyazur9.s[27]++;descriptor.configurable=true;cov_1o4xyazur9.s[28]++;if("value"in descriptor){cov_1o4xyazur9.b[12][0]++;cov_1o4xyazur9.s[29]++;descriptor.writable=true;}else{cov_1o4xyazur9.b[12][1]++;}cov_1o4xyazur9.s[30]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_1o4xyazur9.f[4]++;cov_1o4xyazur9.s[31]++;if(protoProps){cov_1o4xyazur9.b[13][0]++;cov_1o4xyazur9.s[32]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_1o4xyazur9.b[13][1]++;}cov_1o4xyazur9.s[33]++;if(staticProps){cov_1o4xyazur9.b[14][0]++;cov_1o4xyazur9.s[34]++;_defineProperties(Constructor,staticProps);}else{cov_1o4xyazur9.b[14][1]++;}cov_1o4xyazur9.s[35]++;return Constructor;}var initializing=(cov_1o4xyazur9.s[36]++,false);var User=(cov_1o4xyazur9.s[37]++,function(){cov_1o4xyazur9.f[5]++;function User(snapData,userId){cov_1o4xyazur9.f[6]++;cov_1o4xyazur9.s[38]++;_classCallCheck(this,User);var values=(cov_1o4xyazur9.s[39]++,Object.assign({},snapData.val()));cov_1o4xyazur9.s[40]++;this.uid=userId;cov_1o4xyazur9.s[41]++;this.name=values.name;cov_1o4xyazur9.s[42]++;this.status=values.status;cov_1o4xyazur9.s[43]++;this.lastSeen=values.lastSeen;cov_1o4xyazur9.s[44]++;this.anonymous=/^anonymous/.test(values.provider);}cov_1o4xyazur9.s[45]++;_createClass(User,[{key:"invite",value:function invite(message){cov_1o4xyazur9.f[7]++;var _this=(cov_1o4xyazur9.s[46]++,this);cov_1o4xyazur9.s[47]++;if(!_cache.default.user){cov_1o4xyazur9.b[15][0]++;cov_1o4xyazur9.s[48]++;return Promise.reject(new Error('Only an authenticated user can invite another User.'));}else{cov_1o4xyazur9.b[15][1]++;}cov_1o4xyazur9.s[49]++;return _Room.default.create("".concat(_cache.default.user.uid,"-").concat(this.uid)).then(function(room){cov_1o4xyazur9.f[8]++;cov_1o4xyazur9.s[50]++;return room.invite([_this],null,message);}).then(function(data){cov_1o4xyazur9.f[9]++;cov_1o4xyazur9.s[51]++;return{room:data.room,invite:data.invites[0]};}).catch(Log.r('User~invite'));}},{key:"devices",value:function devices(){cov_1o4xyazur9.f[10]++;cov_1o4xyazur9.s[52]++;return DataSync.list("_/devices/".concat(this.uid),_Device.default);}}],[{key:"init",value:function init(auth,name){cov_1o4xyazur9.f[11]++;var id1=(cov_1o4xyazur9.s[53]++,Math.floor(Math.random()*1000));var id2=(cov_1o4xyazur9.s[54]++,Math.floor(Math.random()*1000));var uid=(cov_1o4xyazur9.s[55]++,"".concat(id1,"/").concat(id2,"/").concat(auth.uid));var userUid=(cov_1o4xyazur9.s[56]++,"".concat(id1,":").concat(id2,":").concat(auth.uid));cov_1o4xyazur9.s[57]++;if(!initializing){cov_1o4xyazur9.b[16][0]++;cov_1o4xyazur9.s[58]++;initializing=true;var d=(cov_1o4xyazur9.s[59]++,{status:_constants.CONNECTED,lastSeen:DataSync.ts(),provider:auth.provider});cov_1o4xyazur9.s[60]++;if(name){cov_1o4xyazur9.b[17][0]++;cov_1o4xyazur9.s[61]++;Object.assign(d,{name:name});}else{cov_1o4xyazur9.b[17][1]++;}var deviceId=(cov_1o4xyazur9.s[62]++,_webcom.default.INTERNAL.PersistentStorage.get(uid));cov_1o4xyazur9.s[63]++;return DataSync.update("users/".concat(uid),d).then(function(){cov_1o4xyazur9.f[12]++;var deviceMetadata=(cov_1o4xyazur9.s[64]++,{status:_constants.CONNECTED,sdk:{reach:'3.1.7',webcom:_webcom.default.SDK_VERSION},userAgent:navigator.userAgent});cov_1o4xyazur9.s[65]++;_cache.default.userAgent=deviceMetadata.userAgent;cov_1o4xyazur9.s[66]++;if(deviceId){cov_1o4xyazur9.b[18][0]++;cov_1o4xyazur9.s[67]++;return DataSync.update("_/devices/".concat(uid,"/").concat(deviceId),deviceMetadata);}else{cov_1o4xyazur9.b[18][1]++;}cov_1o4xyazur9.s[68]++;return DataSync.push("_/devices/".concat(uid),deviceMetadata);}).then(function(deviceRef){cov_1o4xyazur9.f[13]++;cov_1o4xyazur9.s[69]++;if(!deviceId){cov_1o4xyazur9.b[19][0]++;cov_1o4xyazur9.s[70]++;deviceId=deviceRef.name();cov_1o4xyazur9.s[71]++;_webcom.default.INTERNAL.PersistentStorage.set(uid,deviceId);}else{cov_1o4xyazur9.b[19][1]++;}cov_1o4xyazur9.s[72]++;_cache.default.device=deviceId;}).then(function(){cov_1o4xyazur9.f[14]++;cov_1o4xyazur9.s[73]++;DataSync.onDisconnect("_/devices/".concat(uid,"/").concat(deviceId,"/status")).set(_constants.NOT_CONNECTED);cov_1o4xyazur9.s[74]++;DataSync.onDisconnect("users/".concat(uid)).update({status:_constants.NOT_CONNECTED,lastSeen:DataSync.ts()});}).then(function(){cov_1o4xyazur9.f[15]++;cov_1o4xyazur9.s[75]++;return User.get(userUid);}).then(function(user){cov_1o4xyazur9.f[16]++;cov_1o4xyazur9.s[76]++;initializing=false;cov_1o4xyazur9.s[77]++;return user;}).catch(function(e){cov_1o4xyazur9.f[17]++;cov_1o4xyazur9.s[78]++;Log.e(e);cov_1o4xyazur9.s[79]++;initializing=false;cov_1o4xyazur9.s[80]++;return Promise.reject(e);});}else{cov_1o4xyazur9.b[16][1]++;}cov_1o4xyazur9.s[81]++;return User.get(userUid);}},{key:"disconnect",value:function disconnect(user){cov_1o4xyazur9.f[18]++;var userUid=(cov_1o4xyazur9.s[82]++,user.uid.replace(/:/g,'/'));cov_1o4xyazur9.s[83]++;DataSync.onDisconnect("_/devices/".concat(userUid,"/").concat(_cache.default.device,"/status")).cancel();cov_1o4xyazur9.s[84]++;DataSync.onDisconnect("users/".concat(userUid)).cancel();cov_1o4xyazur9.s[85]++;if(user.anonymous){cov_1o4xyazur9.b[20][0]++;cov_1o4xyazur9.s[86]++;return DataSync.remove("_/devices/".concat(userUid)).then(function(){cov_1o4xyazur9.f[19]++;cov_1o4xyazur9.s[87]++;return DataSync.get("_/invites/".concat(userUid));}).then(function(invites){cov_1o4xyazur9.f[20]++;var inviteIds=(cov_1o4xyazur9.s[88]++,[]);cov_1o4xyazur9.s[89]++;invites.forEach(function(invite){cov_1o4xyazur9.f[21]++;cov_1o4xyazur9.s[90]++;inviteIds.push(invite.name());});cov_1o4xyazur9.s[91]++;return Promise.all(inviteIds.map(function(inviteId){cov_1o4xyazur9.f[22]++;cov_1o4xyazur9.s[92]++;return DataSync.remove("_/invites/".concat(userUid,"/").concat(inviteId));}));}).then(function(){cov_1o4xyazur9.f[23]++;cov_1o4xyazur9.s[93]++;return DataSync.remove("users/".concat(userUid));}).then(function(){cov_1o4xyazur9.f[24]++;cov_1o4xyazur9.s[94]++;_webcom.default.INTERNAL.PersistentStorage.remove(userUid);}).catch(Log.r('User#anonymous_disconnect'));}else{cov_1o4xyazur9.b[20][1]++;}cov_1o4xyazur9.s[95]++;return DataSync.set("_/devices/".concat(userUid,"/").concat(_cache.default.device,"/status"),_constants.NOT_CONNECTED).then(function(){cov_1o4xyazur9.f[25]++;cov_1o4xyazur9.s[96]++;return DataSync.get("_/devices/".concat(userUid));}).then(function(devices){cov_1o4xyazur9.f[26]++;var hasConnectedDevices=(cov_1o4xyazur9.s[97]++,devices.forEach(function(device){cov_1o4xyazur9.f[27]++;cov_1o4xyazur9.s[98]++;return new RegExp("^".concat(_constants.CONNECTED,"$")).test(device.val().status);}));cov_1o4xyazur9.s[99]++;if(!hasConnectedDevices){cov_1o4xyazur9.b[21][0]++;cov_1o4xyazur9.s[100]++;return DataSync.update("users/".concat(userUid),{status:_constants.NOT_CONNECTED});}else{cov_1o4xyazur9.b[21][1]++;}cov_1o4xyazur9.s[101]++;return true;}).catch(Log.r('User#disconnect'));}},{key:"get",value:function get(uid){cov_1o4xyazur9.f[28]++;var userUid=(cov_1o4xyazur9.s[102]++,uid.replace(/:/g,'/'));cov_1o4xyazur9.s[103]++;return DataSync.get("users/".concat(userUid)).then(function(snapData){cov_1o4xyazur9.f[29]++;cov_1o4xyazur9.s[104]++;return snapData?(cov_1o4xyazur9.b[22][0]++,new User(snapData,uid)):(cov_1o4xyazur9.b[22][1]++,null);}).catch(Log.r('User#get'));}}]);cov_1o4xyazur9.s[105]++;return User;}());cov_1o4xyazur9.s[106]++;exports.default=User;

/***/ }),

/***/ "./src/core/stream/Local.js":
/*!**********************************!*\
  !*** ./src/core/stream/Local.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_2jksz1t6at=function(){var path="/home/florent/Projets/reach/src/core/stream/Local.js",hash="e05d73e547ac5b72683e4650b7e81107a86903ea",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/stream/Local.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:18},end:{line:8,column:83}},"3":{start:{line:10,column:10},end:{line:10,column:57}},"4":{start:{line:12,column:13},end:{line:12,column:61}},"5":{start:{line:14,column:15},end:{line:14,column:67}},"6":{start:{line:16,column:13},end:{line:16,column:61}},"7":{start:{line:18,column:17},end:{line:18,column:45}},"8":{start:{line:20,column:13},end:{line:20,column:73}},"9":{start:{line:22,column:39},end:{line:22,column:93}},"10":{start:{line:24,column:40},end:{line:24,column:470}},"11":{start:{line:24,column:69},end:{line:24,column:80}},"12":{start:{line:24,column:103},end:{line:24,column:105}},"13":{start:{line:24,column:107},end:{line:24,column:431}},"14":{start:{line:24,column:126},end:{line:24,column:429}},"15":{start:{line:24,column:149},end:{line:24,column:427}},"16":{start:{line:24,column:214},end:{line:24,column:319}},"17":{start:{line:24,column:321},end:{line:24,column:425}},"18":{start:{line:24,column:349},end:{line:24,column:390}},"19":{start:{line:24,column:400},end:{line:24,column:423}},"20":{start:{line:24,column:432},end:{line:24,column:453}},"21":{start:{line:24,column:454},end:{line:24,column:468}},"22":{start:{line:26,column:50},end:{line:26,column:151}},"23":{start:{line:26,column:92},end:{line:26,column:149}},"24":{start:{line:28,column:44},end:{line:28,column:315}},"25":{start:{line:28,column:102},end:{line:28,column:110}},"26":{start:{line:28,column:112},end:{line:28,column:167}},"27":{start:{line:28,column:168},end:{line:28,column:199}},"28":{start:{line:28,column:200},end:{line:28,column:254}},"29":{start:{line:28,column:227},end:{line:28,column:254}},"30":{start:{line:28,column:255},end:{line:28,column:313}},"31":{start:{line:30,column:62},end:{line:30,column:131}},"32":{start:{line:30,column:78},end:{line:30,column:131}},"33":{start:{line:30,column:132},end:{line:30,column:193}},"34":{start:{line:30,column:149},end:{line:30,column:193}},"35":{start:{line:30,column:194},end:{line:30,column:213}},"36":{start:{line:32,column:19},end:{line:32,column:90}},"37":{start:{line:34,column:26},end:{line:36,column:1}},"38":{start:{line:35,column:2},end:{line:35,column:81}},"39":{start:{line:40,column:25},end:{line:45,column:1}},"40":{start:{line:41,column:2},end:{line:43,column:4}},"41":{start:{line:44,column:2},end:{line:44,column:28}},"42":{start:{line:55,column:0},end:{line:775,column:3}},"43":{start:{line:61,column:4},end:{line:61,column:33}},"44":{start:{line:67,column:4},end:{line:67,column:32}},"45":{start:{line:73,column:4},end:{line:73,column:26}},"46":{start:{line:79,column:4},end:{line:79,column:28}},"47":{start:{line:85,column:4},end:{line:88,column:21}},"48":{start:{line:94,column:4},end:{line:94,column:84}},"49":{start:{line:100,column:4},end:{line:100,column:21}},"50":{start:{line:106,column:4},end:{line:106,column:30}},"51":{start:{line:112,column:4},end:{line:112,column:34}},"52":{start:{line:118,column:4},end:{line:118,column:31}},"53":{start:{line:124,column:4},end:{line:124,column:22}},"54":{start:{line:126,column:4},end:{line:126,column:42}},"55":{start:{line:133,column:4},end:{line:133,column:25}},"56":{start:{line:142,column:2},end:{line:772,column:6}},"57":{start:{line:145,column:6},end:{line:151,column:7}},"58":{start:{line:146,column:8},end:{line:148,column:9}},"59":{start:{line:147,column:10},end:{line:147,column:38}},"60":{start:{line:150,column:8},end:{line:150,column:46}},"61":{start:{line:162,column:6},end:{line:172,column:7}},"62":{start:{line:163,column:8},end:{line:163,column:29}},"63":{start:{line:164,column:13},end:{line:172,column:7}},"64":{start:{line:165,column:8},end:{line:171,column:9}},"65":{start:{line:166,column:10},end:{line:166,column:38}},"66":{start:{line:168,column:10},end:{line:170,column:13}},"67":{start:{line:169,column:12},end:{line:169,column:35}},"68":{start:{line:188,column:18},end:{line:188,column:22}},"69":{start:{line:190,column:6},end:{line:190,column:52}},"70":{start:{line:191,column:6},end:{line:191,column:37}},"71":{start:{line:192,column:6},end:{line:208,column:9}},"72":{start:{line:193,column:8},end:{line:195,column:11}},"73":{start:{line:194,column:10},end:{line:194,column:23}},"74":{start:{line:196,column:8},end:{line:196,column:17}},"75":{start:{line:198,column:8},end:{line:206,column:11}},"76":{start:{line:199,column:33},end:{line:199,column:56}},"77":{start:{line:201,column:10},end:{line:205,column:11}},"78":{start:{line:202,column:12},end:{line:204,column:13}},"79":{start:{line:203,column:14},end:{line:203,column:131}},"80":{start:{line:207,column:8},end:{line:207,column:28}},"81":{start:{line:230,column:18},end:{line:230,column:103}},"82":{start:{line:231,column:18},end:{line:231,column:90}},"83":{start:{line:232,column:6},end:{line:232,column:34}},"84":{start:{line:233,column:24},end:{line:233,column:34}},"85":{start:{line:234,column:18},end:{line:234,column:35}},"86":{start:{line:235,column:18},end:{line:235,column:35}},"87":{start:{line:238,column:6},end:{line:258,column:7}},"88":{start:{line:240,column:10},end:{line:240,column:24}},"89":{start:{line:241,column:10},end:{line:241,column:47}},"90":{start:{line:242,column:10},end:{line:242,column:16}},"91":{start:{line:246,column:10},end:{line:246,column:24}},"92":{start:{line:247,column:10},end:{line:247,column:47}},"93":{start:{line:248,column:10},end:{line:248,column:16}},"94":{start:{line:251,column:10},end:{line:251,column:24}},"95":{start:{line:252,column:10},end:{line:252,column:24}},"96":{start:{line:253,column:10},end:{line:253,column:42}},"97":{start:{line:254,column:10},end:{line:254,column:16}},"98":{start:{line:257,column:10},end:{line:257,column:16}},"99":{start:{line:261,column:6},end:{line:264,column:9}},"100":{start:{line:263,column:8},end:{line:263,column:31}},"101":{start:{line:266,column:6},end:{line:269,column:8}},"102":{start:{line:270,column:6},end:{line:270,column:103}},"103":{start:{line:286,column:6},end:{line:286,column:30}},"104":{start:{line:297,column:6},end:{line:314,column:7}},"105":{start:{line:299,column:8},end:{line:299,column:41}},"106":{start:{line:301,column:19},end:{line:301,column:83}},"107":{start:{line:302,column:8},end:{line:302,column:42}},"108":{start:{line:303,column:8},end:{line:303,column:44}},"109":{start:{line:305,column:8},end:{line:305,column:101}},"110":{start:{line:306,column:8},end:{line:306,column:105}},"111":{start:{line:308,column:8},end:{line:308,column:30}},"112":{start:{line:310,column:8},end:{line:310,column:86}},"113":{start:{line:311,column:8},end:{line:311,column:26}},"114":{start:{line:313,column:8},end:{line:313,column:40}},"115":{start:{line:316,column:6},end:{line:316,column:42}},"116":{start:{line:327,column:6},end:{line:327,column:61}},"117":{start:{line:338,column:6},end:{line:338,column:61}},"118":{start:{line:351,column:19},end:{line:351,column:23}},"119":{start:{line:353,column:6},end:{line:353,column:51}},"120":{start:{line:355,column:6},end:{line:425,column:7}},"121":{start:{line:356,column:8},end:{line:356,column:35}},"122":{start:{line:358,column:19},end:{line:358,column:44}},"123":{start:{line:360,column:29},end:{line:360,column:69}},"124":{start:{line:362,column:8},end:{line:396,column:9}},"125":{start:{line:365,column:10},end:{line:365,column:91}},"126":{start:{line:366,column:15},end:{line:396,column:9}},"127":{start:{line:369,column:10},end:{line:393,column:13}},"128":{start:{line:371,column:26},end:{line:373,column:14}},"129":{start:{line:372,column:14},end:{line:372,column:42}},"130":{start:{line:375,column:12},end:{line:375,column:27}},"131":{start:{line:377,column:29},end:{line:377,column:37}},"132":{start:{line:379,column:12},end:{line:383,column:13}},"133":{start:{line:380,column:14},end:{line:380,column:41}},"134":{start:{line:382,column:14},end:{line:382,column:83}},"135":{start:{line:385,column:12},end:{line:390,column:13}},"136":{start:{line:386,column:24},end:{line:388,column:28}},"137":{start:{line:387,column:16},end:{line:387,column:50}},"138":{start:{line:389,column:14},end:{line:389,column:59}},"139":{start:{line:392,column:12},end:{line:392,column:30}},"140":{start:{line:395,column:10},end:{line:395,column:43}},"141":{start:{line:398,column:8},end:{line:424,column:11}},"142":{start:{line:400,column:10},end:{line:421,column:11}},"143":{start:{line:402,column:12},end:{line:402,column:42}},"144":{start:{line:404,column:12},end:{line:406,column:15}},"145":{start:{line:405,column:14},end:{line:405,column:34}},"146":{start:{line:409,column:30},end:{line:409,column:67}},"147":{start:{line:410,column:24},end:{line:410,column:50}},"148":{start:{line:412,column:12},end:{line:415,column:13}},"149":{start:{line:414,column:14},end:{line:414,column:38}},"150":{start:{line:417,column:12},end:{line:417,column:78}},"151":{start:{line:419,column:12},end:{line:419,column:60}},"152":{start:{line:420,column:12},end:{line:420,column:57}},"153":{start:{line:423,column:10},end:{line:423,column:24}},"154":{start:{line:427,column:6},end:{line:427,column:100}},"155":{start:{line:544,column:19},end:{line:544,column:23}},"156":{start:{line:546,column:6},end:{line:546,column:29}},"157":{start:{line:547,column:19},end:{line:547,column:38}},"158":{start:{line:548,column:6},end:{line:620,column:9}},"159":{start:{line:549,column:8},end:{line:549,column:44}},"160":{start:{line:551,column:8},end:{line:566,column:9}},"161":{start:{line:552,column:27},end:{line:555,column:11}},"162":{start:{line:556,column:10},end:{line:556,column:39}},"163":{start:{line:558,column:10},end:{line:565,column:12}},"164":{start:{line:560,column:29},end:{line:563,column:13}},"165":{start:{line:564,column:12},end:{line:564,column:41}},"166":{start:{line:568,column:8},end:{line:576,column:11}},"167":{start:{line:569,column:10},end:{line:575,column:11}},"168":{start:{line:570,column:30},end:{line:573,column:13}},"169":{start:{line:574,column:12},end:{line:574,column:42}},"170":{start:{line:578,column:8},end:{line:578,column:71}},"171":{start:{line:580,column:8},end:{line:580,column:104}},"172":{start:{line:582,column:8},end:{line:582,column:108}},"173":{start:{line:584,column:19},end:{line:584,column:99}},"174":{start:{line:586,column:20},end:{line:590,column:9}},"175":{start:{line:587,column:10},end:{line:589,column:35}},"176":{start:{line:592,column:8},end:{line:602,column:36}},"177":{start:{line:593,column:27},end:{line:593,column:42}},"178":{start:{line:594,column:10},end:{line:594,column:48}},"179":{start:{line:596,column:10},end:{line:601,column:13}},"180":{start:{line:597,column:12},end:{line:599,column:15}},"181":{start:{line:598,column:14},end:{line:598,column:50}},"182":{start:{line:600,column:12},end:{line:600,column:57}},"183":{start:{line:603,column:8},end:{line:615,column:28}},"184":{start:{line:604,column:27},end:{line:604,column:42}},"185":{start:{line:605,column:10},end:{line:605,column:51}},"186":{start:{line:607,column:25},end:{line:607,column:98}},"187":{start:{line:611,column:10},end:{line:613,column:13}},"188":{start:{line:612,column:12},end:{line:612,column:35}},"189":{start:{line:616,column:8},end:{line:618,column:11}},"190":{start:{line:619,column:8},end:{line:619,column:28}},"191":{start:{line:625,column:19},end:{line:625,column:23}},"192":{start:{line:627,column:19},end:{line:627,column:67}},"193":{start:{line:629,column:31},end:{line:629,column:59}},"194":{start:{line:631,column:6},end:{line:642,column:9}},"195":{start:{line:632,column:8},end:{line:637,column:9}},"196":{start:{line:634,column:10},end:{line:634,column:31}},"197":{start:{line:635,column:15},end:{line:637,column:9}},"198":{start:{line:636,column:10},end:{line:636,column:50}},"199":{start:{line:639,column:8},end:{line:641,column:9}},"200":{start:{line:640,column:10},end:{line:640,column:120}},"201":{start:{line:643,column:6},end:{line:643,column:44}},"202":{start:{line:648,column:6},end:{line:648,column:33}},"203":{start:{line:656,column:6},end:{line:656,column:31}},"204":{start:{line:661,column:19},end:{line:661,column:23}},"205":{start:{line:663,column:6},end:{line:728,column:7}},"206":{start:{line:664,column:8},end:{line:666,column:9}},"207":{start:{line:665,column:10},end:{line:665,column:61}},"208":{start:{line:668,column:27},end:{line:668,column:29}},"209":{start:{line:669,column:8},end:{line:677,column:11}},"210":{start:{line:671,column:10},end:{line:671,column:52}},"211":{start:{line:674,column:10},end:{line:676,column:11}},"212":{start:{line:675,column:12},end:{line:675,column:51}},"213":{start:{line:679,column:8},end:{line:698,column:9}},"214":{start:{line:680,column:10},end:{line:697,column:13}},"215":{start:{line:681,column:12},end:{line:696,column:15}},"216":{start:{line:682,column:14},end:{line:695,column:15}},"217":{start:{line:683,column:32},end:{line:685,column:18}},"218":{start:{line:684,column:18},end:{line:684,column:84}},"219":{start:{line:687,column:16},end:{line:689,column:17}},"220":{start:{line:688,column:18},end:{line:688,column:63}},"221":{start:{line:691,column:16},end:{line:694,column:17}},"222":{start:{line:693,column:18},end:{line:693,column:87}},"223":{start:{line:701,column:8},end:{line:701,column:91}},"224":{start:{line:703,column:8},end:{line:705,column:10}},"225":{start:{line:704,column:10},end:{line:704,column:38}},"226":{start:{line:707,column:8},end:{line:707,column:43}},"227":{start:{line:708,column:8},end:{line:710,column:22}},"228":{start:{line:712,column:8},end:{line:714,column:11}},"229":{start:{line:713,column:10},end:{line:713,column:72}},"230":{start:{line:715,column:13},end:{line:728,column:7}},"231":{start:{line:717,column:8},end:{line:717,column:35}},"232":{start:{line:718,column:8},end:{line:718,column:46}},"233":{start:{line:719,column:8},end:{line:719,column:25}},"234":{start:{line:721,column:8},end:{line:723,column:11}},"235":{start:{line:722,column:10},end:{line:722,column:30}},"236":{start:{line:725,column:8},end:{line:727,column:11}},"237":{start:{line:726,column:10},end:{line:726,column:40}},"238":{start:{line:735,column:6},end:{line:735,column:32}},"239":{start:{line:743,column:6},end:{line:743,column:25}},"240":{start:{line:748,column:6},end:{line:750,column:7}},"241":{start:{line:749,column:8},end:{line:749,column:91}},"242":{start:{line:752,column:27},end:{line:757,column:7}},"243":{start:{line:758,column:25},end:{line:762,column:25}},"244":{start:{line:763,column:6},end:{line:763,column:51}},"245":{start:{line:764,column:6},end:{line:766,column:9}},"246":{start:{line:767,column:6},end:{line:770,column:9}},"247":{start:{line:768,column:8},end:{line:768,column:35}},"248":{start:{line:769,column:8},end:{line:769,column:28}},"249":{start:{line:774,column:2},end:{line:774,column:15}},"250":{start:{line:777,column:0},end:{line:777,column:24}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:22,column:9},end:{line:22,column:31}},loc:{start:{line:22,column:37},end:{line:22,column:95}},line:22},"1":{name:"_interopRequireWildcard",decl:{start:{line:24,column:9},end:{line:24,column:32}},loc:{start:{line:24,column:38},end:{line:24,column:472}},line:24},"2":{name:"_classCallCheck",decl:{start:{line:26,column:9},end:{line:26,column:24}},loc:{start:{line:26,column:48},end:{line:26,column:153}},line:26},"3":{name:"_defineProperties",decl:{start:{line:28,column:9},end:{line:28,column:26}},loc:{start:{line:28,column:42},end:{line:28,column:317}},line:28},"4":{name:"_createClass",decl:{start:{line:30,column:9},end:{line:30,column:21}},loc:{start:{line:30,column:60},end:{line:30,column:215}},line:30},"5":{name:"_getConstraintValue",decl:{start:{line:34,column:35},end:{line:34,column:54}},loc:{start:{line:34,column:74},end:{line:36,column:1}},line:34},"6":{name:"_setConstrainValue",decl:{start:{line:40,column:34},end:{line:40,column:52}},loc:{start:{line:40,column:86},end:{line:45,column:1}},line:40},"7":{name:"(anonymous_7)",decl:{start:{line:55,column:0},end:{line:55,column:1}},loc:{start:{line:55,column:12},end:{line:775,column:1}},line:55},"8":{name:"Local",decl:{start:{line:60,column:11},end:{line:60,column:16}},loc:{start:{line:60,column:25},end:{line:134,column:3}},line:60},"9":{name:"on",decl:{start:{line:144,column:20},end:{line:144,column:22}},loc:{start:{line:144,column:40},end:{line:152,column:5}},line:144},"10":{name:"off",decl:{start:{line:161,column:20},end:{line:161,column:23}},loc:{start:{line:161,column:41},end:{line:173,column:5}},line:161},"11":{name:"(anonymous_11)",decl:{start:{line:168,column:65},end:{line:168,column:66}},loc:{start:{line:168,column:79},end:{line:170,column:11}},line:168},"12":{name:"updateConstraints",decl:{start:{line:187,column:20},end:{line:187,column:37}},loc:{start:{line:187,column:51},end:{line:209,column:5}},line:187},"13":{name:"(anonymous_13)",decl:{start:{line:192,column:73},end:{line:192,column:74}},loc:{start:{line:192,column:86},end:{line:197,column:7}},line:192},"14":{name:"(anonymous_14)",decl:{start:{line:193,column:68},end:{line:193,column:69}},loc:{start:{line:193,column:82},end:{line:195,column:9}},line:193},"15":{name:"(anonymous_15)",decl:{start:{line:197,column:14},end:{line:197,column:15}},loc:{start:{line:197,column:31},end:{line:208,column:7}},line:197},"16":{name:"(anonymous_16)",decl:{start:{line:198,column:35},end:{line:198,column:36}},loc:{start:{line:198,column:51},end:{line:206,column:9}},line:198},"17":{name:"mute",decl:{start:{line:229,column:20},end:{line:229,column:24}},loc:{start:{line:229,column:27},end:{line:271,column:5}},line:229},"18":{name:"(anonymous_18)",decl:{start:{line:261,column:21},end:{line:261,column:22}},loc:{start:{line:261,column:38},end:{line:264,column:7}},line:261},"19":{name:"unMute",decl:{start:{line:285,column:20},end:{line:285,column:26}},loc:{start:{line:285,column:34},end:{line:287,column:5}},line:285},"20":{name:"close",decl:{start:{line:296,column:20},end:{line:296,column:25}},loc:{start:{line:296,column:28},end:{line:317,column:5}},line:296},"21":{name:"switchCamera",decl:{start:{line:326,column:20},end:{line:326,column:32}},loc:{start:{line:326,column:43},end:{line:328,column:5}},line:326},"22":{name:"switchMicrophone",decl:{start:{line:337,column:20},end:{line:337,column:36}},loc:{start:{line:337,column:47},end:{line:339,column:5}},line:337},"23":{name:"_switchDevice",decl:{start:{line:350,column:20},end:{line:350,column:33}},loc:{start:{line:350,column:50},end:{line:428,column:5}},line:350},"24":{name:"(anonymous_24)",decl:{start:{line:355,column:38},end:{line:355,column:39}},loc:{start:{line:355,column:55},end:{line:357,column:7}},line:355},"25":{name:"(anonymous_25)",decl:{start:{line:369,column:47},end:{line:369,column:48}},loc:{start:{line:369,column:60},end:{line:393,column:11}},line:369},"26":{name:"(anonymous_26)",decl:{start:{line:371,column:58},end:{line:371,column:59}},loc:{start:{line:371,column:81},end:{line:373,column:13}},line:371},"27":{name:"(anonymous_27)",decl:{start:{line:379,column:42},end:{line:379,column:43}},loc:{start:{line:379,column:60},end:{line:381,column:13}},line:379},"28":{name:"(anonymous_28)",decl:{start:{line:386,column:65},end:{line:386,column:66}},loc:{start:{line:386,column:78},end:{line:388,column:15}},line:386},"29":{name:"(anonymous_29)",decl:{start:{line:398,column:25},end:{line:398,column:26}},loc:{start:{line:398,column:43},end:{line:422,column:9}},line:398},"30":{name:"(anonymous_30)",decl:{start:{line:404,column:45},end:{line:404,column:46}},loc:{start:{line:404,column:62},end:{line:406,column:13}},line:404},"31":{name:"(anonymous_31)",decl:{start:{line:422,column:16},end:{line:422,column:17}},loc:{start:{line:422,column:28},end:{line:424,column:9}},line:422},"32":{name:"publish",decl:{start:{line:543,column:20},end:{line:543,column:27}},loc:{start:{line:543,column:42},end:{line:621,column:5}},line:543},"33":{name:"(anonymous_33)",decl:{start:{line:548,column:100},end:{line:548,column:101}},loc:{start:{line:548,column:121},end:{line:620,column:7}},line:548},"34":{name:"(anonymous_34)",decl:{start:{line:558,column:43},end:{line:558,column:44}},loc:{start:{line:558,column:55},end:{line:565,column:11}},line:558},"35":{name:"(anonymous_35)",decl:{start:{line:568,column:42},end:{line:568,column:43}},loc:{start:{line:568,column:54},end:{line:576,column:9}},line:568},"36":{name:"value",decl:{start:{line:586,column:29},end:{line:586,column:34}},loc:{start:{line:586,column:45},end:{line:590,column:9}},line:586},"37":{name:"(anonymous_37)",decl:{start:{line:592,column:41},end:{line:592,column:42}},loc:{start:{line:592,column:61},end:{line:602,column:9}},line:592},"38":{name:"(anonymous_38)",decl:{start:{line:596,column:124},end:{line:596,column:125}},loc:{start:{line:596,column:138},end:{line:601,column:11}},line:596},"39":{name:"(anonymous_39)",decl:{start:{line:597,column:71},end:{line:597,column:72}},loc:{start:{line:597,column:85},end:{line:599,column:13}},line:597},"40":{name:"(anonymous_40)",decl:{start:{line:603,column:43},end:{line:603,column:44}},loc:{start:{line:603,column:63},end:{line:615,column:9}},line:603},"41":{name:"(anonymous_41)",decl:{start:{line:611,column:77},end:{line:611,column:78}},loc:{start:{line:611,column:91},end:{line:613,column:11}},line:611},"42":{name:"set",decl:{start:{line:624,column:18},end:{line:624,column:21}},loc:{start:{line:624,column:35},end:{line:649,column:5}},line:624},"43":{name:"(anonymous_43)",decl:{start:{line:631,column:33},end:{line:631,column:34}},loc:{start:{line:631,column:49},end:{line:642,column:7}},line:631},"44":{name:"get",decl:{start:{line:655,column:18},end:{line:655,column:21}},loc:{start:{line:655,column:24},end:{line:657,column:5}},line:655},"45":{name:"set",decl:{start:{line:660,column:18},end:{line:660,column:21}},loc:{start:{line:660,column:35},end:{line:736,column:5}},line:660},"46":{name:"(anonymous_46)",decl:{start:{line:669,column:40},end:{line:669,column:41}},loc:{start:{line:669,column:57},end:{line:677,column:9}},line:669},"47":{name:"(anonymous_47)",decl:{start:{line:680,column:40},end:{line:680,column:41}},loc:{start:{line:680,column:59},end:{line:697,column:11}},line:680},"48":{name:"(anonymous_48)",decl:{start:{line:681,column:46},end:{line:681,column:47}},loc:{start:{line:681,column:62},end:{line:696,column:13}},line:681},"49":{name:"(anonymous_49)",decl:{start:{line:683,column:73},end:{line:683,column:74}},loc:{start:{line:683,column:91},end:{line:685,column:17}},line:683},"50":{name:"(anonymous_50)",decl:{start:{line:703,column:33},end:{line:703,column:34}},loc:{start:{line:703,column:45},end:{line:705,column:9}},line:703},"51":{name:"(anonymous_51)",decl:{start:{line:712,column:37},end:{line:712,column:38}},loc:{start:{line:712,column:63},end:{line:714,column:9}},line:712},"52":{name:"(anonymous_52)",decl:{start:{line:721,column:39},end:{line:721,column:40}},loc:{start:{line:721,column:56},end:{line:723,column:9}},line:721},"53":{name:"(anonymous_53)",decl:{start:{line:725,column:37},end:{line:725,column:38}},loc:{start:{line:725,column:63},end:{line:727,column:9}},line:725},"54":{name:"get",decl:{start:{line:742,column:18},end:{line:742,column:21}},loc:{start:{line:742,column:24},end:{line:744,column:5}},line:742},"55":{name:"getLocalVideo",decl:{start:{line:747,column:20},end:{line:747,column:33}},loc:{start:{line:747,column:72},end:{line:771,column:5}},line:747},"56":{name:"(anonymous_56)",decl:{start:{line:767,column:80},end:{line:767,column:81}},loc:{start:{line:767,column:97},end:{line:770,column:7}},line:767}},branchMap:{"0":{loc:{start:{line:22,column:46},end:{line:22,column:92}},type:"cond-expr",locations:[{start:{line:22,column:70},end:{line:22,column:73}},{start:{line:22,column:76},end:{line:22,column:92}}],line:22},"1":{loc:{start:{line:22,column:46},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:46},end:{line:22,column:49}},{start:{line:22,column:53},end:{line:22,column:67}}],line:22},"2":{loc:{start:{line:24,column:40},end:{line:24,column:470}},type:"if",locations:[{start:{line:24,column:40},end:{line:24,column:470}},{start:{line:24,column:40},end:{line:24,column:470}}],line:24},"3":{loc:{start:{line:24,column:44},end:{line:24,column:65}},type:"binary-expr",locations:[{start:{line:24,column:44},end:{line:24,column:47}},{start:{line:24,column:51},end:{line:24,column:65}}],line:24},"4":{loc:{start:{line:24,column:107},end:{line:24,column:431}},type:"if",locations:[{start:{line:24,column:107},end:{line:24,column:431}},{start:{line:24,column:107},end:{line:24,column:431}}],line:24},"5":{loc:{start:{line:24,column:149},end:{line:24,column:427}},type:"if",locations:[{start:{line:24,column:149},end:{line:24,column:427}},{start:{line:24,column:149},end:{line:24,column:427}}],line:24},"6":{loc:{start:{line:24,column:214},end:{line:24,column:319}},type:"cond-expr",locations:[{start:{line:24,column:273},end:{line:24,column:314}},{start:{line:24,column:317},end:{line:24,column:319}}],line:24},"7":{loc:{start:{line:24,column:214},end:{line:24,column:270}},type:"binary-expr",locations:[{start:{line:24,column:214},end:{line:24,column:235}},{start:{line:24,column:239},end:{line:24,column:270}}],line:24},"8":{loc:{start:{line:24,column:321},end:{line:24,column:425}},type:"if",locations:[{start:{line:24,column:321},end:{line:24,column:425}},{start:{line:24,column:321},end:{line:24,column:425}}],line:24},"9":{loc:{start:{line:24,column:325},end:{line:24,column:345}},type:"binary-expr",locations:[{start:{line:24,column:325},end:{line:24,column:333}},{start:{line:24,column:337},end:{line:24,column:345}}],line:24},"10":{loc:{start:{line:26,column:50},end:{line:26,column:151}},type:"if",locations:[{start:{line:26,column:50},end:{line:26,column:151}},{start:{line:26,column:50},end:{line:26,column:151}}],line:26},"11":{loc:{start:{line:28,column:136},end:{line:28,column:166}},type:"binary-expr",locations:[{start:{line:28,column:136},end:{line:28,column:157}},{start:{line:28,column:161},end:{line:28,column:166}}],line:28},"12":{loc:{start:{line:28,column:200},end:{line:28,column:254}},type:"if",locations:[{start:{line:28,column:200},end:{line:28,column:254}},{start:{line:28,column:200},end:{line:28,column:254}}],line:28},"13":{loc:{start:{line:30,column:62},end:{line:30,column:131}},type:"if",locations:[{start:{line:30,column:62},end:{line:30,column:131}},{start:{line:30,column:62},end:{line:30,column:131}}],line:30},"14":{loc:{start:{line:30,column:132},end:{line:30,column:193}},type:"if",locations:[{start:{line:30,column:132},end:{line:30,column:193}},{start:{line:30,column:132},end:{line:30,column:193}}],line:30},"15":{loc:{start:{line:35,column:9},end:{line:35,column:80}},type:"binary-expr",locations:[{start:{line:35,column:9},end:{line:35,column:32}},{start:{line:35,column:36},end:{line:35,column:59}},{start:{line:35,column:63},end:{line:35,column:80}}],line:35},"16":{loc:{start:{line:94,column:21},end:{line:94,column:83}},type:"binary-expr",locations:[{start:{line:94,column:21},end:{line:94,column:37}},{start:{line:94,column:41},end:{line:94,column:83}}],line:94},"17":{loc:{start:{line:145,column:6},end:{line:151,column:7}},type:"if",locations:[{start:{line:145,column:6},end:{line:151,column:7}},{start:{line:145,column:6},end:{line:151,column:7}}],line:145},"18":{loc:{start:{line:146,column:8},end:{line:148,column:9}},type:"if",locations:[{start:{line:146,column:8},end:{line:148,column:9}},{start:{line:146,column:8},end:{line:148,column:9}}],line:146},"19":{loc:{start:{line:162,column:6},end:{line:172,column:7}},type:"if",locations:[{start:{line:162,column:6},end:{line:172,column:7}},{start:{line:162,column:6},end:{line:172,column:7}}],line:162},"20":{loc:{start:{line:164,column:13},end:{line:172,column:7}},type:"if",locations:[{start:{line:164,column:13},end:{line:172,column:7}},{start:{line:164,column:13},end:{line:172,column:7}}],line:164},"21":{loc:{start:{line:165,column:8},end:{line:171,column:9}},type:"if",locations:[{start:{line:165,column:8},end:{line:171,column:9}},{start:{line:165,column:8},end:{line:171,column:9}}],line:165},"22":{loc:{start:{line:193,column:9},end:{line:193,column:58}},type:"binary-expr",locations:[{start:{line:193,column:9},end:{line:193,column:52}},{start:{line:193,column:56},end:{line:193,column:58}}],line:193},"23":{loc:{start:{line:201,column:10},end:{line:205,column:11}},type:"if",locations:[{start:{line:201,column:10},end:{line:205,column:11}},{start:{line:201,column:10},end:{line:205,column:11}}],line:201},"24":{loc:{start:{line:202,column:12},end:{line:204,column:13}},type:"if",locations:[{start:{line:202,column:12},end:{line:204,column:13}},{start:{line:202,column:12},end:{line:204,column:13}}],line:202},"25":{loc:{start:{line:202,column:16},end:{line:202,column:72}},type:"binary-expr",locations:[{start:{line:202,column:16},end:{line:202,column:41}},{start:{line:202,column:45},end:{line:202,column:72}}],line:202},"26":{loc:{start:{line:203,column:74},end:{line:203,column:129}},type:"cond-expr",locations:[{start:{line:203,column:104},end:{line:203,column:116}},{start:{line:203,column:119},end:{line:203,column:129}}],line:203},"27":{loc:{start:{line:230,column:18},end:{line:230,column:103}},type:"cond-expr",locations:[{start:{line:230,column:71},end:{line:230,column:83}},{start:{line:230,column:86},end:{line:230,column:103}}],line:230},"28":{loc:{start:{line:230,column:18},end:{line:230,column:68}},type:"binary-expr",locations:[{start:{line:230,column:18},end:{line:230,column:38}},{start:{line:230,column:42},end:{line:230,column:68}}],line:230},"29":{loc:{start:{line:231,column:18},end:{line:231,column:90}},type:"cond-expr",locations:[{start:{line:231,column:71},end:{line:231,column:83}},{start:{line:231,column:86},end:{line:231,column:90}}],line:231},"30":{loc:{start:{line:231,column:18},end:{line:231,column:68}},type:"binary-expr",locations:[{start:{line:231,column:18},end:{line:231,column:38}},{start:{line:231,column:42},end:{line:231,column:68}}],line:231},"31":{loc:{start:{line:238,column:6},end:{line:258,column:7}},type:"switch",locations:[{start:{line:239,column:8},end:{line:242,column:16}},{start:{line:244,column:8},end:{line:244,column:31}},{start:{line:245,column:8},end:{line:248,column:16}},{start:{line:250,column:8},end:{line:254,column:16}},{start:{line:256,column:8},end:{line:257,column:16}}],line:238},"32":{loc:{start:{line:297,column:6},end:{line:314,column:7}},type:"if",locations:[{start:{line:297,column:6},end:{line:314,column:7}},{start:{line:297,column:6},end:{line:314,column:7}}],line:297},"33":{loc:{start:{line:355,column:6},end:{line:425,column:7}},type:"if",locations:[{start:{line:355,column:6},end:{line:425,column:7}},{start:{line:355,column:6},end:{line:425,column:7}}],line:355},"34":{loc:{start:{line:362,column:8},end:{line:396,column:9}},type:"if",locations:[{start:{line:362,column:8},end:{line:396,column:9}},{start:{line:362,column:8},end:{line:396,column:9}}],line:362},"35":{loc:{start:{line:362,column:12},end:{line:362,column:42}},type:"binary-expr",locations:[{start:{line:362,column:12},end:{line:362,column:21}},{start:{line:362,column:25},end:{line:362,column:42}}],line:362},"36":{loc:{start:{line:366,column:15},end:{line:396,column:9}},type:"if",locations:[{start:{line:366,column:15},end:{line:396,column:9}},{start:{line:366,column:15},end:{line:396,column:9}}],line:366},"37":{loc:{start:{line:379,column:12},end:{line:383,column:13}},type:"if",locations:[{start:{line:379,column:12},end:{line:383,column:13}},{start:{line:379,column:12},end:{line:383,column:13}}],line:379},"38":{loc:{start:{line:379,column:16},end:{line:381,column:14}},type:"binary-expr",locations:[{start:{line:379,column:16},end:{line:379,column:24}},{start:{line:379,column:28},end:{line:381,column:14}}],line:379},"39":{loc:{start:{line:385,column:12},end:{line:390,column:13}},type:"if",locations:[{start:{line:385,column:12},end:{line:390,column:13}},{start:{line:385,column:12},end:{line:390,column:13}}],line:385},"40":{loc:{start:{line:385,column:16},end:{line:385,column:47}},type:"binary-expr",locations:[{start:{line:385,column:16},end:{line:385,column:25}},{start:{line:385,column:29},end:{line:385,column:47}}],line:385},"41":{loc:{start:{line:386,column:24},end:{line:388,column:28}},type:"cond-expr",locations:[{start:{line:386,column:47},end:{line:388,column:24}},{start:{line:388,column:27},end:{line:388,column:28}}],line:386},"42":{loc:{start:{line:400,column:10},end:{line:421,column:11}},type:"if",locations:[{start:{line:400,column:10},end:{line:421,column:11}},{start:{line:400,column:10},end:{line:421,column:11}}],line:400},"43":{loc:{start:{line:412,column:12},end:{line:415,column:13}},type:"if",locations:[{start:{line:412,column:12},end:{line:415,column:13}},{start:{line:412,column:12},end:{line:415,column:13}}],line:412},"44":{loc:{start:{line:551,column:8},end:{line:566,column:9}},type:"if",locations:[{start:{line:551,column:8},end:{line:566,column:9}},{start:{line:551,column:8},end:{line:566,column:9}}],line:551},"45":{loc:{start:{line:569,column:10},end:{line:575,column:11}},type:"if",locations:[{start:{line:569,column:10},end:{line:575,column:11}},{start:{line:569,column:10},end:{line:575,column:11}}],line:569},"46":{loc:{start:{line:589,column:13},end:{line:589,column:33}},type:"binary-expr",locations:[{start:{line:589,column:13},end:{line:589,column:27}},{start:{line:589,column:31},end:{line:589,column:33}}],line:589},"47":{loc:{start:{line:597,column:13},end:{line:597,column:61}},type:"binary-expr",locations:[{start:{line:597,column:13},end:{line:597,column:55}},{start:{line:597,column:59},end:{line:597,column:61}}],line:597},"48":{loc:{start:{line:627,column:19},end:{line:627,column:67}},type:"binary-expr",locations:[{start:{line:627,column:19},end:{line:627,column:30}},{start:{line:627,column:34},end:{line:627,column:67}}],line:627},"49":{loc:{start:{line:632,column:8},end:{line:637,column:9}},type:"if",locations:[{start:{line:632,column:8},end:{line:637,column:9}},{start:{line:632,column:8},end:{line:637,column:9}}],line:632},"50":{loc:{start:{line:635,column:15},end:{line:637,column:9}},type:"if",locations:[{start:{line:635,column:15},end:{line:637,column:9}},{start:{line:635,column:15},end:{line:637,column:9}}],line:635},"51":{loc:{start:{line:639,column:8},end:{line:641,column:9}},type:"if",locations:[{start:{line:639,column:8},end:{line:641,column:9}},{start:{line:639,column:8},end:{line:641,column:9}}],line:639},"52":{loc:{start:{line:639,column:12},end:{line:639,column:60}},type:"binary-expr",locations:[{start:{line:639,column:12},end:{line:639,column:33}},{start:{line:639,column:37},end:{line:639,column:60}}],line:639},"53":{loc:{start:{line:640,column:67},end:{line:640,column:118}},type:"cond-expr",locations:[{start:{line:640,column:93},end:{line:640,column:105}},{start:{line:640,column:108},end:{line:640,column:118}}],line:640},"54":{loc:{start:{line:663,column:6},end:{line:728,column:7}},type:"if",locations:[{start:{line:663,column:6},end:{line:728,column:7}},{start:{line:663,column:6},end:{line:728,column:7}}],line:663},"55":{loc:{start:{line:664,column:8},end:{line:666,column:9}},type:"if",locations:[{start:{line:664,column:8},end:{line:666,column:9}},{start:{line:664,column:8},end:{line:666,column:9}}],line:664},"56":{loc:{start:{line:674,column:10},end:{line:676,column:11}},type:"if",locations:[{start:{line:674,column:10},end:{line:676,column:11}},{start:{line:674,column:10},end:{line:676,column:11}}],line:674},"57":{loc:{start:{line:679,column:8},end:{line:698,column:9}},type:"if",locations:[{start:{line:679,column:8},end:{line:698,column:9}},{start:{line:679,column:8},end:{line:698,column:9}}],line:679},"58":{loc:{start:{line:682,column:14},end:{line:695,column:15}},type:"if",locations:[{start:{line:682,column:14},end:{line:695,column:15}},{start:{line:682,column:14},end:{line:695,column:15}}],line:682},"59":{loc:{start:{line:684,column:25},end:{line:684,column:83}},type:"binary-expr",locations:[{start:{line:684,column:25},end:{line:684,column:44}},{start:{line:684,column:48},end:{line:684,column:83}}],line:684},"60":{loc:{start:{line:687,column:16},end:{line:689,column:17}},type:"if",locations:[{start:{line:687,column:16},end:{line:689,column:17}},{start:{line:687,column:16},end:{line:689,column:17}}],line:687},"61":{loc:{start:{line:687,column:20},end:{line:687,column:67}},type:"binary-expr",locations:[{start:{line:687,column:20},end:{line:687,column:42}},{start:{line:687,column:46},end:{line:687,column:67}}],line:687},"62":{loc:{start:{line:691,column:16},end:{line:694,column:17}},type:"if",locations:[{start:{line:691,column:16},end:{line:694,column:17}},{start:{line:691,column:16},end:{line:694,column:17}}],line:691},"63":{loc:{start:{line:691,column:20},end:{line:691,column:120}},type:"binary-expr",locations:[{start:{line:691,column:20},end:{line:691,column:42}},{start:{line:691,column:46},end:{line:691,column:95}},{start:{line:691,column:99},end:{line:691,column:120}}],line:691},"64":{loc:{start:{line:715,column:13},end:{line:728,column:7}},type:"if",locations:[{start:{line:715,column:13},end:{line:728,column:7}},{start:{line:715,column:13},end:{line:728,column:7}}],line:715},"65":{loc:{start:{line:715,column:17},end:{line:715,column:43}},type:"binary-expr",locations:[{start:{line:715,column:17},end:{line:715,column:27}},{start:{line:715,column:31},end:{line:715,column:43}}],line:715},"66":{loc:{start:{line:748,column:6},end:{line:750,column:7}},type:"if",locations:[{start:{line:748,column:6},end:{line:750,column:7}},{start:{line:748,column:6},end:{line:750,column:7}}],line:748}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0],"66":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/stream/Local.js"],names:["_facingModes","Media","facingMode","USER","ENVIRONMENT","_getConstraintValue","constraints","prop","exact","ideal","_setConstrainValue","other","value","Local","values","roomId","uid","type","muted","Object","assign","audio","video","container","cache","config","localStreamContainer","node","peerConnections","status","NONE","isVideoLoaded","_inputs","_callbacks","event","callback","Events","local","supports","push","filter","cb","Log","d","navigator","mediaDevices","getUserMedia","catch","e","WEBRTC_ERROR","forEach","then","media","kind","constraintsValue","deviceId","track","StreamTypes","AUDIO","state","tracks","getAudioTracks","VIDEO","SCREEN_SHARING","getVideoTracks","AUDIO_VIDEO","getTracks","enabled","DataSync","set","mute","CLOSED","CLOSING","indexOf","path","off","onDisconnect","cancel","remove","Promise","resolve","_switchDevice","some","next","currentModeIdx","length","devices","map","mediaDevice","sort","nextDevice","device","reject","Error","idx","findIndex","v","stop","props","reverse","updateConstraints","sharedStream","streamMetaData","streamRef","name","streamSize","height","videoHeight","width","videoWidth","update","onloadeddata","window","addEventListener","streams","shared","snapData","val","on","subscriber","offer","pc","SUBSCRIBED","bind","closedPC","close","defaultConstraints","_constraints","mediaStream","MediaStream","checkDevices","label","keys","deviceIds","attachStream","CONNECTED","peerConnection","renegotiate","_media","srcObject","removeChild","user","from","userAgent"],mappings:";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAMA;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAG,CAACC,eAAMC,UAAN,CAAiBC,IAAlB,EAAwBF,eAAMC,UAAN,CAAiBE,WAAzC,CAArB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,WAAD,EAAcC,IAAd;AAAA,SAC1BD,WAAW,CAACC,IAAD,CAAX,CAAkBC,KAAlB,IAA2BF,WAAW,CAACC,IAAD,CAAX,CAAkBE,KAA7C,IAAsDH,WAAW,CAACC,IAAD,CADvC;AAAA,CAA5B;AAIA;;;AACA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACJ,WAAD,EAAcC,IAAd,EAAoBI,KAApB,EAA2BC,KAA3B,EAAqC;AAC9DN,EAAAA,WAAW,CAACC,IAAD,CAAX,GAAoB;AAAEC,IAAAA,KAAK,EAAEI;AAAT,GAApB;AACA,SAAON,WAAW,CAACK,KAAD,CAAlB;AACD,CAHD;AAIA;;AAEA;;;;;IAGqBE,K;;;AACnB;;;;AAIA,iBAAYC,MAAZ,EAAoB;AAAA;;AAClB;;;;AAIA,SAAKC,MAAL,GAAcD,MAAM,CAACC,MAArB;AACA;;;;;AAIA,SAAKC,GAAL,GAAWF,MAAM,CAACE,GAAlB;AACA;;;;;AAIA,SAAKC,IAAL,GAAYH,MAAM,CAACG,IAAnB;AACA;;;;;AAIA,SAAKC,KAAL,GAAaC,MAAM,CAACC,MAAP,CAAc;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAAd,EAA8CR,MAAM,CAACI,KAArD,CAAb;AACA;;;;;AAIA,SAAKK,SAAL,GAAiBT,MAAM,CAACS,SAAP,IAAoBC,eAAMC,MAAN,CAAaC,oBAAlD;AACA;;;;;AAIA,SAAKC,IAAL,GAAY,IAAZ;AACA;;;;;AAIA,SAAKC,eAAL,GAAuB,EAAvB;AACA;;;;;AAIA,SAAKC,MAAL,GAAcC,eAAd;AACA;;;;;AAIA,SAAKC,aAAL,GAAqB,KAArB;AACA;;;;;AAIA,SAAKC,OAAL,GAAe,EAAf,CAlDkB,CAoDlB;;AACA,SAAK1B,WAAL,GAAmBQ,MAAM,CAACR,WAA1B;AAEA;;;;;;AAKA,SAAK2B,UAAL,GAAkB,EAAlB;AACD;AAGD;;;;;;;;;uBAKGC,K,EAAOC,Q,EAAU;AAClB,UAAIC,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBJ,KAAtB,CAAJ,EAAkC;AAChC,YAAI,CAAC,KAAKD,UAAL,CAAgBC,KAAhB,CAAL,EAA6B;AAC3B,eAAKD,UAAL,CAAgBC,KAAhB,IAAyB,EAAzB;AACD;;AACD,aAAKD,UAAL,CAAgBC,KAAhB,EAAuBK,IAAvB,CAA4BJ,QAA5B;AACD;AACF;AAED;;;;;;;;wBAKID,K,EAAOC,Q,EAAU;AACnB,UAAI,CAACD,KAAL,EAAY;AACV,aAAKD,UAAL,GAAkB,EAAlB;AACD,OAFD,MAEO,IAAIG,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBJ,KAAtB,CAAJ,EAAkC;AACvC,YAAI,CAACC,QAAL,EAAe;AACb,eAAKF,UAAL,CAAgBC,KAAhB,IAAyB,EAAzB;AACD,SAFD,MAEO;AACL,eAAKD,UAAL,CAAgBC,KAAhB,IAAyB,KAAKD,UAAL,CAAgBC,KAAhB,EAAuBM,MAAvB,CAA8B,UAAAC,EAAE;AAAA,mBAAIA,EAAE,KAAKN,QAAX;AAAA,WAAhC,CAAzB;AACD;AACF;AACF;AAED;;;;;;;;AAsCA;;;;;sCAKkB7B,W,EAAa;AAAA;;AAC7BoC,MAAAA,GAAG,CAACC,CAAJ,CAAM,yBAAN,EAAiCrC,WAAjC;AACA,WAAKA,WAAL,GAAmBA,WAAnB;AACA,aAAOsC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC,KAAKxC,WAAzC,EACJyC,KADI,CACE,UAACC,CAAD,EAAO;AACZ,SAAC,KAAI,CAACf,UAAL,CAAgBG,MAAM,CAACC,KAAP,CAAaY,YAA7B,KAA8C,EAA/C,EACGC,OADH,CACW,UAAAT,EAAE;AAAA,iBAAIA,EAAE,CAACO,CAAD,CAAN;AAAA,SADb;AAEA,eAAOA,CAAP;AACD,OALI,EAMJG,IANI,CAMC,UAACC,KAAD,EAAW;AACf,SAAC,OAAD,EAAU,OAAV,EAAmBF,OAAnB,CAA2B,UAACG,IAAD,EAAU;AACnC,cAAMC,gBAAgB,GAAG,KAAI,CAAChD,WAAL,CAAiB+C,IAAjB,CAAzB;;AACA,cAAIC,gBAAJ,EAAsB;AACpB,gBAAIA,gBAAgB,CAACC,QAAjB,IAA6BD,gBAAgB,CAACpD,UAAlD,EAA8D;AAC5D,cAAA,KAAI,CAAC8B,OAAL,CAAaqB,IAAb,IAAqBhD,mBAAmB,CACtCiD,gBADsC,EAEtCA,gBAAgB,CAACpD,UAAjB,GAA8B,YAA9B,GAA6C,UAFP,CAAxC;AAID;AACF;AACF,SAVD;AAWA,QAAA,KAAI,CAACkD,KAAL,GAAaA,KAAb;AACD,OAnBI,CAAP;AAoBD;AAED;;;;;;;;AA0EA;;;;;;;;;;;2BAW8C;AAAA,UAAzCI,KAAyC,uEAAjCC,WAAW,CAACC,KAAqB;AAAA,UAAdC,KAAc,uEAAN,IAAM;AAC5CjB,MAAAA,GAAG,CAACC,CAAJ,CAAM,MAAN,EAAca,KAAd,EAAqBG,KAArB;AAD4C,wBAErB,KAAKzC,KAFgB;AAAA,UAEtCG,KAFsC,eAEtCA,KAFsC;AAAA,UAE/BC,KAF+B,eAE/BA,KAF+B;AAG5C,UACEsC,MADF;;AAEA,cAAQJ,KAAR;AACE,aAAKC,WAAW,CAACC,KAAjB;AACErC,UAAAA,KAAK,GAAGsC,KAAR;AACAC,UAAAA,MAAM,GAAG,KAAKR,KAAL,CAAWS,cAAX,EAAT;AACA;;AACF,aAAKJ,WAAW,CAACK,KAAjB;AACA,aAAKL,WAAW,CAACM,cAAjB;AACEzC,UAAAA,KAAK,GAAGqC,KAAR;AACAC,UAAAA,MAAM,GAAG,KAAKR,KAAL,CAAWY,cAAX,EAAT;AACA;;AACF,aAAKP,WAAW,CAACQ,WAAjB;AACE5C,UAAAA,KAAK,GAAGsC,KAAR;AACArC,UAAAA,KAAK,GAAGqC,KAAR;AACAC,UAAAA,MAAM,GAAG,KAAKR,KAAL,CAAWc,SAAX,EAAT;AACA;;AACF;AACE;AAhBJ,OAL4C,CAuB5C;;;AACAN,MAAAA,MAAM,CAACV,OAAP,CAAe,UAACM,KAAD,EAAW;AAAE;AAC1BA,QAAAA,KAAK,CAACW,OAAN,GAAgB,CAACR,KAAjB,CADwB,CACA;AACzB,OAFD,EAxB4C,CA2B5C;;AACA,WAAKzC,KAAL,GAAa;AAAEG,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,KAAK,EAALA;AAAT,OAAb;AACA8C,MAAAA,QAAQ,CAACC,GAAT,mBAAwB,KAAKtD,MAA7B,sBAA+C,KAAKC,GAApD,aAAiE,KAAKE,KAAtE;AACD;AAED;;;;;;;;;;;;;2BAUOsC,K,EAAO;AACZ,WAAKc,IAAL,CAAUd,KAAV,EAAiB,KAAjB;AACD;AAED;;;;;;;;4BAKQ;AACN,UAAI,CAAC,CAAC,CAACe,iBAAD,EAASC,kBAAT,EAAkBC,OAAlB,CAA0B,KAAK5C,MAA/B,CAAN,EAA8C;AAAE;AAC9C,aAAKA,MAAL,GAAc2C,kBAAd,CAD4C,CAE5C;;AACA,YAAME,IAAI,qBAAc,KAAK3D,MAAnB,0BAAyC,KAAKC,GAA9C,CAAV;AACAoD,QAAAA,QAAQ,CAACO,GAAT,CAAaD,IAAb,EAAmB,aAAnB;AACAN,QAAAA,QAAQ,CAACO,GAAT,CAAaD,IAAb,EAAmB,eAAnB,EAL4C,CAM5C;;AACAN,QAAAA,QAAQ,CAACQ,YAAT,mBAAiC,KAAK7D,MAAtC,sBAAwD,KAAKC,GAA7D,GAAoE6D,MAApE;AACAT,QAAAA,QAAQ,CAACQ,YAAT,mBAAiC,KAAK7D,MAAtC,0BAA4D,KAAKC,GAAjE,GAAwE6D,MAAxE,GAR4C,CAS5C;;AACAT,QAAAA,QAAQ,CAACU,MAAT,CAAgBJ,IAAhB,EAV4C,CAW5C;;AACAN,QAAAA,QAAQ,CAACU,MAAT,mBAA2B,KAAK/D,MAAhC,sBAAkD,KAAKC,GAAvD;AACA,aAAKoC,KAAL,GAAa,IAAb,CAb4C,CAc5C;;AACA,aAAKvB,MAAL,GAAc0C,iBAAd;AACD;;AACD,aAAOQ,OAAO,CAACC,OAAR,CAAgB,KAAKnD,MAArB,CAAP;AACD;AAED;;;;;;;;iCAKa0B,Q,EAAU;AACrB,aAAO,KAAK0B,aAAL,CAAmBxB,WAAW,CAACK,KAA/B,EAAsCP,QAAtC,CAAP;AACD;AAED;;;;;;;;qCAKiBA,Q,EAAU;AACzB,aAAO,KAAK0B,aAAL,CAAmBxB,WAAW,CAACC,KAA/B,EAAsCH,QAAtC,CAAP;AACD;AAED;;;;;;;;;;kCAOcF,I,EAAME,Q,EAAU;AAAA;;AAC5Bb,MAAAA,GAAG,CAACC,CAAJ,CAAM,qBAAN,EAA6BU,IAA7B,EAAmCE,QAAnC;;AACA,UAAI,KAAKH,KAAL,CAAWc,SAAX,GAAuBgB,IAAvB,CAA4B,UAAA1B,KAAK;AAAA,eAAIA,KAAK,CAACH,IAAN,KAAeA,IAAnB;AAAA,OAAjC,CAAJ,EAA+D;AAC7D,YAAI8B,IAAI,GAAGJ,OAAO,CAACC,OAAR,CAAgBzB,QAAhB,CAAX;;AACA,YAAM6B,cAAc,GAAGpF,YAAY,CAACyE,OAAb,CAAqB,KAAKzC,OAAL,CAAaqB,IAAb,CAArB,CAAvB;;AACA,YAAI,CAACE,QAAD,IAAa,CAAC,CAAC,CAAC6B,cAApB,EAAoC;AAAE;AACpC;AACAD,UAAAA,IAAI,GAAGJ,OAAO,CAACC,OAAR,CAAgBhF,YAAY,CAAC,CAACoF,cAAc,GAAG,CAAlB,IAAuBpF,YAAY,CAACqF,MAArC,CAA5B,CAAP;AACD,SAHD,MAGO,IAAI,CAAC,CAACrF,YAAY,CAACyE,OAAb,CAAqBlB,QAArB,CAAN,EAAsC;AAAE;AAC7C;AACA4B,UAAAA,IAAI,GAAGlF,eAAMqF,OAAN,GACJnC,IADI,CACC,UAACR,CAAD,EAAO;AACX;AACA,gBAAM2C,OAAO,GAAG3C,CAAC,WAAIU,IAAJ,WAAD,CAAkBkC,GAAlB,CAAsB,UAAAC,WAAW;AAAA,qBAAIA,WAAW,CAACjC,QAAhB;AAAA,aAAjC,CAAhB,CAFW,CAGX;;AACA+B,YAAAA,OAAO,CAACG,IAAR,GAJW,CAKX;;AACA,gBAAIC,UAAU,GAAGnC,QAAjB;;AACA,gBAAIA,QAAQ,IAAI,CAAC+B,OAAO,CAACJ,IAAR,CAAa,UAAAS,MAAM;AAAA,qBAAIA,MAAM,KAAKpC,QAAf;AAAA,aAAnB,CAAjB,EAA8D;AAC5D,qBAAOwB,OAAO,CAACa,MAAR,CAAe,IAAIC,KAAJ,mBAAqBxC,IAArB,aAAf,CAAP;AACD;;AACD,gBAAI,CAACE,QAAD,IAAa+B,OAAO,CAACD,MAAR,GAAiB,CAAlC,EAAqC;AACnC,kBAAIS,GAAG,GAAG,MAAI,CAAC9D,OAAL,CAAaqB,IAAb,IACNiC,OAAO,CAACS,SAAR,CAAkB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,KAAK,MAAI,CAAChE,OAAL,CAAaqB,IAAb,CAAV;AAAA,eAAnB,EAAiD,MAAjD,CADM,GAEN,CAFJ;AAGAqC,cAAAA,UAAU,GAAGJ,OAAO,CAAC,EAAEQ,GAAF,GAAQR,OAAO,CAACD,MAAjB,CAApB,CAJmC,CAIW;AAC/C;;AACD,mBAAOK,UAAP;AACD,WAlBI,CAAP;AAmBD,SArBM,MAqBA;AACLP,UAAAA,IAAI,GAAGJ,OAAO,CAACC,OAAR,CAAgBzB,QAAhB,CAAP;AACD;;AAED,eAAO4B,IAAI,CACRhC,IADI,CACC,UAACwC,MAAD,EAAY;AAAE;AAClB,cAAI,MAAI,CAAC3D,OAAL,CAAaqB,IAAb,MAAuBsC,MAA3B,EAAmC;AACjC;AACA,YAAA,MAAI,CAAC3D,OAAL,CAAaqB,IAAb,IAAqBsC,MAArB,CAFiC,CAGjC;;AACA,YAAA,MAAI,CAACvC,KAAL,CAAWc,SAAX,GAAuBhB,OAAvB,CAA+B,UAAAM,KAAK;AAAA,qBAAIA,KAAK,CAACyC,IAAN,EAAJ;AAAA,aAApC,EAJiC,CAKjC;;;AACA,gBAAM3F,WAAW,GAAGa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAI,CAACd,WAAvB,CAApB;AACA,gBAAI4F,KAAK,GAAG,CAAC,YAAD,EAAe,UAAf,CAAZ;;AACA,gBAAI,CAAC,CAAClG,YAAY,CAACyE,OAAb,CAAqBkB,MAArB,CAAN,EAAoC;AAAE;AACpCO,cAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,EAAR;AACD;;AACDzF,YAAAA,kBAAkB,CAACJ,WAAW,CAAC+C,IAAD,CAAZ,EAAoB6C,KAAK,CAAC,CAAD,CAAzB,EAA8BA,KAAK,CAAC,CAAD,CAAnC,EAAwCP,MAAxC,CAAlB;;AACAjD,YAAAA,GAAG,CAACC,CAAJ,CAAM,qBAAN,EAA6BU,IAA7B,EAAmC/C,WAAnC;AACA,mBAAO,MAAI,CAAC8F,iBAAL,CAAuB9F,WAAvB,CAAP;AACD;AACF,SAjBI,EAkBJ6C,IAlBI,CAkBC;AAAA,iBAAM,MAAN;AAAA,SAlBD,CAAP;AAmBD;;AACD,aAAO4B,OAAO,CAACa,MAAR,CAAe,IAAIC,KAAJ,6CAA+CxC,IAA/C,YAAf,CAAP;AACD;AAED;;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;;;;;;;;;;;;;;AAiCA;;;;;4BAKQgD,Y,EAAc;AAAA;;AACpB3D,MAAAA,GAAG,CAACC,CAAJ,CAAM,eAAN;AADoB,UAEZ5B,MAFY,GAEDsF,YAFC,CAEZtF,MAFY;AAGpB,aAAOqD,QAAQ,CAAC7B,IAAT,mBAAyBxB,MAAzB,eAA2CsF,YAAY,CAACC,cAAxD,EACJnD,IADI,CACC,UAACoD,SAAD,EAAe;AACnBF,QAAAA,YAAY,CAACrF,GAAb,GAAmBuF,SAAS,CAACC,IAAV,EAAnB,CADmB,CACkB;;AACrC,YAAIH,YAAY,CAACtE,aAAjB,EAAgC;AAC9B,cAAM0E,UAAU,GAAG;AACjBC,YAAAA,MAAM,EAAEL,YAAY,CAAC1E,IAAb,CAAkBgF,WADT;AAEjBC,YAAAA,KAAK,EAAEP,YAAY,CAAC1E,IAAb,CAAkBkF;AAFR,WAAnB;AAIAN,UAAAA,SAAS,CAACO,MAAV,CAAiBL,UAAjB;AACD,SAND,MAMO;AACLJ,UAAAA,YAAY,CAAC1E,IAAb,CAAkBoF,YAAlB,GAAiC,YAAY;AAAE;AAC7C,gBAAMN,UAAU,GAAG;AACjBC,cAAAA,MAAM,EAAEL,YAAY,CAAC1E,IAAb,CAAkBgF,WADT;AAEjBC,cAAAA,KAAK,EAAEP,YAAY,CAAC1E,IAAb,CAAkBkF;AAFR,aAAnB;AAIAN,YAAAA,SAAS,CAACO,MAAV,CAAiBL,UAAjB;AACD,WAND;AAOD;;AACDO,QAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAmC,YAAM;AACvC,cAAIZ,YAAY,CAAC1E,IAAb,IAAqB,IAAzB,EAA+B;AAC7B,gBAAM8E,WAAU,GAAG;AACjBC,cAAAA,MAAM,EAAEL,YAAY,CAAC1E,IAAb,CAAkBgF,WADT;AAEjBC,cAAAA,KAAK,EAAEP,YAAY,CAAC1E,IAAb,CAAkBkF;AAFR,aAAnB;AAIAN,YAAAA,SAAS,CAACO,MAAV,CAAiBL,WAAjB;AACD;AACF,SARD,EAjBmB,CA0BnB;;AACAjF,uBAAM0F,OAAN,CAAcC,MAAd,CAAqBd,YAAY,CAACrF,GAAlC,IAAyCqF,YAAzC,CA3BmB,CA4BnB;;AACAjC,QAAAA,QAAQ,CAACQ,YAAT,mBAAiC7D,MAAjC,sBAAmDsF,YAAY,CAACrF,GAAhE,GAAuE8D,MAAvE,GA7BmB,CA8BnB;;AACAV,QAAAA,QAAQ,CAACQ,YAAT,mBAAiC7D,MAAjC,0BAAuDsF,YAAY,CAACrF,GAApE,GAA2E8D,MAA3E,GA/BmB,CAgCnB;;AACA,YAAMJ,IAAI,qBAAc2B,YAAY,CAACtF,MAA3B,0BAAiDsF,YAAY,CAACrF,GAA9D,CAAV;;AACA,YAAMJ,KAAK,GAAG,SAARA,KAAQ,CAAAwG,QAAQ;AAAA,iBAAIjG,MAAM,CAACC,MAAP,CAAc;AAAEuE,YAAAA,MAAM,EAAEyB,QAAQ,CAACZ,IAAT;AAAV,WAAd,EAA2CY,QAAQ,CAACC,GAAT,MAAkB,EAA7D,CAAJ;AAAA,SAAtB;;AAEAjD,QAAAA,QAAQ,CAACkD,EAAT,CAAY5C,IAAZ,EAAkB,aAAlB,EACE,UAAC0C,QAAD,EAAc;AACZ,cAAMG,UAAU,GAAG3G,KAAK,CAACwG,QAAD,CAAxB;AACA1E,UAAAA,GAAG,CAACC,CAAJ,CAAM,kBAAN,EAA0B4E,UAA1B;;AACA/F,yBAAMI,eAAN,CACG4F,KADH,CACSnB,YADT,EACuBkB,UADvB,EACmC,MAAI,CAACtF,UAAL,CAAgBG,MAAM,CAACC,KAAP,CAAaY,YAA7B,CADnC,EAEGE,IAFH,CAEQ,UAACsE,EAAD,EAAQ;AACZ,aAAC,MAAI,CAACxF,UAAL,CAAgBG,MAAM,CAACC,KAAP,CAAaqF,UAA7B,KAA4C,EAA7C,EACGxE,OADH,CACW,UAAAT,EAAE;AAAA,qBAAIA,EAAE,CAAC4D,YAAD,EAAekB,UAAf,CAAN;AAAA,aADb;AAEA,mBAAOlB,YAAY,CAACzE,eAAb,CAA6BW,IAA7B,CAAkCkF,EAAlC,CAAP;AACD,WANH;AAOD,SAXH,EAYE/E,GAAG,CAACM,CAAJ,CAAM2E,IAAN,CAAWjF,GAAX,CAZF,EAYmB,MAZnB;AAaA0B,QAAAA,QAAQ,CAACkD,EAAT,CAAY5C,IAAZ,EAAkB,eAAlB,EACE,UAAC0C,QAAD,EAAc;AACZ,cAAMG,UAAU,GAAG3G,KAAK,CAACwG,QAAD,CAAxB;AACA1E,UAAAA,GAAG,CAACC,CAAJ,CAAM,qBAAN,EAA6B4E,UAA7B;;AACA,cAAMK,QAAQ,GAAGpG,eAAMI,eAAN,CAAsBiG,KAAtB,CAA4BxB,YAAY,CAACrF,GAAzC,EAA8CuG,UAAU,CAAC5B,MAAzD,CAAjB;AACA;;;AACAU,UAAAA,YAAY,CAACzE,eAAb,GAA+ByE,YAAY,CAACzE,eAAb,CAC5BY,MAD4B,CACrB,UAAAiF,EAAE;AAAA,mBAAIA,EAAE,KAAKG,QAAX;AAAA,WADmB,CAA/B;AAEA;AACD,SATH,EAUElF,GAAG,CAACM,CAAJ,CAAM2E,IAAN,CAAWjF,GAAX,CAVF;AAWAA,QAAAA,GAAG,CAACC,CAAJ,CAAM,cAAN,EAAsB;AAAE0D,UAAAA,YAAY,EAAZA;AAAF,SAAtB;AACA,eAAOA,YAAP;AACD,OA/DI,CAAP;AAgED;;;sBAzfe/F,W,EAAa;AAAA;;AAC3B,UACEQ,MAAM,GAAGR,WAAW,IAAIkB,eAAMC,MAAN,CAAanB,WADvC;;AAIA,UAAMwH,kBAAkB,GAAG7H,eAAMK,WAAN,EAA3B;;AACA,OAAC,OAAD,EAAU,OAAV,EAAmB4C,OAAnB,CAA2B,UAACjC,IAAD,EAAU;AACnC,YAAI,CAAC,CAAC,MAAI,CAACA,IAAL,CAAUwD,OAAV,CAAkBxD,IAAlB,CAAN,EAA+B;AAAE;AAC/BH,UAAAA,MAAM,CAACG,IAAD,CAAN,GAAe,KAAf;AACD,SAFD,MAEO,IAAI,CAACH,MAAM,CAACG,IAAD,CAAX,EAAmB;AACxBH,UAAAA,MAAM,CAACG,IAAD,CAAN,GAAe6G,kBAAkB,CAAC7G,IAAD,CAAjC;AACD;;AACD,YAAIH,MAAM,CAACG,IAAD,CAAN,CAAasC,QAAb,IAAyBzC,MAAM,CAACG,IAAD,CAAN,CAAaf,UAA1C,EAAsD;AACpD,UAAA,MAAI,CAAC8B,OAAL,CAAaf,IAAb,IAAqBZ,mBAAmB,CACtCS,MAAM,CAACG,IAAD,CADgC,EAEtCH,MAAM,CAACG,IAAD,CAAN,CAAaf,UAAb,GAA0B,YAA1B,GAAyC,UAFH,CAAxC;AAID;AACF,OAZD;AAaAwC,MAAAA,GAAG,CAACC,CAAJ,CAAM,sBAAN,EAA8B7B,MAA9B;AACA;;;;AAGA,WAAKiH,YAAL,GAAoBjH,MAApB;AACD;AAED;;;;;wBAIkB;AAChB,aAAO,KAAKiH,YAAZ;AACD;;;sBAoCSC,W,EAAa;AAAA;;AACrB,UAAIA,WAAJ,EAAiB;AACf,YAAI,EAAEA,WAAW,YAAYC,WAAzB,CAAJ,EAA2C;AACzC,gBAAM,IAAIpC,KAAJ,CAAU,iCAAV,CAAN;AACD;;AAED,YAAMqC,YAAY,GAAG,EAArB;AACAF,QAAAA,WAAW,CAAC9D,SAAZ,GAAwBhB,OAAxB,CAAgC,UAACM,KAAD,EAAW;AACzC;AACAA,UAAAA,KAAK,CAACW,OAAN,GAAgB,CAAC,MAAI,CAACjD,KAAL,CAAWsC,KAAK,CAACH,IAAjB,CAAjB,CAFyC,CAEA;AACzC;;AACA,cAAI,CAAC,MAAI,CAACrB,OAAL,CAAawB,KAAK,CAACH,IAAnB,CAAL,EAA+B;AAC7B6E,YAAAA,YAAY,CAAC1E,KAAK,CAACH,IAAP,CAAZ,GAA2BG,KAAK,CAAC2E,KAAjC;AACD;AACF,SAPD,EANe,CAcf;;AACA,YAAIhH,MAAM,CAACiH,IAAP,CAAYF,YAAZ,EAA0B7C,MAA9B,EAAsC;AACpCpF,yBAAMqF,OAAN,GAAgBnC,IAAhB,CAAqB,UAACmC,OAAD,EAAa;AAChCnE,YAAAA,MAAM,CAACiH,IAAP,CAAYF,YAAZ,EAA0BhF,OAA1B,CAAkC,UAACG,IAAD,EAAU;AAC1C,kBAAIiC,OAAO,WAAIjC,IAAJ,WAAX,EAA6B;AAC3B,oBAAMgF,SAAS,GAAG/C,OAAO,WAAIjC,IAAJ,WAAP,CACfb,MADe,CACR,UAAAmD,MAAM;AAAA,yBAAIA,MAAM,CAACwC,KAAP,CAAa9C,MAAb,IAAuBM,MAAM,CAACwC,KAAP,KAAiBD,YAAY,CAAC7E,IAAD,CAAxD;AAAA,iBADE,CAAlB;;AAEA,oBAAIgF,SAAS,CAAChD,MAAV,KAAqB,CAArB,IAA0B,CAAC,MAAI,CAACrD,OAAL,CAAaqB,IAAb,CAA/B,EAAmD;AACjD,kBAAA,MAAI,CAACrB,OAAL,CAAaqB,IAAb,IAAqBgF,SAAS,CAAC,CAAD,CAAT,CAAa9E,QAAlC;AACD;;AACD,oBAAI8E,SAAS,CAAChD,MAAV,KAAqB,CAArB,IACCC,OAAO,WAAIjC,IAAJ,WAAP,CAAwB,CAAxB,EAA2B8E,KAA3B,KAAqC,EADtC,IAEC,CAAC,MAAI,CAACnG,OAAL,CAAaqB,IAAb,CAFN,EAE0B;AACxB;AACA,kBAAA,MAAI,CAACrB,OAAL,CAAaqB,IAAb,IAAqBiC,OAAO,WAAIjC,IAAJ,WAAP,CAAwB,CAAxB,EAA2BE,QAAhD;AACD;AACF;AACF,aAdD;AAeD,WAhBD;AAiBD,SAjCc,CAkCf;;;AACA,aAAK5B,IAAL,GAAY1B,eAAMqI,YAAN,CAAmBN,WAAnB,EAAgC,KAAKzG,SAArC,EAAgD,KAAKI,IAArD,EAA2D,CAA3D,CAAZ;;AACA,aAAKA,IAAL,CAAUoF,YAAV,GAAyB,YAAM;AAC7B,UAAA,MAAI,CAAChF,aAAL,GAAqB,IAArB;AACD,SAFD;;AAGA,aAAKF,MAAL,GAAc0G,oBAAd;AACA7F,QAAAA,GAAG,CAACC,CAAJ,CAAM,iBAAN,EAAyB;AAAEqF,UAAAA,WAAW,EAAXA;AAAF,SAAzB,EAA0C,KAAKrG,IAA/C,EAxCe,CAyCf;;AACA,aAAKC,eAAL,CAAqBsB,OAArB,CAA6B,UAAAsF,cAAc;AAAA,iBAAIA,cAAc,CAACC,WAAf,CAA2B,MAAI,CAACC,MAAhC,EAC7CV,WAD6C,CAAJ;AAAA,SAA3C;AAED,OA5CD,MA4CO,IAAI,KAAK5E,KAAL,IAAc,CAAC4E,WAAnB,EAAgC;AACrC;AACA,aAAKrG,IAAL,CAAUgH,SAAV,GAAsB,IAAtB;AACA,aAAKpH,SAAL,CAAeqH,WAAf,CAA2B,KAAKjH,IAAhC;AACA,aAAKA,IAAL,GAAY,IAAZ,CAJqC,CAKrC;;AACA,aAAKyB,KAAL,CAAWc,SAAX,GAAuBhB,OAAvB,CAA+B,UAAAM,KAAK;AAAA,iBAAIA,KAAK,CAACyC,IAAN,EAAJ;AAAA,SAApC,EANqC,CAOrC;;AACA,aAAKrE,eAAL,CAAqBsB,OAArB,CAA6B,UAAAsF,cAAc;AAAA,iBAAIA,cAAc,CAACX,KAAf,EAAJ;AAAA,SAA3C;AACD,OAtDoB,CAuDrB;;AACA;;;;;AAGA,WAAKa,MAAL,GAAcV,WAAd;AACD;AAED;;;;;wBAIY;AACV,aAAO,KAAKU,MAAZ;AACD;;;kCAkRoB3H,M,EAAQE,I,EAAMM,S,EAAWjB,W,EAAa;AACzD,UAAI,CAACkB,eAAMqH,IAAX,EAAiB;AACf,eAAO9D,OAAO,CAACa,MAAR,CAAe,IAAIC,KAAJ,CAAU,gDAAV,CAAf,CAAP;AACD;;AACD,UAAMS,cAAc,GAAG;AACrBwC,QAAAA,IAAI,EAAEtH,eAAMqH,IAAN,CAAW7H,GADI;AAErB2E,QAAAA,MAAM,EAAEnE,eAAMmE,MAFO;AAGrBoD,QAAAA,SAAS,EAAEvH,eAAMuH,SAHI;AAIrB9H,QAAAA,IAAI,EAAJA;AAJqB,OAAvB;AAQA,UAAMoF,YAAY,GAAG,IAAIxF,KAAJ,CAAUM,MAAM,CAACC,MAAP,CAAc;AAAEL,QAAAA,MAAM,EAANA,MAAF;AAAUT,QAAAA,WAAW,EAAXA,WAAV;AAAuBiB,QAAAA,SAAS,EAATA;AAAvB,OAAd,EAC7B+E,cAD6B,CAAV,CAArB;AAEAD,MAAAA,YAAY,CAACC,cAAb,GAA8BA,cAA9B;AACA5D,MAAAA,GAAG,CAACC,CAAJ,CAAM,qBAAN,EAA6B;AAAE0D,QAAAA,YAAY,EAAZA;AAAF,OAA7B;AACA,aAAOzD,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCuD,YAAY,CAAC/F,WAAjD,EACJ6C,IADI,CACC,UAACC,KAAD,EAAW;AACfiD,QAAAA,YAAY,CAACjD,KAAb,GAAqBA,KAArB;AACA,eAAOiD,YAAP;AACD,OAJI,CAAP;AAKD",sourcesContent:["import * as StreamTypes from '../../definitions/StreamTypes';\nimport * as Log from '../util/Log';\nimport cache from '../util/cache';\nimport * as DataSync from '../util/DataSync';\nimport Media from '../util/Media';\nimport {\n  CLOSED,\n  CLOSING,\n  CONNECTED,\n  NONE\n} from '../util/constants';\nimport * as Events from '../../definitions/Events';\n\nconst _facingModes = [Media.facingMode.USER, Media.facingMode.ENVIRONMENT];\n\nconst _getConstraintValue = (constraints, prop) => (\n  constraints[prop].exact || constraints[prop].ideal || constraints[prop]\n);\n\n/* eslint-disable no-param-reassign */\nconst _setConstrainValue = (constraints, prop, other, value) => {\n  constraints[prop] = { exact: value };\n  delete constraints[other];\n};\n/* eslint-enable no-param-reassign */\n\n/**\n * The local stream\n */\nexport default class Local {\n  /**\n   * @access protected\n   * @param {object} values\n   */\n  constructor(values) {\n    /**\n     * The uid of the room the stream is published in\n     * @type {string}\n     */\n    this.roomId = values.roomId;\n    /**\n     * The uid of this stream\n     * @type {string}\n     */\n    this.uid = values.uid;\n    /**\n     * The type of the stream\n     * @type {string}\n     */\n    this.type = values.type;\n    /**\n     * Indicates if a track is muted\n     * @type {{audio: boolean, video: boolean}}\n     */\n    this.muted = Object.assign({ audio: false, video: false }, values.muted);\n    /**\n     * The local DOM container element where the {@link Local~media} is displayed\n     * @type {Element}\n     */\n    this.container = values.container || cache.config.localStreamContainer;\n    /**\n     * The local DOM media element where the {@link Local~media} is displayed\n     * @type {Element}\n     */\n    this.node = null;\n    /**\n     * List of the PeerConnections associated to this local stream\n     * @type {PeerConnection[]}\n     */\n    this.peerConnections = [];\n    /**\n     * Local stream status\n     * @type {string}\n     */\n    this.status = NONE;\n    /**\n     * is the video is loaded int the local DOM media element\n     * @type {boolean}\n     */\n    this.isVideoLoaded = false;\n    /**\n     * @access private\n     * @type {{audio: string, video: string}}\n     */\n    this._inputs = {};\n\n    // Set constraints\n    this.constraints = values.constraints;\n\n    /**\n     * List of callbacks for Local\n     * @type object\n     * @private\n     */\n    this._callbacks = {};\n  }\n\n\n  /**\n   * Register a callback for a specific event\n   * @param {string} event The event name ({@link Events/Stream})\n   * @param {function} callback The callback for the event\n   */\n  on(event, callback) {\n    if (Events.local.supports(event)) {\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(callback);\n    }\n  }\n\n  /**\n   * Register a callback for a specific event\n   * @param {string} [event] The event name ({@link Events/Stream})\n   * @param {function} [callback] The callback for the event\n   */\n  off(event, callback) {\n    if (!event) {\n      this._callbacks = {};\n    } else if (Events.local.supports(event)) {\n      if (!callback) {\n        this._callbacks[event] = [];\n      } else {\n        this._callbacks[event] = this._callbacks[event].filter(cb => cb !== callback);\n      }\n    }\n  }\n\n  /**\n   * The Media Constraints. (defaults to global config)\n   * @param {MediaConstraints} constraints\n   */\n  set constraints(constraints) {\n    const\n      values = constraints || cache.config.constraints;\n\n\n    const defaultConstraints = Media.constraints();\n    ['audio', 'video'].forEach((type) => {\n      if (!~this.type.indexOf(type)) { // eslint-disable-line no-bitwise\n        values[type] = false;\n      } else if (!values[type]) {\n        values[type] = defaultConstraints[type];\n      }\n      if (values[type].deviceId || values[type].facingMode) {\n        this._inputs[type] = _getConstraintValue(\n          values[type],\n          values[type].facingMode ? 'facingMode' : 'deviceId'\n        );\n      }\n    });\n    Log.d('Local~set#contraints', values);\n    /**\n     * @ignore\n     */\n    this._constraints = values;\n  }\n\n  /**\n   * The Media Constraints. (defaults to global config)\n   * @type {MediaConstraints}\n   */\n  get constraints() {\n    return this._constraints;\n  }\n\n  /**\n   * Updates the stream constraints and retrieve the new MediaStream\n   * @param constraints\n   * @returns {*|Promise.<TResult>}\n   */\n  updateConstraints(constraints) {\n    Log.d('Local~updateConstraints', constraints);\n    this.constraints = constraints;\n    return navigator.mediaDevices.getUserMedia(this.constraints)\n      .catch((e) => {\n        (this._callbacks[Events.local.WEBRTC_ERROR] || [])\n          .forEach(cb => cb(e));\n        return e;\n      })\n      .then((media) => {\n        ['audio', 'video'].forEach((kind) => {\n          const constraintsValue = this.constraints[kind];\n          if (constraintsValue) {\n            if (constraintsValue.deviceId || constraintsValue.facingMode) {\n              this._inputs[kind] = _getConstraintValue(\n                constraintsValue,\n                constraintsValue.facingMode ? 'facingMode' : 'deviceId'\n              );\n            }\n          }\n        });\n        this.media = media;\n      });\n  }\n\n  /**\n   * The associated MediaStream\n   * @type {MediaStream}\n   */\n  set media(mediaStream) {\n    if (mediaStream) {\n      if (!(mediaStream instanceof MediaStream)) {\n        throw new Error('The media MUST be a MediaStream');\n      }\n\n      const checkDevices = {};\n      mediaStream.getTracks().forEach((track) => {\n        // Reset mute\n        track.enabled = !this.muted[track.kind]; // eslint-disable-line no-param-reassign\n        // Get device label\n        if (!this._inputs[track.kind]) {\n          checkDevices[track.kind] = track.label;\n        }\n      });\n      // Try to get deviceId from label\n      if (Object.keys(checkDevices).length) {\n        Media.devices().then((devices) => {\n          Object.keys(checkDevices).forEach((kind) => {\n            if (devices[`${kind}input`]) {\n              const deviceIds = devices[`${kind}input`]\n                .filter(device => device.label.length && device.label === checkDevices[kind]);\n              if (deviceIds.length === 1 && !this._inputs[kind]) {\n                this._inputs[kind] = deviceIds[0].deviceId;\n              }\n              if (deviceIds.length === 0\n                && devices[`${kind}input`][0].label === ''\n                && !this._inputs[kind]) {\n                // from a webview, the label is not delivered\n                this._inputs[kind] = devices[`${kind}input`][0].deviceId;\n              }\n            }\n          });\n        });\n      }\n      // Display\n      this.node = Media.attachStream(mediaStream, this.container, this.node, 0);\n      this.node.onloadeddata = () => {\n        this.isVideoLoaded = true;\n      };\n      this.status = CONNECTED;\n      Log.d('Local~set media', { mediaStream }, this.node);\n      // Renegotiate\n      this.peerConnections.forEach(peerConnection => peerConnection.renegotiate(this._media,\n        mediaStream));\n    } else if (this.media && !mediaStream) {\n      // Remove node\n      this.node.srcObject = null;\n      this.container.removeChild(this.node);\n      this.node = null;\n      // Stop stream\n      this.media.getTracks().forEach(track => track.stop());\n      // Close PeerConnections\n      this.peerConnections.forEach(peerConnection => peerConnection.close());\n    }\n    // Save\n    /**\n     * @ignore\n     */\n    this._media = mediaStream;\n  }\n\n  /**\n   * The associated MediaStream\n   * @type {MediaStream}\n   */\n  get media() {\n    return this._media;\n  }\n\n  /**\n   * Mute a track of a Stream\n   * @param {string} [track=AUDIO] The track to mute. (AUDIO, VIDEO, AUDIO_VIDEO)\n   * @param {boolean} [state=true] true for mute & false for un-mute\n   * @example <caption>mute video</caption>\n   * stream.mute(Reach.t.VIDEO)\n   * @example <caption>mute audio</caption>\n   * stream.mute(Reach.t.AUDIO)\n   * // or\n   * stream.mute()\n   */\n  mute(track = StreamTypes.AUDIO, state = true) {\n    Log.d('mute', track, state);\n    let { audio, video } = this.muted;\n    let\n      tracks;\n    switch (track) {\n      case StreamTypes.AUDIO:\n        audio = state;\n        tracks = this.media.getAudioTracks();\n        break;\n      case StreamTypes.VIDEO:\n      case StreamTypes.SCREEN_SHARING:\n        video = state;\n        tracks = this.media.getVideoTracks();\n        break;\n      case StreamTypes.AUDIO_VIDEO:\n        audio = state;\n        video = state;\n        tracks = this.media.getTracks();\n        break;\n      default:\n        break;\n    }\n    // Mute media tracks\n    tracks.forEach((track) => { // eslint-disable-line no-shadow\n      track.enabled = !state; // eslint-disable-line no-param-reassign\n    });\n    // Signal subscribers\n    this.muted = { audio, video };\n    DataSync.set(`_/rooms/${this.roomId}/streams/${this.uid}/muted`, this.muted);\n  }\n\n  /**\n   * Un-mute a track of a Stream\n   * @param {string} [track=AUDIO] The track to mute. (AUDIO, VIDEO, AUDIO_VIDEO)\n   * @example <caption>Un-mute video</caption>\n   * stream.unMute(Reach.t.VIDEO)\n   * @example <caption>Un-mute audio</caption>\n   * stream.unMute(Reach.t.AUDIO)\n   * // or\n   * stream.unMute()\n   */\n  unMute(track) {\n    this.mute(track, false);\n  }\n\n  /**\n   * Removes stream for published list, closes associated\n   * PeerConnections and stops current MediaStream\n   * @returns {Promise}\n   */\n  close() {\n    if (!~[CLOSED, CLOSING].indexOf(this.status)) { // eslint-disable-line no-bitwise\n      this.status = CLOSING;\n      // Stop listening to Subscribers\n      const path = `_/rooms/${this.roomId}/subscribers/${this.uid}`;\n      DataSync.off(path, 'child_added');\n      DataSync.off(path, 'child_removed');\n      // Cancel onDisconnects\n      DataSync.onDisconnect(`_/rooms/${this.roomId}/streams/${this.uid}`).cancel();\n      DataSync.onDisconnect(`_/rooms/${this.roomId}/subscribers/${this.uid}`).cancel();\n      // Remove subscribers\n      DataSync.remove(path);\n      // Remove stream\n      DataSync.remove(`_/rooms/${this.roomId}/streams/${this.uid}`);\n      this.media = null;\n      // Close\n      this.status = CLOSED;\n    }\n    return Promise.resolve(this.status);\n  }\n\n  /**\n   * Switch video input device\n   * @param {string} [deviceId] A video input device Id or the `facingMode` value\n   * @returns {Promise<Local, Error>}\n   */\n  switchCamera(deviceId) {\n    return this._switchDevice(StreamTypes.VIDEO, deviceId);\n  }\n\n  /**\n   * Switch audio input device\n   * @param {string} [deviceId] A audio input device Id\n   * @returns {Promise<Local, Error>}\n   */\n  switchMicrophone(deviceId) {\n    return this._switchDevice(StreamTypes.AUDIO, deviceId);\n  }\n\n  /**\n   * Switch input device\n   * @access private\n   * @param {string} kind The kind of device to switch\n   * @param {string} [deviceId] An input device id\n   * @returns {Promise<Local, Error>}\n   */\n  _switchDevice(kind, deviceId) {\n    Log.d('Local~_switchDevice', kind, deviceId);\n    if (this.media.getTracks().some(track => track.kind === kind)) {\n      let next = Promise.resolve(deviceId);\n      const currentModeIdx = _facingModes.indexOf(this._inputs[kind]);\n      if (!deviceId && !!~currentModeIdx) { // eslint-disable-line no-bitwise\n        // Loop facingModes\n        next = Promise.resolve(_facingModes[(currentModeIdx + 1) % _facingModes.length]);\n      } else if (!~_facingModes.indexOf(deviceId)) { // eslint-disable-line no-bitwise\n        // Loop deviceIds\n        next = Media.devices()\n          .then((d) => {\n            // devices IDs\n            const devices = d[`${kind}input`].map(mediaDevice => mediaDevice.deviceId);\n            // Sort to ensure same order\n            devices.sort();\n            // New device\n            let nextDevice = deviceId;\n            if (deviceId && !devices.some(device => device === deviceId)) {\n              return Promise.reject(new Error(`Unknown ${kind} device`));\n            }\n            if (!deviceId && devices.length > 1) {\n              let idx = this._inputs[kind]\n                ? devices.findIndex(v => v === this._inputs[kind], this)\n                : 0;\n              nextDevice = devices[++idx % devices.length]; // eslint-disable-line no-plusplus\n            }\n            return nextDevice;\n          });\n      } else {\n        next = Promise.resolve(deviceId);\n      }\n\n      return next\n        .then((device) => { // eslint-disable-line consistent-return\n          if (this._inputs[kind] !== device) {\n            // Update video streams\n            this._inputs[kind] = device;\n            // Stop tracks\n            this.media.getTracks().forEach(track => track.stop());\n            // Update constraints\n            const constraints = Object.assign({}, this.constraints);\n            let props = ['facingMode', 'deviceId'];\n            if (!~_facingModes.indexOf(device)) { // eslint-disable-line no-bitwise\n              props = props.reverse();\n            }\n            _setConstrainValue(constraints[kind], props[0], props[1], device);\n            Log.d('Local~_switchDevice', kind, constraints);\n            return this.updateConstraints(constraints);\n          }\n        })\n        .then(() => this);\n    }\n    return Promise.reject(new Error(`Current stream does not contain a ${kind} track`));\n  }\n\n  /**\n   * Publish a local stream\n   * @access protected\n   * @param {string} roomId The room Id\n   * @param {string} type The stream type, see {@link StreamTypes} for possible values\n   * @param {?Element} container The element the stream is attached to.\n   * @param {?MediaStreamConstraints} [constraints] The stream constraints.\n   * If not defined the constraints defined in ReachConfig will be used.\n   * @returns {Promise<Local, Error>}\n   */\n  /* static share(roomId, type, container, constraints) {\n    if (!cache.user) {\n      return Promise.reject(new Error('Only an authenticated user can share a stream.'));\n    }\n    const streamMetaData = {\n      from: cache.user.uid,\n      device: cache.device,\n      type\n    };\n\n\n    const sharedStream = new Local(Object.assign({ roomId, constraints, container },\n      streamMetaData));\n    Log.d('Local~share', { sharedStream });\n    return navigator.mediaDevices.getUserMedia(sharedStream.constraints)\n      .then((media) => {\n        sharedStream.media = media;\n      })\n      // Got MediaStream, publish it\n      .then(() => DataSync.push(`_/rooms/${roomId}/streams`, streamMetaData))\n      .then((streamRef) => {\n        sharedStream.uid = streamRef.name();\n        if (/video/i.test(sharedStream.type)) {\n          if (sharedStream.isVideoLoaded) {\n            const streamSize = {\n              height: sharedStream.node.videoHeight,\n              width: sharedStream.node.videoWidth,\n            };\n            streamRef.update(streamSize);\n          } else {\n            sharedStream.node.onloadeddata = function () { // eslint-disable-line func-names\n              const streamSize = {\n                height: sharedStream.node.videoHeight,\n                width: sharedStream.node.videoWidth,\n              };\n              streamRef.update(streamSize);\n            };\n          }\n        }\n        if (/video/i.test(sharedStream.type)) {\n          window.addEventListener('resize', (() => {\n            if (sharedStream.node != null) {\n              const streamSize = {\n                height: sharedStream.node.videoHeight,\n                width: sharedStream.node.videoWidth,\n              };\n              streamRef.update(streamSize);\n            }\n          }));\n        }\n        // Save sharedStream\n        cache.streams.shared[sharedStream.uid] = sharedStream;\n        // Remove shared stream on Disconnect\n        DataSync.onDisconnect(`_/rooms/${roomId}/streams/${sharedStream.uid}`).remove();\n        // Remove shared stream on Disconnect\n        DataSync.onDisconnect(`_/rooms/${roomId}/subscribers/${sharedStream.uid}`).remove();\n        // Start listening to subscribers\n        const\n          path = `_/rooms/${sharedStream.roomId}/subscribers/${sharedStream.uid}`;\n\n\n        const value = snapData => Object.assign({ device: snapData.name() }, snapData.val() || {});\n        DataSync.on(path, 'child_added',\n          (snapData) => {\n            const subscriber = value(snapData);\n            Log.d('Local~subscribed', subscriber);\n            cache.peerConnections.offer(sharedStream, subscriber)\n              .then((pc) => {\n                (this._callbacks[Events.local.SUBSCRIBED] || [])\n                  .forEach(cb => cb(sharedStream, subscriber));\n                return sharedStream.peerConnections.push(pc);\n              });\n          },\n          Log.e.bind(Log));\n        DataSync.on(path, 'child_removed',\n          (snapData) => {\n            const subscriber = value(snapData);\n            Log.d('Local~un-subscribed', subscriber);\n            const closedPC = cache.peerConnections.close(sharedStream.uid, subscriber.device);\n            sharedStream.peerConnections = sharedStream.peerConnections\n              .filter(pc => pc !== closedPC);\n          },\n          Log.e.bind(Log));\n        Log.d('Local~shared', { sharedStream });\n        return sharedStream;\n      });\n  } */\n\n  /**\n   * Get a local stream\n   * @access protected\n   * @param {string} roomId The room Id\n   * @param {string} type The stream type, see {@link StreamTypes} for possible values\n   * @param {?Element} container The element the stream is attached to.\n   * @param {?MediaStreamConstraints} [constraints] The stream constraints.\n   * If not defined the constraints defined in ReachConfig will be used.\n   * @returns {Promise<Local, Error>}\n   */\n  static getLocalVideo(roomId, type, container, constraints) {\n    if (!cache.user) {\n      return Promise.reject(new Error('Only an authenticated user can share a stream.'));\n    }\n    const streamMetaData = {\n      from: cache.user.uid,\n      device: cache.device,\n      userAgent: cache.userAgent,\n      type\n    };\n\n\n    const sharedStream = new Local(Object.assign({ roomId, constraints, container },\n      streamMetaData));\n    sharedStream.streamMetaData = streamMetaData;\n    Log.d('Local~getLocalVideo', { sharedStream });\n    return navigator.mediaDevices.getUserMedia(sharedStream.constraints)\n      .then((media) => {\n        sharedStream.media = media;\n        return sharedStream;\n      });\n  }\n\n  /**\n   * Publish a local stream\n   * @access protected\n   * @returns {Local}\n   */\n  publish(sharedStream) {\n    Log.d('Local~publish');\n    const { roomId } = sharedStream;\n    return DataSync.push(`_/rooms/${roomId}/streams`, sharedStream.streamMetaData)\n      .then((streamRef) => {\n        sharedStream.uid = streamRef.name(); // eslint-disable-line no-param-reassign\n        if (sharedStream.isVideoLoaded) {\n          const streamSize = {\n            height: sharedStream.node.videoHeight,\n            width: sharedStream.node.videoWidth,\n          };\n          streamRef.update(streamSize);\n        } else {\n          sharedStream.node.onloadeddata = function () { // eslint-disable-line\n            const streamSize = {\n              height: sharedStream.node.videoHeight,\n              width: sharedStream.node.videoWidth,\n            };\n            streamRef.update(streamSize);\n          };\n        }\n        window.addEventListener('resize', (() => {\n          if (sharedStream.node != null) {\n            const streamSize = {\n              height: sharedStream.node.videoHeight,\n              width: sharedStream.node.videoWidth,\n            };\n            streamRef.update(streamSize);\n          }\n        }));\n        // Save sharedStream\n        cache.streams.shared[sharedStream.uid] = sharedStream;\n        // Remove shared stream on Disconnect\n        DataSync.onDisconnect(`_/rooms/${roomId}/streams/${sharedStream.uid}`).remove();\n        // Remove shared stream on Disconnect\n        DataSync.onDisconnect(`_/rooms/${roomId}/subscribers/${sharedStream.uid}`).remove();\n        // Start listening to subscribers\n        const path = `_/rooms/${sharedStream.roomId}/subscribers/${sharedStream.uid}`;\n        const value = snapData => Object.assign({ device: snapData.name() }, snapData.val() || {});\n\n        DataSync.on(path, 'child_added',\n          (snapData) => {\n            const subscriber = value(snapData);\n            Log.d('Local~subscribed', subscriber);\n            cache.peerConnections\n              .offer(sharedStream, subscriber, this._callbacks[Events.local.WEBRTC_ERROR])\n              .then((pc) => {\n                (this._callbacks[Events.local.SUBSCRIBED] || [])\n                  .forEach(cb => cb(sharedStream, subscriber));\n                return sharedStream.peerConnections.push(pc);\n              });\n          },\n          Log.e.bind(Log), this);\n        DataSync.on(path, 'child_removed',\n          (snapData) => {\n            const subscriber = value(snapData);\n            Log.d('Local~un-subscribed', subscriber);\n            const closedPC = cache.peerConnections.close(sharedStream.uid, subscriber.device);\n            /* eslint-disable no-param-reassign */\n            sharedStream.peerConnections = sharedStream.peerConnections\n              .filter(pc => pc !== closedPC);\n            /* eslint-enable no-param-reassign */\n          },\n          Log.e.bind(Log));\n        Log.d('Local~shared', { sharedStream });\n        return sharedStream;\n      });\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_2jksz1t6at.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2jksz1t6at.s[1]++;exports.default=void 0;var StreamTypes=(cov_2jksz1t6at.s[2]++,_interopRequireWildcard(__webpack_require__(/*! ../../definitions/StreamTypes */ "./src/definitions/StreamTypes.js")));var Log=(cov_2jksz1t6at.s[3]++,_interopRequireWildcard(__webpack_require__(/*! ../util/Log */ "./src/core/util/Log.js")));var _cache=(cov_2jksz1t6at.s[4]++,_interopRequireDefault(__webpack_require__(/*! ../util/cache */ "./src/core/util/cache.js")));var DataSync=(cov_2jksz1t6at.s[5]++,_interopRequireWildcard(__webpack_require__(/*! ../util/DataSync */ "./src/core/util/DataSync.js")));var _Media=(cov_2jksz1t6at.s[6]++,_interopRequireDefault(__webpack_require__(/*! ../util/Media */ "./src/core/util/Media.js")));var _constants=(cov_2jksz1t6at.s[7]++,__webpack_require__(/*! ../util/constants */ "./src/core/util/constants.js"));var Events=(cov_2jksz1t6at.s[8]++,_interopRequireWildcard(__webpack_require__(/*! ../../definitions/Events */ "./src/definitions/Events.js")));function _interopRequireDefault(obj){cov_2jksz1t6at.f[0]++;cov_2jksz1t6at.s[9]++;return(cov_2jksz1t6at.b[1][0]++,obj)&&(cov_2jksz1t6at.b[1][1]++,obj.__esModule)?(cov_2jksz1t6at.b[0][0]++,obj):(cov_2jksz1t6at.b[0][1]++,{default:obj});}function _interopRequireWildcard(obj){cov_2jksz1t6at.f[1]++;cov_2jksz1t6at.s[10]++;if((cov_2jksz1t6at.b[3][0]++,obj)&&(cov_2jksz1t6at.b[3][1]++,obj.__esModule)){cov_2jksz1t6at.b[2][0]++;cov_2jksz1t6at.s[11]++;return obj;}else{cov_2jksz1t6at.b[2][1]++;var newObj=(cov_2jksz1t6at.s[12]++,{});cov_2jksz1t6at.s[13]++;if(obj!=null){cov_2jksz1t6at.b[4][0]++;cov_2jksz1t6at.s[14]++;for(var key in obj){cov_2jksz1t6at.s[15]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_2jksz1t6at.b[5][0]++;var desc=(cov_2jksz1t6at.s[16]++,(cov_2jksz1t6at.b[7][0]++,Object.defineProperty)&&(cov_2jksz1t6at.b[7][1]++,Object.getOwnPropertyDescriptor)?(cov_2jksz1t6at.b[6][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_2jksz1t6at.b[6][1]++,{}));cov_2jksz1t6at.s[17]++;if((cov_2jksz1t6at.b[9][0]++,desc.get)||(cov_2jksz1t6at.b[9][1]++,desc.set)){cov_2jksz1t6at.b[8][0]++;cov_2jksz1t6at.s[18]++;Object.defineProperty(newObj,key,desc);}else{cov_2jksz1t6at.b[8][1]++;cov_2jksz1t6at.s[19]++;newObj[key]=obj[key];}}else{cov_2jksz1t6at.b[5][1]++;}}}else{cov_2jksz1t6at.b[4][1]++;}cov_2jksz1t6at.s[20]++;newObj.default=obj;cov_2jksz1t6at.s[21]++;return newObj;}}function _classCallCheck(instance,Constructor){cov_2jksz1t6at.f[2]++;cov_2jksz1t6at.s[22]++;if(!(instance instanceof Constructor)){cov_2jksz1t6at.b[10][0]++;cov_2jksz1t6at.s[23]++;throw new TypeError("Cannot call a class as a function");}else{cov_2jksz1t6at.b[10][1]++;}}function _defineProperties(target,props){cov_2jksz1t6at.f[3]++;cov_2jksz1t6at.s[24]++;for(var i=0;i<props.length;i++){var descriptor=(cov_2jksz1t6at.s[25]++,props[i]);cov_2jksz1t6at.s[26]++;descriptor.enumerable=(cov_2jksz1t6at.b[11][0]++,descriptor.enumerable)||(cov_2jksz1t6at.b[11][1]++,false);cov_2jksz1t6at.s[27]++;descriptor.configurable=true;cov_2jksz1t6at.s[28]++;if("value"in descriptor){cov_2jksz1t6at.b[12][0]++;cov_2jksz1t6at.s[29]++;descriptor.writable=true;}else{cov_2jksz1t6at.b[12][1]++;}cov_2jksz1t6at.s[30]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_2jksz1t6at.f[4]++;cov_2jksz1t6at.s[31]++;if(protoProps){cov_2jksz1t6at.b[13][0]++;cov_2jksz1t6at.s[32]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_2jksz1t6at.b[13][1]++;}cov_2jksz1t6at.s[33]++;if(staticProps){cov_2jksz1t6at.b[14][0]++;cov_2jksz1t6at.s[34]++;_defineProperties(Constructor,staticProps);}else{cov_2jksz1t6at.b[14][1]++;}cov_2jksz1t6at.s[35]++;return Constructor;}var _facingModes=(cov_2jksz1t6at.s[36]++,[_Media.default.facingMode.USER,_Media.default.facingMode.ENVIRONMENT]);cov_2jksz1t6at.s[37]++;var _getConstraintValue=function _getConstraintValue(constraints,prop){cov_2jksz1t6at.f[5]++;cov_2jksz1t6at.s[38]++;return(cov_2jksz1t6at.b[15][0]++,constraints[prop].exact)||(cov_2jksz1t6at.b[15][1]++,constraints[prop].ideal)||(cov_2jksz1t6at.b[15][2]++,constraints[prop]);};cov_2jksz1t6at.s[39]++;var _setConstrainValue=function _setConstrainValue(constraints,prop,other,value){cov_2jksz1t6at.f[6]++;cov_2jksz1t6at.s[40]++;constraints[prop]={exact:value};cov_2jksz1t6at.s[41]++;delete constraints[other];};var Local=(cov_2jksz1t6at.s[42]++,function(){cov_2jksz1t6at.f[7]++;function Local(values){cov_2jksz1t6at.f[8]++;cov_2jksz1t6at.s[43]++;_classCallCheck(this,Local);cov_2jksz1t6at.s[44]++;this.roomId=values.roomId;cov_2jksz1t6at.s[45]++;this.uid=values.uid;cov_2jksz1t6at.s[46]++;this.type=values.type;cov_2jksz1t6at.s[47]++;this.muted=Object.assign({audio:false,video:false},values.muted);cov_2jksz1t6at.s[48]++;this.container=(cov_2jksz1t6at.b[16][0]++,values.container)||(cov_2jksz1t6at.b[16][1]++,_cache.default.config.localStreamContainer);cov_2jksz1t6at.s[49]++;this.node=null;cov_2jksz1t6at.s[50]++;this.peerConnections=[];cov_2jksz1t6at.s[51]++;this.status=_constants.NONE;cov_2jksz1t6at.s[52]++;this.isVideoLoaded=false;cov_2jksz1t6at.s[53]++;this._inputs={};cov_2jksz1t6at.s[54]++;this.constraints=values.constraints;cov_2jksz1t6at.s[55]++;this._callbacks={};}cov_2jksz1t6at.s[56]++;_createClass(Local,[{key:"on",value:function on(event,callback){cov_2jksz1t6at.f[9]++;cov_2jksz1t6at.s[57]++;if(Events.local.supports(event)){cov_2jksz1t6at.b[17][0]++;cov_2jksz1t6at.s[58]++;if(!this._callbacks[event]){cov_2jksz1t6at.b[18][0]++;cov_2jksz1t6at.s[59]++;this._callbacks[event]=[];}else{cov_2jksz1t6at.b[18][1]++;}cov_2jksz1t6at.s[60]++;this._callbacks[event].push(callback);}else{cov_2jksz1t6at.b[17][1]++;}}},{key:"off",value:function off(event,callback){cov_2jksz1t6at.f[10]++;cov_2jksz1t6at.s[61]++;if(!event){cov_2jksz1t6at.b[19][0]++;cov_2jksz1t6at.s[62]++;this._callbacks={};}else{cov_2jksz1t6at.b[19][1]++;cov_2jksz1t6at.s[63]++;if(Events.local.supports(event)){cov_2jksz1t6at.b[20][0]++;cov_2jksz1t6at.s[64]++;if(!callback){cov_2jksz1t6at.b[21][0]++;cov_2jksz1t6at.s[65]++;this._callbacks[event]=[];}else{cov_2jksz1t6at.b[21][1]++;cov_2jksz1t6at.s[66]++;this._callbacks[event]=this._callbacks[event].filter(function(cb){cov_2jksz1t6at.f[11]++;cov_2jksz1t6at.s[67]++;return cb!==callback;});}}else{cov_2jksz1t6at.b[20][1]++;}}}},{key:"updateConstraints",value:function updateConstraints(constraints){cov_2jksz1t6at.f[12]++;var _this=(cov_2jksz1t6at.s[68]++,this);cov_2jksz1t6at.s[69]++;Log.d('Local~updateConstraints',constraints);cov_2jksz1t6at.s[70]++;this.constraints=constraints;cov_2jksz1t6at.s[71]++;return navigator.mediaDevices.getUserMedia(this.constraints).catch(function(e){cov_2jksz1t6at.f[13]++;cov_2jksz1t6at.s[72]++;((cov_2jksz1t6at.b[22][0]++,_this._callbacks[Events.local.WEBRTC_ERROR])||(cov_2jksz1t6at.b[22][1]++,[])).forEach(function(cb){cov_2jksz1t6at.f[14]++;cov_2jksz1t6at.s[73]++;return cb(e);});cov_2jksz1t6at.s[74]++;return e;}).then(function(media){cov_2jksz1t6at.f[15]++;cov_2jksz1t6at.s[75]++;['audio','video'].forEach(function(kind){cov_2jksz1t6at.f[16]++;var constraintsValue=(cov_2jksz1t6at.s[76]++,_this.constraints[kind]);cov_2jksz1t6at.s[77]++;if(constraintsValue){cov_2jksz1t6at.b[23][0]++;cov_2jksz1t6at.s[78]++;if((cov_2jksz1t6at.b[25][0]++,constraintsValue.deviceId)||(cov_2jksz1t6at.b[25][1]++,constraintsValue.facingMode)){cov_2jksz1t6at.b[24][0]++;cov_2jksz1t6at.s[79]++;_this._inputs[kind]=_getConstraintValue(constraintsValue,constraintsValue.facingMode?(cov_2jksz1t6at.b[26][0]++,'facingMode'):(cov_2jksz1t6at.b[26][1]++,'deviceId'));}else{cov_2jksz1t6at.b[24][1]++;}}else{cov_2jksz1t6at.b[23][1]++;}});cov_2jksz1t6at.s[80]++;_this.media=media;});}},{key:"mute",value:function mute(){cov_2jksz1t6at.f[17]++;var track=(cov_2jksz1t6at.s[81]++,(cov_2jksz1t6at.b[28][0]++,arguments.length>0)&&(cov_2jksz1t6at.b[28][1]++,arguments[0]!==undefined)?(cov_2jksz1t6at.b[27][0]++,arguments[0]):(cov_2jksz1t6at.b[27][1]++,StreamTypes.AUDIO));var state=(cov_2jksz1t6at.s[82]++,(cov_2jksz1t6at.b[30][0]++,arguments.length>1)&&(cov_2jksz1t6at.b[30][1]++,arguments[1]!==undefined)?(cov_2jksz1t6at.b[29][0]++,arguments[1]):(cov_2jksz1t6at.b[29][1]++,true));cov_2jksz1t6at.s[83]++;Log.d('mute',track,state);var _this$muted=(cov_2jksz1t6at.s[84]++,this.muted),audio=(cov_2jksz1t6at.s[85]++,_this$muted.audio),video=(cov_2jksz1t6at.s[86]++,_this$muted.video);var tracks;cov_2jksz1t6at.s[87]++;switch(track){case StreamTypes.AUDIO:cov_2jksz1t6at.b[31][0]++;cov_2jksz1t6at.s[88]++;audio=state;cov_2jksz1t6at.s[89]++;tracks=this.media.getAudioTracks();cov_2jksz1t6at.s[90]++;break;case StreamTypes.VIDEO:cov_2jksz1t6at.b[31][1]++;case StreamTypes.SCREEN_SHARING:cov_2jksz1t6at.b[31][2]++;cov_2jksz1t6at.s[91]++;video=state;cov_2jksz1t6at.s[92]++;tracks=this.media.getVideoTracks();cov_2jksz1t6at.s[93]++;break;case StreamTypes.AUDIO_VIDEO:cov_2jksz1t6at.b[31][3]++;cov_2jksz1t6at.s[94]++;audio=state;cov_2jksz1t6at.s[95]++;video=state;cov_2jksz1t6at.s[96]++;tracks=this.media.getTracks();cov_2jksz1t6at.s[97]++;break;default:cov_2jksz1t6at.b[31][4]++;cov_2jksz1t6at.s[98]++;break;}cov_2jksz1t6at.s[99]++;tracks.forEach(function(track){cov_2jksz1t6at.f[18]++;cov_2jksz1t6at.s[100]++;track.enabled=!state;});cov_2jksz1t6at.s[101]++;this.muted={audio:audio,video:video};cov_2jksz1t6at.s[102]++;DataSync.set("_/rooms/".concat(this.roomId,"/streams/").concat(this.uid,"/muted"),this.muted);}},{key:"unMute",value:function unMute(track){cov_2jksz1t6at.f[19]++;cov_2jksz1t6at.s[103]++;this.mute(track,false);}},{key:"close",value:function close(){cov_2jksz1t6at.f[20]++;cov_2jksz1t6at.s[104]++;if(!~[_constants.CLOSED,_constants.CLOSING].indexOf(this.status)){cov_2jksz1t6at.b[32][0]++;cov_2jksz1t6at.s[105]++;this.status=_constants.CLOSING;var path=(cov_2jksz1t6at.s[106]++,"_/rooms/".concat(this.roomId,"/subscribers/").concat(this.uid));cov_2jksz1t6at.s[107]++;DataSync.off(path,'child_added');cov_2jksz1t6at.s[108]++;DataSync.off(path,'child_removed');cov_2jksz1t6at.s[109]++;DataSync.onDisconnect("_/rooms/".concat(this.roomId,"/streams/").concat(this.uid)).cancel();cov_2jksz1t6at.s[110]++;DataSync.onDisconnect("_/rooms/".concat(this.roomId,"/subscribers/").concat(this.uid)).cancel();cov_2jksz1t6at.s[111]++;DataSync.remove(path);cov_2jksz1t6at.s[112]++;DataSync.remove("_/rooms/".concat(this.roomId,"/streams/").concat(this.uid));cov_2jksz1t6at.s[113]++;this.media=null;cov_2jksz1t6at.s[114]++;this.status=_constants.CLOSED;}else{cov_2jksz1t6at.b[32][1]++;}cov_2jksz1t6at.s[115]++;return Promise.resolve(this.status);}},{key:"switchCamera",value:function switchCamera(deviceId){cov_2jksz1t6at.f[21]++;cov_2jksz1t6at.s[116]++;return this._switchDevice(StreamTypes.VIDEO,deviceId);}},{key:"switchMicrophone",value:function switchMicrophone(deviceId){cov_2jksz1t6at.f[22]++;cov_2jksz1t6at.s[117]++;return this._switchDevice(StreamTypes.AUDIO,deviceId);}},{key:"_switchDevice",value:function _switchDevice(kind,deviceId){cov_2jksz1t6at.f[23]++;var _this2=(cov_2jksz1t6at.s[118]++,this);cov_2jksz1t6at.s[119]++;Log.d('Local~_switchDevice',kind,deviceId);cov_2jksz1t6at.s[120]++;if(this.media.getTracks().some(function(track){cov_2jksz1t6at.f[24]++;cov_2jksz1t6at.s[121]++;return track.kind===kind;})){cov_2jksz1t6at.b[33][0]++;var next=(cov_2jksz1t6at.s[122]++,Promise.resolve(deviceId));var currentModeIdx=(cov_2jksz1t6at.s[123]++,_facingModes.indexOf(this._inputs[kind]));cov_2jksz1t6at.s[124]++;if((cov_2jksz1t6at.b[35][0]++,!deviceId)&&(cov_2jksz1t6at.b[35][1]++,!!~currentModeIdx)){cov_2jksz1t6at.b[34][0]++;cov_2jksz1t6at.s[125]++;next=Promise.resolve(_facingModes[(currentModeIdx+1)%_facingModes.length]);}else{cov_2jksz1t6at.b[34][1]++;cov_2jksz1t6at.s[126]++;if(!~_facingModes.indexOf(deviceId)){cov_2jksz1t6at.b[36][0]++;cov_2jksz1t6at.s[127]++;next=_Media.default.devices().then(function(d){cov_2jksz1t6at.f[25]++;var devices=(cov_2jksz1t6at.s[128]++,d["".concat(kind,"input")].map(function(mediaDevice){cov_2jksz1t6at.f[26]++;cov_2jksz1t6at.s[129]++;return mediaDevice.deviceId;}));cov_2jksz1t6at.s[130]++;devices.sort();var nextDevice=(cov_2jksz1t6at.s[131]++,deviceId);cov_2jksz1t6at.s[132]++;if((cov_2jksz1t6at.b[38][0]++,deviceId)&&(cov_2jksz1t6at.b[38][1]++,!devices.some(function(device){cov_2jksz1t6at.f[27]++;cov_2jksz1t6at.s[133]++;return device===deviceId;}))){cov_2jksz1t6at.b[37][0]++;cov_2jksz1t6at.s[134]++;return Promise.reject(new Error("Unknown ".concat(kind," device")));}else{cov_2jksz1t6at.b[37][1]++;}cov_2jksz1t6at.s[135]++;if((cov_2jksz1t6at.b[40][0]++,!deviceId)&&(cov_2jksz1t6at.b[40][1]++,devices.length>1)){cov_2jksz1t6at.b[39][0]++;var idx=(cov_2jksz1t6at.s[136]++,_this2._inputs[kind]?(cov_2jksz1t6at.b[41][0]++,devices.findIndex(function(v){cov_2jksz1t6at.f[28]++;cov_2jksz1t6at.s[137]++;return v===_this2._inputs[kind];},_this2)):(cov_2jksz1t6at.b[41][1]++,0));cov_2jksz1t6at.s[138]++;nextDevice=devices[++idx%devices.length];}else{cov_2jksz1t6at.b[39][1]++;}cov_2jksz1t6at.s[139]++;return nextDevice;});}else{cov_2jksz1t6at.b[36][1]++;cov_2jksz1t6at.s[140]++;next=Promise.resolve(deviceId);}}cov_2jksz1t6at.s[141]++;return next.then(function(device){cov_2jksz1t6at.f[29]++;cov_2jksz1t6at.s[142]++;if(_this2._inputs[kind]!==device){cov_2jksz1t6at.b[42][0]++;cov_2jksz1t6at.s[143]++;_this2._inputs[kind]=device;cov_2jksz1t6at.s[144]++;_this2.media.getTracks().forEach(function(track){cov_2jksz1t6at.f[30]++;cov_2jksz1t6at.s[145]++;return track.stop();});var constraints=(cov_2jksz1t6at.s[146]++,Object.assign({},_this2.constraints));var props=(cov_2jksz1t6at.s[147]++,['facingMode','deviceId']);cov_2jksz1t6at.s[148]++;if(!~_facingModes.indexOf(device)){cov_2jksz1t6at.b[43][0]++;cov_2jksz1t6at.s[149]++;props=props.reverse();}else{cov_2jksz1t6at.b[43][1]++;}cov_2jksz1t6at.s[150]++;_setConstrainValue(constraints[kind],props[0],props[1],device);cov_2jksz1t6at.s[151]++;Log.d('Local~_switchDevice',kind,constraints);cov_2jksz1t6at.s[152]++;return _this2.updateConstraints(constraints);}else{cov_2jksz1t6at.b[42][1]++;}}).then(function(){cov_2jksz1t6at.f[31]++;cov_2jksz1t6at.s[153]++;return _this2;});}else{cov_2jksz1t6at.b[33][1]++;}cov_2jksz1t6at.s[154]++;return Promise.reject(new Error("Current stream does not contain a ".concat(kind," track")));}},{key:"publish",value:function publish(sharedStream){cov_2jksz1t6at.f[32]++;var _this3=(cov_2jksz1t6at.s[155]++,this);cov_2jksz1t6at.s[156]++;Log.d('Local~publish');var roomId=(cov_2jksz1t6at.s[157]++,sharedStream.roomId);cov_2jksz1t6at.s[158]++;return DataSync.push("_/rooms/".concat(roomId,"/streams"),sharedStream.streamMetaData).then(function(streamRef){cov_2jksz1t6at.f[33]++;cov_2jksz1t6at.s[159]++;sharedStream.uid=streamRef.name();cov_2jksz1t6at.s[160]++;if(sharedStream.isVideoLoaded){cov_2jksz1t6at.b[44][0]++;var streamSize=(cov_2jksz1t6at.s[161]++,{height:sharedStream.node.videoHeight,width:sharedStream.node.videoWidth});cov_2jksz1t6at.s[162]++;streamRef.update(streamSize);}else{cov_2jksz1t6at.b[44][1]++;cov_2jksz1t6at.s[163]++;sharedStream.node.onloadeddata=function(){cov_2jksz1t6at.f[34]++;var streamSize=(cov_2jksz1t6at.s[164]++,{height:sharedStream.node.videoHeight,width:sharedStream.node.videoWidth});cov_2jksz1t6at.s[165]++;streamRef.update(streamSize);};}cov_2jksz1t6at.s[166]++;window.addEventListener('resize',function(){cov_2jksz1t6at.f[35]++;cov_2jksz1t6at.s[167]++;if(sharedStream.node!=null){cov_2jksz1t6at.b[45][0]++;var _streamSize=(cov_2jksz1t6at.s[168]++,{height:sharedStream.node.videoHeight,width:sharedStream.node.videoWidth});cov_2jksz1t6at.s[169]++;streamRef.update(_streamSize);}else{cov_2jksz1t6at.b[45][1]++;}});cov_2jksz1t6at.s[170]++;_cache.default.streams.shared[sharedStream.uid]=sharedStream;cov_2jksz1t6at.s[171]++;DataSync.onDisconnect("_/rooms/".concat(roomId,"/streams/").concat(sharedStream.uid)).remove();cov_2jksz1t6at.s[172]++;DataSync.onDisconnect("_/rooms/".concat(roomId,"/subscribers/").concat(sharedStream.uid)).remove();var path=(cov_2jksz1t6at.s[173]++,"_/rooms/".concat(sharedStream.roomId,"/subscribers/").concat(sharedStream.uid));cov_2jksz1t6at.s[174]++;var value=function value(snapData){cov_2jksz1t6at.f[36]++;cov_2jksz1t6at.s[175]++;return Object.assign({device:snapData.name()},(cov_2jksz1t6at.b[46][0]++,snapData.val())||(cov_2jksz1t6at.b[46][1]++,{}));};cov_2jksz1t6at.s[176]++;DataSync.on(path,'child_added',function(snapData){cov_2jksz1t6at.f[37]++;var subscriber=(cov_2jksz1t6at.s[177]++,value(snapData));cov_2jksz1t6at.s[178]++;Log.d('Local~subscribed',subscriber);cov_2jksz1t6at.s[179]++;_cache.default.peerConnections.offer(sharedStream,subscriber,_this3._callbacks[Events.local.WEBRTC_ERROR]).then(function(pc){cov_2jksz1t6at.f[38]++;cov_2jksz1t6at.s[180]++;((cov_2jksz1t6at.b[47][0]++,_this3._callbacks[Events.local.SUBSCRIBED])||(cov_2jksz1t6at.b[47][1]++,[])).forEach(function(cb){cov_2jksz1t6at.f[39]++;cov_2jksz1t6at.s[181]++;return cb(sharedStream,subscriber);});cov_2jksz1t6at.s[182]++;return sharedStream.peerConnections.push(pc);});},Log.e.bind(Log),_this3);cov_2jksz1t6at.s[183]++;DataSync.on(path,'child_removed',function(snapData){cov_2jksz1t6at.f[40]++;var subscriber=(cov_2jksz1t6at.s[184]++,value(snapData));cov_2jksz1t6at.s[185]++;Log.d('Local~un-subscribed',subscriber);var closedPC=(cov_2jksz1t6at.s[186]++,_cache.default.peerConnections.close(sharedStream.uid,subscriber.device));cov_2jksz1t6at.s[187]++;sharedStream.peerConnections=sharedStream.peerConnections.filter(function(pc){cov_2jksz1t6at.f[41]++;cov_2jksz1t6at.s[188]++;return pc!==closedPC;});},Log.e.bind(Log));cov_2jksz1t6at.s[189]++;Log.d('Local~shared',{sharedStream:sharedStream});cov_2jksz1t6at.s[190]++;return sharedStream;});}},{key:"constraints",set:function set(constraints){cov_2jksz1t6at.f[42]++;var _this4=(cov_2jksz1t6at.s[191]++,this);var values=(cov_2jksz1t6at.s[192]++,(cov_2jksz1t6at.b[48][0]++,constraints)||(cov_2jksz1t6at.b[48][1]++,_cache.default.config.constraints));var defaultConstraints=(cov_2jksz1t6at.s[193]++,_Media.default.constraints());cov_2jksz1t6at.s[194]++;['audio','video'].forEach(function(type){cov_2jksz1t6at.f[43]++;cov_2jksz1t6at.s[195]++;if(!~_this4.type.indexOf(type)){cov_2jksz1t6at.b[49][0]++;cov_2jksz1t6at.s[196]++;values[type]=false;}else{cov_2jksz1t6at.b[49][1]++;cov_2jksz1t6at.s[197]++;if(!values[type]){cov_2jksz1t6at.b[50][0]++;cov_2jksz1t6at.s[198]++;values[type]=defaultConstraints[type];}else{cov_2jksz1t6at.b[50][1]++;}}cov_2jksz1t6at.s[199]++;if((cov_2jksz1t6at.b[52][0]++,values[type].deviceId)||(cov_2jksz1t6at.b[52][1]++,values[type].facingMode)){cov_2jksz1t6at.b[51][0]++;cov_2jksz1t6at.s[200]++;_this4._inputs[type]=_getConstraintValue(values[type],values[type].facingMode?(cov_2jksz1t6at.b[53][0]++,'facingMode'):(cov_2jksz1t6at.b[53][1]++,'deviceId'));}else{cov_2jksz1t6at.b[51][1]++;}});cov_2jksz1t6at.s[201]++;Log.d('Local~set#contraints',values);cov_2jksz1t6at.s[202]++;this._constraints=values;},get:function get(){cov_2jksz1t6at.f[44]++;cov_2jksz1t6at.s[203]++;return this._constraints;}},{key:"media",set:function set(mediaStream){cov_2jksz1t6at.f[45]++;var _this5=(cov_2jksz1t6at.s[204]++,this);cov_2jksz1t6at.s[205]++;if(mediaStream){cov_2jksz1t6at.b[54][0]++;cov_2jksz1t6at.s[206]++;if(!(mediaStream instanceof MediaStream)){cov_2jksz1t6at.b[55][0]++;cov_2jksz1t6at.s[207]++;throw new Error('The media MUST be a MediaStream');}else{cov_2jksz1t6at.b[55][1]++;}var checkDevices=(cov_2jksz1t6at.s[208]++,{});cov_2jksz1t6at.s[209]++;mediaStream.getTracks().forEach(function(track){cov_2jksz1t6at.f[46]++;cov_2jksz1t6at.s[210]++;track.enabled=!_this5.muted[track.kind];cov_2jksz1t6at.s[211]++;if(!_this5._inputs[track.kind]){cov_2jksz1t6at.b[56][0]++;cov_2jksz1t6at.s[212]++;checkDevices[track.kind]=track.label;}else{cov_2jksz1t6at.b[56][1]++;}});cov_2jksz1t6at.s[213]++;if(Object.keys(checkDevices).length){cov_2jksz1t6at.b[57][0]++;cov_2jksz1t6at.s[214]++;_Media.default.devices().then(function(devices){cov_2jksz1t6at.f[47]++;cov_2jksz1t6at.s[215]++;Object.keys(checkDevices).forEach(function(kind){cov_2jksz1t6at.f[48]++;cov_2jksz1t6at.s[216]++;if(devices["".concat(kind,"input")]){cov_2jksz1t6at.b[58][0]++;var deviceIds=(cov_2jksz1t6at.s[217]++,devices["".concat(kind,"input")].filter(function(device){cov_2jksz1t6at.f[49]++;cov_2jksz1t6at.s[218]++;return(cov_2jksz1t6at.b[59][0]++,device.label.length)&&(cov_2jksz1t6at.b[59][1]++,device.label===checkDevices[kind]);}));cov_2jksz1t6at.s[219]++;if((cov_2jksz1t6at.b[61][0]++,deviceIds.length===1)&&(cov_2jksz1t6at.b[61][1]++,!_this5._inputs[kind])){cov_2jksz1t6at.b[60][0]++;cov_2jksz1t6at.s[220]++;_this5._inputs[kind]=deviceIds[0].deviceId;}else{cov_2jksz1t6at.b[60][1]++;}cov_2jksz1t6at.s[221]++;if((cov_2jksz1t6at.b[63][0]++,deviceIds.length===0)&&(cov_2jksz1t6at.b[63][1]++,devices["".concat(kind,"input")][0].label==='')&&(cov_2jksz1t6at.b[63][2]++,!_this5._inputs[kind])){cov_2jksz1t6at.b[62][0]++;cov_2jksz1t6at.s[222]++;_this5._inputs[kind]=devices["".concat(kind,"input")][0].deviceId;}else{cov_2jksz1t6at.b[62][1]++;}}else{cov_2jksz1t6at.b[58][1]++;}});});}else{cov_2jksz1t6at.b[57][1]++;}cov_2jksz1t6at.s[223]++;this.node=_Media.default.attachStream(mediaStream,this.container,this.node,0);cov_2jksz1t6at.s[224]++;this.node.onloadeddata=function(){cov_2jksz1t6at.f[50]++;cov_2jksz1t6at.s[225]++;_this5.isVideoLoaded=true;};cov_2jksz1t6at.s[226]++;this.status=_constants.CONNECTED;cov_2jksz1t6at.s[227]++;Log.d('Local~set media',{mediaStream:mediaStream},this.node);cov_2jksz1t6at.s[228]++;this.peerConnections.forEach(function(peerConnection){cov_2jksz1t6at.f[51]++;cov_2jksz1t6at.s[229]++;return peerConnection.renegotiate(_this5._media,mediaStream);});}else{cov_2jksz1t6at.b[54][1]++;cov_2jksz1t6at.s[230]++;if((cov_2jksz1t6at.b[65][0]++,this.media)&&(cov_2jksz1t6at.b[65][1]++,!mediaStream)){cov_2jksz1t6at.b[64][0]++;cov_2jksz1t6at.s[231]++;this.node.srcObject=null;cov_2jksz1t6at.s[232]++;this.container.removeChild(this.node);cov_2jksz1t6at.s[233]++;this.node=null;cov_2jksz1t6at.s[234]++;this.media.getTracks().forEach(function(track){cov_2jksz1t6at.f[52]++;cov_2jksz1t6at.s[235]++;return track.stop();});cov_2jksz1t6at.s[236]++;this.peerConnections.forEach(function(peerConnection){cov_2jksz1t6at.f[53]++;cov_2jksz1t6at.s[237]++;return peerConnection.close();});}else{cov_2jksz1t6at.b[64][1]++;}}cov_2jksz1t6at.s[238]++;this._media=mediaStream;},get:function get(){cov_2jksz1t6at.f[54]++;cov_2jksz1t6at.s[239]++;return this._media;}}],[{key:"getLocalVideo",value:function getLocalVideo(roomId,type,container,constraints){cov_2jksz1t6at.f[55]++;cov_2jksz1t6at.s[240]++;if(!_cache.default.user){cov_2jksz1t6at.b[66][0]++;cov_2jksz1t6at.s[241]++;return Promise.reject(new Error('Only an authenticated user can share a stream.'));}else{cov_2jksz1t6at.b[66][1]++;}var streamMetaData=(cov_2jksz1t6at.s[242]++,{from:_cache.default.user.uid,device:_cache.default.device,userAgent:_cache.default.userAgent,type:type});var sharedStream=(cov_2jksz1t6at.s[243]++,new Local(Object.assign({roomId:roomId,constraints:constraints,container:container},streamMetaData)));cov_2jksz1t6at.s[244]++;sharedStream.streamMetaData=streamMetaData;cov_2jksz1t6at.s[245]++;Log.d('Local~getLocalVideo',{sharedStream:sharedStream});cov_2jksz1t6at.s[246]++;return navigator.mediaDevices.getUserMedia(sharedStream.constraints).then(function(media){cov_2jksz1t6at.f[56]++;cov_2jksz1t6at.s[247]++;sharedStream.media=media;cov_2jksz1t6at.s[248]++;return sharedStream;});}}]);cov_2jksz1t6at.s[249]++;return Local;}());cov_2jksz1t6at.s[250]++;exports.default=Local;

/***/ }),

/***/ "./src/core/stream/Remote.js":
/*!***********************************!*\
  !*** ./src/core/stream/Remote.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_16vucbg6vg=function(){var path="/home/florent/Projets/reach/src/core/stream/Remote.js",hash="f4e7fbf54c612637022c24cff672db1d0b8aded2",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/stream/Remote.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:13},end:{line:8,column:61}},"3":{start:{line:10,column:15},end:{line:10,column:67}},"4":{start:{line:12,column:10},end:{line:12,column:57}},"5":{start:{line:14,column:13},end:{line:14,column:73}},"6":{start:{line:16,column:40},end:{line:16,column:470}},"7":{start:{line:16,column:69},end:{line:16,column:80}},"8":{start:{line:16,column:103},end:{line:16,column:105}},"9":{start:{line:16,column:107},end:{line:16,column:431}},"10":{start:{line:16,column:126},end:{line:16,column:429}},"11":{start:{line:16,column:149},end:{line:16,column:427}},"12":{start:{line:16,column:214},end:{line:16,column:319}},"13":{start:{line:16,column:321},end:{line:16,column:425}},"14":{start:{line:16,column:349},end:{line:16,column:390}},"15":{start:{line:16,column:400},end:{line:16,column:423}},"16":{start:{line:16,column:432},end:{line:16,column:453}},"17":{start:{line:16,column:454},end:{line:16,column:468}},"18":{start:{line:18,column:39},end:{line:18,column:93}},"19":{start:{line:20,column:50},end:{line:20,column:151}},"20":{start:{line:20,column:92},end:{line:20,column:149}},"21":{start:{line:22,column:44},end:{line:22,column:315}},"22":{start:{line:22,column:102},end:{line:22,column:110}},"23":{start:{line:22,column:112},end:{line:22,column:167}},"24":{start:{line:22,column:168},end:{line:22,column:199}},"25":{start:{line:22,column:200},end:{line:22,column:254}},"26":{start:{line:22,column:227},end:{line:22,column:254}},"27":{start:{line:22,column:255},end:{line:22,column:313}},"28":{start:{line:24,column:62},end:{line:24,column:131}},"29":{start:{line:24,column:78},end:{line:24,column:131}},"30":{start:{line:24,column:132},end:{line:24,column:193}},"31":{start:{line:24,column:149},end:{line:24,column:193}},"32":{start:{line:24,column:194},end:{line:24,column:213}},"33":{start:{line:32,column:0},end:{line:281,column:3}},"34":{start:{line:38,column:4},end:{line:38,column:34}},"35":{start:{line:40,column:4},end:{line:40,column:32}},"36":{start:{line:46,column:4},end:{line:46,column:32}},"37":{start:{line:52,column:4},end:{line:52,column:26}},"38":{start:{line:58,column:4},end:{line:58,column:28}},"39":{start:{line:64,column:4},end:{line:64,column:28}},"40":{start:{line:69,column:4},end:{line:69,column:32}},"41":{start:{line:75,column:4},end:{line:75,column:38}},"42":{start:{line:80,column:4},end:{line:80,column:32}},"43":{start:{line:85,column:4},end:{line:85,column:30}},"44":{start:{line:91,column:4},end:{line:91,column:65}},"45":{start:{line:96,column:4},end:{line:99,column:21}},"46":{start:{line:106,column:4},end:{line:106,column:25}},"47":{start:{line:112,column:4},end:{line:112,column:31}},"48":{start:{line:120,column:2},end:{line:278,column:6}},"49":{start:{line:130,column:18},end:{line:130,column:22}},"50":{start:{line:132,column:6},end:{line:134,column:7}},"51":{start:{line:133,column:8},end:{line:133,column:106}},"52":{start:{line:137,column:6},end:{line:137,column:92}},"53":{start:{line:138,column:6},end:{line:138,column:48}},"54":{start:{line:139,column:6},end:{line:187,column:42}},"55":{start:{line:140,column:8},end:{line:140,column:34}},"56":{start:{line:142,column:8},end:{line:145,column:11}},"57":{start:{line:147,column:8},end:{line:147,column:142}},"58":{start:{line:148,column:25},end:{line:148,column:30}},"59":{start:{line:149,column:8},end:{line:186,column:11}},"60":{start:{line:150,column:23},end:{line:150,column:37}},"61":{start:{line:151,column:10},end:{line:151,column:42}},"62":{start:{line:153,column:10},end:{line:185,column:11}},"63":{start:{line:155,column:12},end:{line:155,column:37}},"64":{start:{line:157,column:24},end:{line:157,column:36}},"65":{start:{line:158,column:25},end:{line:158,column:38}},"66":{start:{line:160,column:12},end:{line:167,column:13}},"67":{start:{line:161,column:14},end:{line:161,column:43}},"68":{start:{line:162,column:14},end:{line:162,column:41}},"69":{start:{line:163,column:14},end:{line:163,column:58}},"70":{start:{line:164,column:14},end:{line:166,column:17}},"71":{start:{line:165,column:16},end:{line:165,column:53}},"72":{start:{line:170,column:24},end:{line:170,column:36}},"73":{start:{line:172,column:12},end:{line:178,column:13}},"74":{start:{line:173,column:14},end:{line:173,column:34}},"75":{start:{line:174,column:14},end:{line:174,column:58}},"76":{start:{line:175,column:14},end:{line:177,column:17}},"77":{start:{line:176,column:16},end:{line:176,column:39}},"78":{start:{line:180,column:12},end:{line:180,column:30}},"79":{start:{line:181,column:17},end:{line:185,column:11}},"80":{start:{line:182,column:12},end:{line:182,column:43}},"81":{start:{line:184,column:12},end:{line:184,column:31}},"82":{start:{line:197,column:6},end:{line:197,column:32}},"83":{start:{line:210,column:6},end:{line:210,column:138}},"84":{start:{line:212,column:6},end:{line:212,column:90}},"85":{start:{line:214,column:6},end:{line:216,column:7}},"86":{start:{line:215,column:8},end:{line:215,column:125}},"87":{start:{line:219,column:6},end:{line:219,column:90}},"88":{start:{line:230,column:6},end:{line:236,column:7}},"89":{start:{line:231,column:8},end:{line:233,column:9}},"90":{start:{line:232,column:10},end:{line:232,column:38}},"91":{start:{line:235,column:8},end:{line:235,column:46}},"92":{start:{line:247,column:6},end:{line:257,column:7}},"93":{start:{line:248,column:8},end:{line:248,column:29}},"94":{start:{line:249,column:13},end:{line:257,column:7}},"95":{start:{line:250,column:8},end:{line:256,column:9}},"96":{start:{line:251,column:10},end:{line:251,column:38}},"97":{start:{line:253,column:10},end:{line:255,column:13}},"98":{start:{line:254,column:12},end:{line:254,column:35}},"99":{start:{line:267,column:19},end:{line:267,column:23}},"100":{start:{line:269,column:6},end:{line:271,column:9}},"101":{start:{line:270,column:8},end:{line:270,column:34}},"102":{start:{line:276,column:6},end:{line:276,column:67}},"103":{start:{line:280,column:2},end:{line:280,column:16}},"104":{start:{line:283,column:0},end:{line:283,column:25}}},fnMap:{"0":{name:"_interopRequireWildcard",decl:{start:{line:16,column:9},end:{line:16,column:32}},loc:{start:{line:16,column:38},end:{line:16,column:472}},line:16},"1":{name:"_interopRequireDefault",decl:{start:{line:18,column:9},end:{line:18,column:31}},loc:{start:{line:18,column:37},end:{line:18,column:95}},line:18},"2":{name:"_classCallCheck",decl:{start:{line:20,column:9},end:{line:20,column:24}},loc:{start:{line:20,column:48},end:{line:20,column:153}},line:20},"3":{name:"_defineProperties",decl:{start:{line:22,column:9},end:{line:22,column:26}},loc:{start:{line:22,column:42},end:{line:22,column:317}},line:22},"4":{name:"_createClass",decl:{start:{line:24,column:9},end:{line:24,column:21}},loc:{start:{line:24,column:60},end:{line:24,column:215}},line:24},"5":{name:"(anonymous_5)",decl:{start:{line:32,column:0},end:{line:32,column:1}},loc:{start:{line:32,column:12},end:{line:281,column:1}},line:32},"6":{name:"Remote",decl:{start:{line:37,column:11},end:{line:37,column:17}},loc:{start:{line:37,column:26},end:{line:113,column:3}},line:37},"7":{name:"subscribe",decl:{start:{line:129,column:20},end:{line:129,column:29}},loc:{start:{line:129,column:53},end:{line:188,column:5}},line:129},"8":{name:"(anonymous_8)",decl:{start:{line:139,column:123},end:{line:139,column:124}},loc:{start:{line:139,column:137},end:{line:141,column:7}},line:139},"9":{name:"(anonymous_9)",decl:{start:{line:141,column:14},end:{line:141,column:15}},loc:{start:{line:141,column:26},end:{line:146,column:7}},line:141},"10":{name:"(anonymous_10)",decl:{start:{line:146,column:14},end:{line:146,column:15}},loc:{start:{line:146,column:26},end:{line:187,column:7}},line:146},"11":{name:"(anonymous_11)",decl:{start:{line:149,column:93},end:{line:149,column:94}},loc:{start:{line:149,column:113},end:{line:186,column:9}},line:149},"12":{name:"(anonymous_12)",decl:{start:{line:164,column:67},end:{line:164,column:68}},loc:{start:{line:164,column:81},end:{line:166,column:15}},line:164},"13":{name:"(anonymous_13)",decl:{start:{line:175,column:67},end:{line:175,column:68}},loc:{start:{line:175,column:81},end:{line:177,column:15}},line:175},"14":{name:"unSubscribe",decl:{start:{line:196,column:20},end:{line:196,column:31}},loc:{start:{line:196,column:34},end:{line:198,column:5}},line:196},"15":{name:"_close",decl:{start:{line:208,column:20},end:{line:208,column:26}},loc:{start:{line:208,column:35},end:{line:220,column:5}},line:208},"16":{name:"on",decl:{start:{line:229,column:20},end:{line:229,column:22}},loc:{start:{line:229,column:40},end:{line:237,column:5}},line:229},"17":{name:"off",decl:{start:{line:246,column:20},end:{line:246,column:23}},loc:{start:{line:246,column:41},end:{line:258,column:5}},line:246},"18":{name:"(anonymous_18)",decl:{start:{line:253,column:65},end:{line:253,column:66}},loc:{start:{line:253,column:79},end:{line:255,column:11}},line:253},"19":{name:"update",decl:{start:{line:266,column:20},end:{line:266,column:26}},loc:{start:{line:266,column:35},end:{line:272,column:5}},line:266},"20":{name:"(anonymous_20)",decl:{start:{line:269,column:34},end:{line:269,column:35}},loc:{start:{line:269,column:49},end:{line:271,column:7}},line:269},"21":{name:"get",decl:{start:{line:275,column:18},end:{line:275,column:21}},loc:{start:{line:275,column:24},end:{line:277,column:5}},line:275}},branchMap:{"0":{loc:{start:{line:16,column:40},end:{line:16,column:470}},type:"if",locations:[{start:{line:16,column:40},end:{line:16,column:470}},{start:{line:16,column:40},end:{line:16,column:470}}],line:16},"1":{loc:{start:{line:16,column:44},end:{line:16,column:65}},type:"binary-expr",locations:[{start:{line:16,column:44},end:{line:16,column:47}},{start:{line:16,column:51},end:{line:16,column:65}}],line:16},"2":{loc:{start:{line:16,column:107},end:{line:16,column:431}},type:"if",locations:[{start:{line:16,column:107},end:{line:16,column:431}},{start:{line:16,column:107},end:{line:16,column:431}}],line:16},"3":{loc:{start:{line:16,column:149},end:{line:16,column:427}},type:"if",locations:[{start:{line:16,column:149},end:{line:16,column:427}},{start:{line:16,column:149},end:{line:16,column:427}}],line:16},"4":{loc:{start:{line:16,column:214},end:{line:16,column:319}},type:"cond-expr",locations:[{start:{line:16,column:273},end:{line:16,column:314}},{start:{line:16,column:317},end:{line:16,column:319}}],line:16},"5":{loc:{start:{line:16,column:214},end:{line:16,column:270}},type:"binary-expr",locations:[{start:{line:16,column:214},end:{line:16,column:235}},{start:{line:16,column:239},end:{line:16,column:270}}],line:16},"6":{loc:{start:{line:16,column:321},end:{line:16,column:425}},type:"if",locations:[{start:{line:16,column:321},end:{line:16,column:425}},{start:{line:16,column:321},end:{line:16,column:425}}],line:16},"7":{loc:{start:{line:16,column:325},end:{line:16,column:345}},type:"binary-expr",locations:[{start:{line:16,column:325},end:{line:16,column:333}},{start:{line:16,column:337},end:{line:16,column:345}}],line:16},"8":{loc:{start:{line:18,column:46},end:{line:18,column:92}},type:"cond-expr",locations:[{start:{line:18,column:70},end:{line:18,column:73}},{start:{line:18,column:76},end:{line:18,column:92}}],line:18},"9":{loc:{start:{line:18,column:46},end:{line:18,column:67}},type:"binary-expr",locations:[{start:{line:18,column:46},end:{line:18,column:49}},{start:{line:18,column:53},end:{line:18,column:67}}],line:18},"10":{loc:{start:{line:20,column:50},end:{line:20,column:151}},type:"if",locations:[{start:{line:20,column:50},end:{line:20,column:151}},{start:{line:20,column:50},end:{line:20,column:151}}],line:20},"11":{loc:{start:{line:22,column:136},end:{line:22,column:166}},type:"binary-expr",locations:[{start:{line:22,column:136},end:{line:22,column:157}},{start:{line:22,column:161},end:{line:22,column:166}}],line:22},"12":{loc:{start:{line:22,column:200},end:{line:22,column:254}},type:"if",locations:[{start:{line:22,column:200},end:{line:22,column:254}},{start:{line:22,column:200},end:{line:22,column:254}}],line:22},"13":{loc:{start:{line:24,column:62},end:{line:24,column:131}},type:"if",locations:[{start:{line:24,column:62},end:{line:24,column:131}},{start:{line:24,column:62},end:{line:24,column:131}}],line:24},"14":{loc:{start:{line:24,column:132},end:{line:24,column:193}},type:"if",locations:[{start:{line:24,column:132},end:{line:24,column:193}},{start:{line:24,column:132},end:{line:24,column:193}}],line:24},"15":{loc:{start:{line:132,column:6},end:{line:134,column:7}},type:"if",locations:[{start:{line:132,column:6},end:{line:134,column:7}},{start:{line:132,column:6},end:{line:134,column:7}}],line:132},"16":{loc:{start:{line:137,column:23},end:{line:137,column:91}},type:"binary-expr",locations:[{start:{line:137,column:23},end:{line:137,column:44}},{start:{line:137,column:48},end:{line:137,column:91}}],line:137},"17":{loc:{start:{line:153,column:10},end:{line:185,column:11}},type:"if",locations:[{start:{line:153,column:10},end:{line:185,column:11}},{start:{line:153,column:10},end:{line:185,column:11}}],line:153},"18":{loc:{start:{line:160,column:12},end:{line:167,column:13}},type:"if",locations:[{start:{line:160,column:12},end:{line:167,column:13}},{start:{line:160,column:12},end:{line:167,column:13}}],line:160},"19":{loc:{start:{line:160,column:16},end:{line:160,column:88}},type:"binary-expr",locations:[{start:{line:160,column:17},end:{line:160,column:23}},{start:{line:160,column:27},end:{line:160,column:32}},{start:{line:160,column:38},end:{line:160,column:61}},{start:{line:160,column:65},end:{line:160,column:87}}],line:160},"20":{loc:{start:{line:164,column:15},end:{line:164,column:57}},type:"binary-expr",locations:[{start:{line:164,column:15},end:{line:164,column:51}},{start:{line:164,column:55},end:{line:164,column:57}}],line:164},"21":{loc:{start:{line:172,column:12},end:{line:178,column:13}},type:"if",locations:[{start:{line:172,column:12},end:{line:178,column:13}},{start:{line:172,column:12},end:{line:178,column:13}}],line:172},"22":{loc:{start:{line:172,column:16},end:{line:172,column:97}},type:"binary-expr",locations:[{start:{line:172,column:16},end:{line:172,column:21}},{start:{line:172,column:26},end:{line:172,column:59}},{start:{line:172,column:63},end:{line:172,column:96}}],line:172},"23":{loc:{start:{line:175,column:15},end:{line:175,column:57}},type:"binary-expr",locations:[{start:{line:175,column:15},end:{line:175,column:51}},{start:{line:175,column:55},end:{line:175,column:57}}],line:175},"24":{loc:{start:{line:181,column:17},end:{line:185,column:11}},type:"if",locations:[{start:{line:181,column:17},end:{line:185,column:11}},{start:{line:181,column:17},end:{line:185,column:11}}],line:181},"25":{loc:{start:{line:214,column:6},end:{line:216,column:7}},type:"if",locations:[{start:{line:214,column:6},end:{line:216,column:7}},{start:{line:214,column:6},end:{line:216,column:7}}],line:214},"26":{loc:{start:{line:230,column:6},end:{line:236,column:7}},type:"if",locations:[{start:{line:230,column:6},end:{line:236,column:7}},{start:{line:230,column:6},end:{line:236,column:7}}],line:230},"27":{loc:{start:{line:231,column:8},end:{line:233,column:9}},type:"if",locations:[{start:{line:231,column:8},end:{line:233,column:9}},{start:{line:231,column:8},end:{line:233,column:9}}],line:231},"28":{loc:{start:{line:247,column:6},end:{line:257,column:7}},type:"if",locations:[{start:{line:247,column:6},end:{line:257,column:7}},{start:{line:247,column:6},end:{line:257,column:7}}],line:247},"29":{loc:{start:{line:249,column:13},end:{line:257,column:7}},type:"if",locations:[{start:{line:249,column:13},end:{line:257,column:7}},{start:{line:249,column:13},end:{line:257,column:7}}],line:249},"30":{loc:{start:{line:250,column:8},end:{line:256,column:9}},type:"if",locations:[{start:{line:250,column:8},end:{line:256,column:9}},{start:{line:250,column:8},end:{line:256,column:9}}],line:250},"31":{loc:{start:{line:276,column:13},end:{line:276,column:66}},type:"cond-expr",locations:[{start:{line:276,column:35},end:{line:276,column:59}},{start:{line:276,column:62},end:{line:276,column:66}}],line:276}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/stream/Remote.js"],names:["Remote","values","Log","d","roomId","uid","from","type","device","userAgent","height","width","container","cache","config","remoteStreamContainer","muted","Object","assign","audio","video","_callbacks","peerConnection","user","Promise","reject","Error","peerConnections","answer","Events","stream","WEBRTC_ERROR","then","pc","DataSync","update","to","_created","ts","onDisconnect","remove","subscribed","on","snapData","val","w","SIZE","forEach","cb","MUTE","i","_close","catch","r","remote","cancel","off","resolve","close","event","callback","supports","push","filter","keys","key","node"],mappings:"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",sourcesContent:["import cache from '../util/cache';\nimport * as DataSync from '../util/DataSync';\nimport * as Log from '../util/Log';\nimport * as Events from '../../definitions/Events';\n\n/**\n * A published Stream\n * @public\n */\nexport default class Remote {\n  /**\n   * @access protected\n   * @param {object} values\n   */\n  constructor(values) {\n    Log.d('Remote~new', values);\n    /**\n     * The uid of the room the stream is published in\n     * @type {string}\n     */\n    this.roomId = values.roomId;\n    /**\n     * The uid of this stream\n     * @type {string}\n     */\n    this.uid = values.uid;\n    /**\n     * The uid of the publisher of the stream\n     * @type {string}\n     */\n    this.from = values.from;\n    /**\n     * The type of the stream\n     * @type {string}\n     */\n    this.type = values.type;\n    /**\n     * @type {string}\n     */\n    this.device = values.device;\n    /**\n     * the user agent of the publisher of the stream\n     * @type {string}\n     */\n    this.userAgent = values.userAgent;\n    /**\n     * @type {string}\n     */\n    this.height = values.height;\n    /**\n     * @type {string}\n     */\n    this.width = values.width;\n    /**\n     * The local DOM container element where the {@link Local~media} is displayed\n     * @type {Element}\n     */\n    this.container = cache.config.remoteStreamContainer;\n    /**\n     * @type {{audio: boolean, video: boolean}}\n     */\n    this.muted = Object.assign({ audio: false, video: false }, values.muted);\n    /**\n     * List of callbacks for mute status change\n     * @type {{MUTE: function[]}}\n     * @private\n     */\n    this._callbacks = {};\n    /**\n     * PeerConnections associated to this remote stream\n     * @type {PeerConnection}\n     */\n    this.peerConnection = null;\n  }\n\n  /**\n   * DOM element where the MediaStream is displayed\n   * @returns {Element}\n   */\n  get node() {\n    return this.peerConnection ? this.peerConnection.node : null;\n  }\n\n  /**\n   * Subscribe to the stream\n   * @param {Element} [remoteStreamContainer] The element the stream is attached to.\n   * Can be null if already specified in ReachConfig.\n   * @returns {Promise}\n   */\n  subscribe(remoteStreamContainer) {\n    if (!cache.user) {\n      return Promise.reject(\n        new Error('Only an authenticated user can subscribe to a Room\\'s stream.')\n      );\n    }\n    // TODO: Test if not already subscribed ?\n    this.container = remoteStreamContainer || cache.config.remoteStreamContainer;\n    Log.d('Remote~subscribe', this.container);\n    return cache.peerConnections\n      .answer(this, this.container, this._callbacks[Events.stream.WEBRTC_ERROR])\n      .then((pc) => {\n        this.peerConnection = pc;\n      })\n      .then(() => DataSync.update(`_/rooms/${this.roomId}/subscribers/${this.uid}/${cache.device}`, {\n        to: cache.user.uid,\n        _created: DataSync.ts()\n      }))\n      .then(() => {\n        DataSync.onDisconnect(`_/rooms/${this.roomId}/subscribers/${this.uid}/${cache.device}`)\n          .remove();\n        let subscribed = false;\n        DataSync.on(`_/rooms/${this.roomId}/streams/${this.uid}`, 'value', (snapData) => {\n          const values = snapData.val();\n          Log.d('Remote~updated', values);\n          if (values) {\n            // Update type\n            this.type = values.type;\n            // update stream size\n            const { width, height } = values;\n            if ((height || width) && (height !== this.height || width !== this.height)) {\n              this.height = values.height;\n              this.width = values.width;\n              Log.w(this._callbacks[Events.stream.SIZE]);\n              (this._callbacks[Events.stream.SIZE] || []).forEach(cb => (\n                cb(this.height, this.width)\n              ));\n            }\n            // Update mute status\n            const { muted } = values;\n            if (muted && (muted.audio !== this.muted.audio || muted.video !== this.muted.video)) {\n              this.muted = muted;\n              Log.w(this._callbacks[Events.stream.MUTE]);\n              (this._callbacks[Events.stream.MUTE] || []).forEach(cb => cb(this.muted));\n            }\n            subscribed = true;\n          } else if (subscribed) {\n            Log.i('Remote#removed', this);\n            this._close(true);\n          }\n        });\n      })\n      .catch(Log.r('Remote~subscribe'));\n  }\n\n  /**\n   * Unsubscribe from the stream\n   * @returns {Promise}\n   */\n  unSubscribe() {\n    return this._close(false);\n  }\n\n  /**\n   * Close the remote Stream\n   * @param {boolean} remote Close is initiated by publisher\n   * @returns {*}\n   * @private\n   */\n  _close(remote) {\n    // Cancel onDisconnect\n    DataSync.onDisconnect(`_/rooms/${this.roomId}/subscribers/${this.uid}/${cache.device}`)\n      .cancel();\n    // Stop listening to stream modifications\n    DataSync.off(`_/rooms/${this.roomId}/streams/${this.uid}`, 'value');\n    // Un-subscribe\n    if (!remote) {\n      DataSync.remove(`_/rooms/${this.roomId}/subscribers/${this.uid}/${cache.device}`);\n    }\n    // Close PeerConnection\n    return Promise.resolve(cache.peerConnections.close(this.uid, this.device));\n  }\n\n  /**\n   * Register a callback for a specific event\n   * @param {string} event The event name ({@link Events/Stream})\n   * @param {function} callback The callback for the event\n   */\n  on(event, callback) {\n    if (Events.stream.supports(event)) {\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(callback);\n    }\n  }\n\n  /**\n   * Register a callback for a specific event\n   * @param {string} [event] The event name ({@link Events/Stream})\n   * @param {function} [callback] The callback for the event\n   */\n  off(event, callback) {\n    if (!event) {\n      this._callbacks = {};\n    } else if (Events.stream.supports(event)) {\n      if (!callback) {\n        this._callbacks[event] = [];\n      } else {\n        this._callbacks[event] = this._callbacks[event].filter(cb => cb !== callback);\n      }\n    }\n  }\n\n  /**\n   * @access protected\n   * @param {object} values\n   */\n  update(values) {\n    Object.keys(values).forEach((key) => {\n      this[key] = values[key];\n    });\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_16vucbg6vg.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_16vucbg6vg.s[1]++;exports.default=void 0;var _cache=(cov_16vucbg6vg.s[2]++,_interopRequireDefault(__webpack_require__(/*! ../util/cache */ "./src/core/util/cache.js")));var DataSync=(cov_16vucbg6vg.s[3]++,_interopRequireWildcard(__webpack_require__(/*! ../util/DataSync */ "./src/core/util/DataSync.js")));var Log=(cov_16vucbg6vg.s[4]++,_interopRequireWildcard(__webpack_require__(/*! ../util/Log */ "./src/core/util/Log.js")));var Events=(cov_16vucbg6vg.s[5]++,_interopRequireWildcard(__webpack_require__(/*! ../../definitions/Events */ "./src/definitions/Events.js")));function _interopRequireWildcard(obj){cov_16vucbg6vg.f[0]++;cov_16vucbg6vg.s[6]++;if((cov_16vucbg6vg.b[1][0]++,obj)&&(cov_16vucbg6vg.b[1][1]++,obj.__esModule)){cov_16vucbg6vg.b[0][0]++;cov_16vucbg6vg.s[7]++;return obj;}else{cov_16vucbg6vg.b[0][1]++;var newObj=(cov_16vucbg6vg.s[8]++,{});cov_16vucbg6vg.s[9]++;if(obj!=null){cov_16vucbg6vg.b[2][0]++;cov_16vucbg6vg.s[10]++;for(var key in obj){cov_16vucbg6vg.s[11]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_16vucbg6vg.b[3][0]++;var desc=(cov_16vucbg6vg.s[12]++,(cov_16vucbg6vg.b[5][0]++,Object.defineProperty)&&(cov_16vucbg6vg.b[5][1]++,Object.getOwnPropertyDescriptor)?(cov_16vucbg6vg.b[4][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_16vucbg6vg.b[4][1]++,{}));cov_16vucbg6vg.s[13]++;if((cov_16vucbg6vg.b[7][0]++,desc.get)||(cov_16vucbg6vg.b[7][1]++,desc.set)){cov_16vucbg6vg.b[6][0]++;cov_16vucbg6vg.s[14]++;Object.defineProperty(newObj,key,desc);}else{cov_16vucbg6vg.b[6][1]++;cov_16vucbg6vg.s[15]++;newObj[key]=obj[key];}}else{cov_16vucbg6vg.b[3][1]++;}}}else{cov_16vucbg6vg.b[2][1]++;}cov_16vucbg6vg.s[16]++;newObj.default=obj;cov_16vucbg6vg.s[17]++;return newObj;}}function _interopRequireDefault(obj){cov_16vucbg6vg.f[1]++;cov_16vucbg6vg.s[18]++;return(cov_16vucbg6vg.b[9][0]++,obj)&&(cov_16vucbg6vg.b[9][1]++,obj.__esModule)?(cov_16vucbg6vg.b[8][0]++,obj):(cov_16vucbg6vg.b[8][1]++,{default:obj});}function _classCallCheck(instance,Constructor){cov_16vucbg6vg.f[2]++;cov_16vucbg6vg.s[19]++;if(!(instance instanceof Constructor)){cov_16vucbg6vg.b[10][0]++;cov_16vucbg6vg.s[20]++;throw new TypeError("Cannot call a class as a function");}else{cov_16vucbg6vg.b[10][1]++;}}function _defineProperties(target,props){cov_16vucbg6vg.f[3]++;cov_16vucbg6vg.s[21]++;for(var i=0;i<props.length;i++){var descriptor=(cov_16vucbg6vg.s[22]++,props[i]);cov_16vucbg6vg.s[23]++;descriptor.enumerable=(cov_16vucbg6vg.b[11][0]++,descriptor.enumerable)||(cov_16vucbg6vg.b[11][1]++,false);cov_16vucbg6vg.s[24]++;descriptor.configurable=true;cov_16vucbg6vg.s[25]++;if("value"in descriptor){cov_16vucbg6vg.b[12][0]++;cov_16vucbg6vg.s[26]++;descriptor.writable=true;}else{cov_16vucbg6vg.b[12][1]++;}cov_16vucbg6vg.s[27]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_16vucbg6vg.f[4]++;cov_16vucbg6vg.s[28]++;if(protoProps){cov_16vucbg6vg.b[13][0]++;cov_16vucbg6vg.s[29]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_16vucbg6vg.b[13][1]++;}cov_16vucbg6vg.s[30]++;if(staticProps){cov_16vucbg6vg.b[14][0]++;cov_16vucbg6vg.s[31]++;_defineProperties(Constructor,staticProps);}else{cov_16vucbg6vg.b[14][1]++;}cov_16vucbg6vg.s[32]++;return Constructor;}var Remote=(cov_16vucbg6vg.s[33]++,function(){cov_16vucbg6vg.f[5]++;function Remote(values){cov_16vucbg6vg.f[6]++;cov_16vucbg6vg.s[34]++;_classCallCheck(this,Remote);cov_16vucbg6vg.s[35]++;Log.d('Remote~new',values);cov_16vucbg6vg.s[36]++;this.roomId=values.roomId;cov_16vucbg6vg.s[37]++;this.uid=values.uid;cov_16vucbg6vg.s[38]++;this.from=values.from;cov_16vucbg6vg.s[39]++;this.type=values.type;cov_16vucbg6vg.s[40]++;this.device=values.device;cov_16vucbg6vg.s[41]++;this.userAgent=values.userAgent;cov_16vucbg6vg.s[42]++;this.height=values.height;cov_16vucbg6vg.s[43]++;this.width=values.width;cov_16vucbg6vg.s[44]++;this.container=_cache.default.config.remoteStreamContainer;cov_16vucbg6vg.s[45]++;this.muted=Object.assign({audio:false,video:false},values.muted);cov_16vucbg6vg.s[46]++;this._callbacks={};cov_16vucbg6vg.s[47]++;this.peerConnection=null;}cov_16vucbg6vg.s[48]++;_createClass(Remote,[{key:"subscribe",value:function subscribe(remoteStreamContainer){cov_16vucbg6vg.f[7]++;var _this=(cov_16vucbg6vg.s[49]++,this);cov_16vucbg6vg.s[50]++;if(!_cache.default.user){cov_16vucbg6vg.b[15][0]++;cov_16vucbg6vg.s[51]++;return Promise.reject(new Error('Only an authenticated user can subscribe to a Room\'s stream.'));}else{cov_16vucbg6vg.b[15][1]++;}cov_16vucbg6vg.s[52]++;this.container=(cov_16vucbg6vg.b[16][0]++,remoteStreamContainer)||(cov_16vucbg6vg.b[16][1]++,_cache.default.config.remoteStreamContainer);cov_16vucbg6vg.s[53]++;Log.d('Remote~subscribe',this.container);cov_16vucbg6vg.s[54]++;return _cache.default.peerConnections.answer(this,this.container,this._callbacks[Events.stream.WEBRTC_ERROR]).then(function(pc){cov_16vucbg6vg.f[8]++;cov_16vucbg6vg.s[55]++;_this.peerConnection=pc;}).then(function(){cov_16vucbg6vg.f[9]++;cov_16vucbg6vg.s[56]++;return DataSync.update("_/rooms/".concat(_this.roomId,"/subscribers/").concat(_this.uid,"/").concat(_cache.default.device),{to:_cache.default.user.uid,_created:DataSync.ts()});}).then(function(){cov_16vucbg6vg.f[10]++;cov_16vucbg6vg.s[57]++;DataSync.onDisconnect("_/rooms/".concat(_this.roomId,"/subscribers/").concat(_this.uid,"/").concat(_cache.default.device)).remove();var subscribed=(cov_16vucbg6vg.s[58]++,false);cov_16vucbg6vg.s[59]++;DataSync.on("_/rooms/".concat(_this.roomId,"/streams/").concat(_this.uid),'value',function(snapData){cov_16vucbg6vg.f[11]++;var values=(cov_16vucbg6vg.s[60]++,snapData.val());cov_16vucbg6vg.s[61]++;Log.d('Remote~updated',values);cov_16vucbg6vg.s[62]++;if(values){cov_16vucbg6vg.b[17][0]++;cov_16vucbg6vg.s[63]++;_this.type=values.type;var width=(cov_16vucbg6vg.s[64]++,values.width),height=(cov_16vucbg6vg.s[65]++,values.height);cov_16vucbg6vg.s[66]++;if(((cov_16vucbg6vg.b[19][0]++,height)||(cov_16vucbg6vg.b[19][1]++,width))&&((cov_16vucbg6vg.b[19][2]++,height!==_this.height)||(cov_16vucbg6vg.b[19][3]++,width!==_this.height))){cov_16vucbg6vg.b[18][0]++;cov_16vucbg6vg.s[67]++;_this.height=values.height;cov_16vucbg6vg.s[68]++;_this.width=values.width;cov_16vucbg6vg.s[69]++;Log.w(_this._callbacks[Events.stream.SIZE]);cov_16vucbg6vg.s[70]++;((cov_16vucbg6vg.b[20][0]++,_this._callbacks[Events.stream.SIZE])||(cov_16vucbg6vg.b[20][1]++,[])).forEach(function(cb){cov_16vucbg6vg.f[12]++;cov_16vucbg6vg.s[71]++;return cb(_this.height,_this.width);});}else{cov_16vucbg6vg.b[18][1]++;}var muted=(cov_16vucbg6vg.s[72]++,values.muted);cov_16vucbg6vg.s[73]++;if((cov_16vucbg6vg.b[22][0]++,muted)&&((cov_16vucbg6vg.b[22][1]++,muted.audio!==_this.muted.audio)||(cov_16vucbg6vg.b[22][2]++,muted.video!==_this.muted.video))){cov_16vucbg6vg.b[21][0]++;cov_16vucbg6vg.s[74]++;_this.muted=muted;cov_16vucbg6vg.s[75]++;Log.w(_this._callbacks[Events.stream.MUTE]);cov_16vucbg6vg.s[76]++;((cov_16vucbg6vg.b[23][0]++,_this._callbacks[Events.stream.MUTE])||(cov_16vucbg6vg.b[23][1]++,[])).forEach(function(cb){cov_16vucbg6vg.f[13]++;cov_16vucbg6vg.s[77]++;return cb(_this.muted);});}else{cov_16vucbg6vg.b[21][1]++;}cov_16vucbg6vg.s[78]++;subscribed=true;}else{cov_16vucbg6vg.b[17][1]++;cov_16vucbg6vg.s[79]++;if(subscribed){cov_16vucbg6vg.b[24][0]++;cov_16vucbg6vg.s[80]++;Log.i('Remote#removed',_this);cov_16vucbg6vg.s[81]++;_this._close(true);}else{cov_16vucbg6vg.b[24][1]++;}}});}).catch(Log.r('Remote~subscribe'));}},{key:"unSubscribe",value:function unSubscribe(){cov_16vucbg6vg.f[14]++;cov_16vucbg6vg.s[82]++;return this._close(false);}},{key:"_close",value:function _close(remote){cov_16vucbg6vg.f[15]++;cov_16vucbg6vg.s[83]++;DataSync.onDisconnect("_/rooms/".concat(this.roomId,"/subscribers/").concat(this.uid,"/").concat(_cache.default.device)).cancel();cov_16vucbg6vg.s[84]++;DataSync.off("_/rooms/".concat(this.roomId,"/streams/").concat(this.uid),'value');cov_16vucbg6vg.s[85]++;if(!remote){cov_16vucbg6vg.b[25][0]++;cov_16vucbg6vg.s[86]++;DataSync.remove("_/rooms/".concat(this.roomId,"/subscribers/").concat(this.uid,"/").concat(_cache.default.device));}else{cov_16vucbg6vg.b[25][1]++;}cov_16vucbg6vg.s[87]++;return Promise.resolve(_cache.default.peerConnections.close(this.uid,this.device));}},{key:"on",value:function on(event,callback){cov_16vucbg6vg.f[16]++;cov_16vucbg6vg.s[88]++;if(Events.stream.supports(event)){cov_16vucbg6vg.b[26][0]++;cov_16vucbg6vg.s[89]++;if(!this._callbacks[event]){cov_16vucbg6vg.b[27][0]++;cov_16vucbg6vg.s[90]++;this._callbacks[event]=[];}else{cov_16vucbg6vg.b[27][1]++;}cov_16vucbg6vg.s[91]++;this._callbacks[event].push(callback);}else{cov_16vucbg6vg.b[26][1]++;}}},{key:"off",value:function off(event,callback){cov_16vucbg6vg.f[17]++;cov_16vucbg6vg.s[92]++;if(!event){cov_16vucbg6vg.b[28][0]++;cov_16vucbg6vg.s[93]++;this._callbacks={};}else{cov_16vucbg6vg.b[28][1]++;cov_16vucbg6vg.s[94]++;if(Events.stream.supports(event)){cov_16vucbg6vg.b[29][0]++;cov_16vucbg6vg.s[95]++;if(!callback){cov_16vucbg6vg.b[30][0]++;cov_16vucbg6vg.s[96]++;this._callbacks[event]=[];}else{cov_16vucbg6vg.b[30][1]++;cov_16vucbg6vg.s[97]++;this._callbacks[event]=this._callbacks[event].filter(function(cb){cov_16vucbg6vg.f[18]++;cov_16vucbg6vg.s[98]++;return cb!==callback;});}}else{cov_16vucbg6vg.b[29][1]++;}}}},{key:"update",value:function update(values){cov_16vucbg6vg.f[19]++;var _this2=(cov_16vucbg6vg.s[99]++,this);cov_16vucbg6vg.s[100]++;Object.keys(values).forEach(function(key){cov_16vucbg6vg.f[20]++;cov_16vucbg6vg.s[101]++;_this2[key]=values[key];});}},{key:"node",get:function get(){cov_16vucbg6vg.f[21]++;cov_16vucbg6vg.s[102]++;return this.peerConnection?(cov_16vucbg6vg.b[31][0]++,this.peerConnection.node):(cov_16vucbg6vg.b[31][1]++,null);}}]);cov_16vucbg6vg.s[103]++;return Remote;}());cov_16vucbg6vg.s[104]++;exports.default=Remote;

/***/ }),

/***/ "./src/core/stream/StreamManager.js":
/*!******************************************!*\
  !*** ./src/core/stream/StreamManager.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_1danmdm201=function(){var path="/home/florent/Projets/reach/src/core/stream/StreamManager.js",hash="006069a3b3197a4d284911fbba82121885291d1f",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/stream/StreamManager.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:14},end:{line:8,column:57}},"3":{start:{line:10,column:39},end:{line:10,column:93}},"4":{start:{line:12,column:50},end:{line:12,column:151}},"5":{start:{line:12,column:92},end:{line:12,column:149}},"6":{start:{line:14,column:44},end:{line:14,column:315}},"7":{start:{line:14,column:102},end:{line:14,column:110}},"8":{start:{line:14,column:112},end:{line:14,column:167}},"9":{start:{line:14,column:168},end:{line:14,column:199}},"10":{start:{line:14,column:200},end:{line:14,column:254}},"11":{start:{line:14,column:227},end:{line:14,column:254}},"12":{start:{line:14,column:255},end:{line:14,column:313}},"13":{start:{line:16,column:62},end:{line:16,column:131}},"14":{start:{line:16,column:78},end:{line:16,column:131}},"15":{start:{line:16,column:132},end:{line:16,column:193}},"16":{start:{line:16,column:149},end:{line:16,column:193}},"17":{start:{line:16,column:194},end:{line:16,column:213}},"18":{start:{line:23,column:0},end:{line:79,column:3}},"19":{start:{line:29,column:4},end:{line:29,column:41}},"20":{start:{line:35,column:4},end:{line:35,column:21}},"21":{start:{line:41,column:4},end:{line:41,column:21}},"22":{start:{line:50,column:2},end:{line:76,column:6}},"23":{start:{line:53,column:25},end:{line:53,column:52}},"24":{start:{line:55,column:6},end:{line:60,column:7}},"25":{start:{line:56,column:8},end:{line:56,column:40}},"26":{start:{line:58,column:8},end:{line:58,column:55}},"27":{start:{line:59,column:8},end:{line:59,column:51}},"28":{start:{line:62,column:6},end:{line:62,column:26}},"29":{start:{line:74,column:6},end:{line:74,column:41}},"30":{start:{line:78,column:2},end:{line:78,column:23}},"31":{start:{line:81,column:0},end:{line:81,column:32}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:10,column:9},end:{line:10,column:31}},loc:{start:{line:10,column:37},end:{line:10,column:95}},line:10},"1":{name:"_classCallCheck",decl:{start:{line:12,column:9},end:{line:12,column:24}},loc:{start:{line:12,column:48},end:{line:12,column:153}},line:12},"2":{name:"_defineProperties",decl:{start:{line:14,column:9},end:{line:14,column:26}},loc:{start:{line:14,column:42},end:{line:14,column:317}},line:14},"3":{name:"_createClass",decl:{start:{line:16,column:9},end:{line:16,column:21}},loc:{start:{line:16,column:60},end:{line:16,column:215}},line:16},"4":{name:"(anonymous_4)",decl:{start:{line:23,column:0},end:{line:23,column:1}},loc:{start:{line:23,column:12},end:{line:79,column:1}},line:23},"5":{name:"StreamManager",decl:{start:{line:28,column:11},end:{line:28,column:24}},loc:{start:{line:28,column:27},end:{line:42,column:3}},line:28},"6":{name:"getRemote",decl:{start:{line:52,column:20},end:{line:52,column:29}},loc:{start:{line:52,column:42},end:{line:63,column:5}},line:52},"7":{name:"getShared",decl:{start:{line:72,column:20},end:{line:72,column:29}},loc:{start:{line:72,column:42},end:{line:75,column:5}},line:72}},branchMap:{"0":{loc:{start:{line:10,column:46},end:{line:10,column:92}},type:"cond-expr",locations:[{start:{line:10,column:70},end:{line:10,column:73}},{start:{line:10,column:76},end:{line:10,column:92}}],line:10},"1":{loc:{start:{line:10,column:46},end:{line:10,column:67}},type:"binary-expr",locations:[{start:{line:10,column:46},end:{line:10,column:49}},{start:{line:10,column:53},end:{line:10,column:67}}],line:10},"2":{loc:{start:{line:12,column:50},end:{line:12,column:151}},type:"if",locations:[{start:{line:12,column:50},end:{line:12,column:151}},{start:{line:12,column:50},end:{line:12,column:151}}],line:12},"3":{loc:{start:{line:14,column:136},end:{line:14,column:166}},type:"binary-expr",locations:[{start:{line:14,column:136},end:{line:14,column:157}},{start:{line:14,column:161},end:{line:14,column:166}}],line:14},"4":{loc:{start:{line:14,column:200},end:{line:14,column:254}},type:"if",locations:[{start:{line:14,column:200},end:{line:14,column:254}},{start:{line:14,column:200},end:{line:14,column:254}}],line:14},"5":{loc:{start:{line:16,column:62},end:{line:16,column:131}},type:"if",locations:[{start:{line:16,column:62},end:{line:16,column:131}},{start:{line:16,column:62},end:{line:16,column:131}}],line:16},"6":{loc:{start:{line:16,column:132},end:{line:16,column:193}},type:"if",locations:[{start:{line:16,column:132},end:{line:16,column:193}},{start:{line:16,column:132},end:{line:16,column:193}}],line:16},"7":{loc:{start:{line:55,column:6},end:{line:60,column:7}},type:"if",locations:[{start:{line:55,column:6},end:{line:60,column:7}},{start:{line:55,column:6},end:{line:60,column:7}}],line:55}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/stream/StreamManager.js"],names:["StreamManager","shared","remote","streamData","remoteStream","uid","update","Remote"],mappings:";;;;;;;AAAA;;;;;;;;;;AAEA;;;IAGqBA,a;;;AACnB;;;;AAIA,2BAAc;AAAA;;AACZ;;;;AAIA,SAAKC,MAAL,GAAc,EAAd;AACA;;;;;AAIA,SAAKC,MAAL,GAAc,EAAd;AACD;AAED;;;;;;;;;8BAKUC,U,EAAY;AACpB,UAAIC,YAAY,GAAG,KAAKF,MAAL,CAAYC,UAAU,CAACE,GAAvB,CAAnB;;AACA,UAAID,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAACE,MAAb,CAAoBH,UAApB;AACD,OAFD,MAEO;AACLC,QAAAA,YAAY,GAAG,IAAIG,eAAJ,CAAWJ,UAAX,CAAf;AACA,aAAKD,MAAL,CAAYC,UAAU,CAACE,GAAvB,IAA8BD,YAA9B;AACD;;AACD,aAAOA,YAAP;AACD;AAED;;;;;;;;8BAKUD,U,EAAY;AACpB;AACA,aAAO,KAAKF,MAAL,CAAYE,UAAU,CAACE,GAAvB,CAAP;AACD",sourcesContent:["import Remote from './Remote';\n\n/**\n * @access protected\n */\nexport default class StreamManager {\n  /**\n   * Constructor\n   * @access protected\n   */\n  constructor() {\n    /**\n     * Shared local streams\n     * @type {{*: Local}}\n     */\n    this.shared = {};\n    /**\n     * Subscribed remote streams\n     * @type {{*: Remote}}\n     */\n    this.remote = {};\n  }\n\n  /**\n   * Get a Remote stream reference\n   * @param {object} streamData\n   * @returns {Remote}\n   */\n  getRemote(streamData) {\n    let remoteStream = this.remote[streamData.uid];\n    if (remoteStream) {\n      remoteStream.update(streamData);\n    } else {\n      remoteStream = new Remote(streamData);\n      this.remote[streamData.uid] = remoteStream;\n    }\n    return remoteStream;\n  }\n\n  /**\n   * Get a Remote stream reference\n   * @param {object} streamData\n   * @returns {Remote}\n   */\n  getShared(streamData) {\n    // TODO: If it does not exists locally as it should, maybe we should remove it ?\n    return this.shared[streamData.uid];\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1danmdm201.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1danmdm201.s[1]++;exports.default=void 0;var _Remote=(cov_1danmdm201.s[2]++,_interopRequireDefault(__webpack_require__(/*! ./Remote */ "./src/core/stream/Remote.js")));function _interopRequireDefault(obj){cov_1danmdm201.f[0]++;cov_1danmdm201.s[3]++;return(cov_1danmdm201.b[1][0]++,obj)&&(cov_1danmdm201.b[1][1]++,obj.__esModule)?(cov_1danmdm201.b[0][0]++,obj):(cov_1danmdm201.b[0][1]++,{default:obj});}function _classCallCheck(instance,Constructor){cov_1danmdm201.f[1]++;cov_1danmdm201.s[4]++;if(!(instance instanceof Constructor)){cov_1danmdm201.b[2][0]++;cov_1danmdm201.s[5]++;throw new TypeError("Cannot call a class as a function");}else{cov_1danmdm201.b[2][1]++;}}function _defineProperties(target,props){cov_1danmdm201.f[2]++;cov_1danmdm201.s[6]++;for(var i=0;i<props.length;i++){var descriptor=(cov_1danmdm201.s[7]++,props[i]);cov_1danmdm201.s[8]++;descriptor.enumerable=(cov_1danmdm201.b[3][0]++,descriptor.enumerable)||(cov_1danmdm201.b[3][1]++,false);cov_1danmdm201.s[9]++;descriptor.configurable=true;cov_1danmdm201.s[10]++;if("value"in descriptor){cov_1danmdm201.b[4][0]++;cov_1danmdm201.s[11]++;descriptor.writable=true;}else{cov_1danmdm201.b[4][1]++;}cov_1danmdm201.s[12]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_1danmdm201.f[3]++;cov_1danmdm201.s[13]++;if(protoProps){cov_1danmdm201.b[5][0]++;cov_1danmdm201.s[14]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_1danmdm201.b[5][1]++;}cov_1danmdm201.s[15]++;if(staticProps){cov_1danmdm201.b[6][0]++;cov_1danmdm201.s[16]++;_defineProperties(Constructor,staticProps);}else{cov_1danmdm201.b[6][1]++;}cov_1danmdm201.s[17]++;return Constructor;}var StreamManager=(cov_1danmdm201.s[18]++,function(){cov_1danmdm201.f[4]++;function StreamManager(){cov_1danmdm201.f[5]++;cov_1danmdm201.s[19]++;_classCallCheck(this,StreamManager);cov_1danmdm201.s[20]++;this.shared={};cov_1danmdm201.s[21]++;this.remote={};}cov_1danmdm201.s[22]++;_createClass(StreamManager,[{key:"getRemote",value:function getRemote(streamData){cov_1danmdm201.f[6]++;var remoteStream=(cov_1danmdm201.s[23]++,this.remote[streamData.uid]);cov_1danmdm201.s[24]++;if(remoteStream){cov_1danmdm201.b[7][0]++;cov_1danmdm201.s[25]++;remoteStream.update(streamData);}else{cov_1danmdm201.b[7][1]++;cov_1danmdm201.s[26]++;remoteStream=new _Remote.default(streamData);cov_1danmdm201.s[27]++;this.remote[streamData.uid]=remoteStream;}cov_1danmdm201.s[28]++;return remoteStream;}},{key:"getShared",value:function getShared(streamData){cov_1danmdm201.f[7]++;cov_1danmdm201.s[29]++;return this.shared[streamData.uid];}}]);cov_1danmdm201.s[30]++;return StreamManager;}());cov_1danmdm201.s[31]++;exports.default=StreamManager;

/***/ }),

/***/ "./src/core/util/DataSync.js":
/*!***********************************!*\
  !*** ./src/core/util/DataSync.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_179zxd8xwr=function(){var path="/home/florent/Projets/reach/src/core/util/DataSync.js",hash="8c80c23fe6f1ffcfd1cb74a0d2903ba5f79aa014",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/util/DataSync.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:197}},"2":{start:{line:8,column:13},end:{line:8,column:55}},"3":{start:{line:10,column:39},end:{line:10,column:93}},"4":{start:{line:12,column:38},end:{line:12,column:109}},"5":{start:{line:12,column:96},end:{line:12,column:109}},"6":{start:{line:12,column:110},end:{line:12,column:151}},"7":{start:{line:12,column:138},end:{line:12,column:151}},"8":{start:{line:12,column:152},end:{line:12,column:197}},"9":{start:{line:12,column:185},end:{line:12,column:197}},"10":{start:{line:12,column:198},end:{line:12,column:321}},"11":{start:{line:12,column:204},end:{line:12,column:278}},"12":{start:{line:12,column:279},end:{line:12,column:291}},"13":{start:{line:12,column:306},end:{line:12,column:319}},"14":{start:{line:14,column:43},end:{line:14,column:373}},"15":{start:{line:14,column:77},end:{line:14,column:108}},"16":{start:{line:14,column:118},end:{line:14,column:371}},"17":{start:{line:14,column:182},end:{line:14,column:188}},"18":{start:{line:14,column:190},end:{line:14,column:212}},"19":{start:{line:14,column:231},end:{line:14,column:261}},"20":{start:{line:14,column:278},end:{line:14,column:295}},"21":{start:{line:14,column:297},end:{line:14,column:351}},"22":{start:{line:14,column:308},end:{line:14,column:351}},"23":{start:{line:14,column:352},end:{line:14,column:368}},"24":{start:{line:14,column:374},end:{line:14,column:415}},"25":{start:{line:16,column:33},end:{line:16,column:138}},"26":{start:{line:16,column:109},end:{line:16,column:125}},"27":{start:{line:16,column:126},end:{line:16,column:135}},"28":{start:{line:16,column:139},end:{line:16,column:168}},"29":{start:{line:24,column:16},end:{line:36,column:1}},"30":{start:{line:27,column:2},end:{line:33,column:3}},"31":{start:{line:28,column:4},end:{line:28,column:18}},"32":{start:{line:29,column:9},end:{line:33,column:3}},"33":{start:{line:30,column:4},end:{line:30,column:20}},"34":{start:{line:31,column:9},end:{line:33,column:3}},"35":{start:{line:32,column:4},end:{line:32,column:20}},"36":{start:{line:35,column:2},end:{line:35,column:44}},"37":{start:{line:46,column:0},end:{line:46,column:30}},"38":{start:{line:48,column:13},end:{line:54,column:1}},"39":{start:{line:49,column:2},end:{line:53,column:5}},"40":{start:{line:50,column:4},end:{line:52,column:7}},"41":{start:{line:51,column:6},end:{line:51,column:47}},"42":{start:{line:64,column:10},end:{line:64,column:39}},"43":{start:{line:74,column:0},end:{line:74,column:18}},"44":{start:{line:76,column:11},end:{line:82,column:1}},"45":{start:{line:77,column:2},end:{line:81,column:5}},"46":{start:{line:78,column:18},end:{line:80,column:6}},"47":{start:{line:79,column:6},end:{line:79,column:54}},"48":{start:{line:92,column:0},end:{line:92,column:20}},"49":{start:{line:94,column:13},end:{line:94,column:45}},"50":{start:{line:103,column:0},end:{line:103,column:24}},"51":{start:{line:105,column:13},end:{line:111,column:1}},"52":{start:{line:106,column:2},end:{line:110,column:5}},"53":{start:{line:107,column:4},end:{line:109,column:7}},"54":{start:{line:108,column:6},end:{line:108,column:47}},"55":{start:{line:121,column:0},end:{line:121,column:24}},"56":{start:{line:123,column:11},end:{line:127,column:1}},"57":{start:{line:124,column:2},end:{line:126,column:5}},"58":{start:{line:125,column:4},end:{line:125,column:76}},"59":{start:{line:136,column:0},end:{line:136,column:20}},"60":{start:{line:138,column:10},end:{line:140,column:1}},"61":{start:{line:139,column:2},end:{line:139,column:29}},"62":{start:{line:151,column:0},end:{line:151,column:18}},"63":{start:{line:153,column:11},end:{line:169,column:1}},"64":{start:{line:154,column:2},end:{line:156,column:3}},"65":{start:{line:155,column:4},end:{line:155,column:39}},"66":{start:{line:158,column:2},end:{line:168,column:5}},"67":{start:{line:159,column:4},end:{line:165,column:5}},"68":{start:{line:160,column:19},end:{line:160,column:21}},"69":{start:{line:161,column:6},end:{line:163,column:9}},"70":{start:{line:162,column:8},end:{line:162,column:66}},"71":{start:{line:164,column:6},end:{line:164,column:20}},"72":{start:{line:167,column:4},end:{line:167,column:14}},"73":{start:{line:180,column:0},end:{line:180,column:20}},"74":{start:{line:182,column:9},end:{line:184,column:1}},"75":{start:{line:183,column:2},end:{line:183,column:86}},"76":{start:{line:195,column:0},end:{line:195,column:16}},"77":{start:{line:197,column:10},end:{line:199,column:1}},"78":{start:{line:198,column:2},end:{line:198,column:66}},"79":{start:{line:208,column:0},end:{line:208,column:18}},"80":{start:{line:210,column:19},end:{line:212,column:1}},"81":{start:{line:211,column:2},end:{line:211,column:56}},"82":{start:{line:221,column:0},end:{line:221,column:36}},"83":{start:{line:223,column:9},end:{line:225,column:1}},"84":{start:{line:224,column:2},end:{line:224,column:20}},"85":{start:{line:228,column:0},end:{line:228,column:16}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:10,column:9},end:{line:10,column:31}},loc:{start:{line:10,column:37},end:{line:10,column:95}},line:10},"1":{name:"isNativeReflectConstruct",decl:{start:{line:12,column:9},end:{line:12,column:33}},loc:{start:{line:12,column:36},end:{line:12,column:323}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:12,column:261},end:{line:12,column:262}},loc:{start:{line:12,column:273},end:{line:12,column:275}},line:12},"3":{name:"_construct",decl:{start:{line:14,column:9},end:{line:14,column:19}},loc:{start:{line:14,column:41},end:{line:14,column:417}},line:14},"4":{name:"_construct",decl:{start:{line:14,column:140},end:{line:14,column:150}},loc:{start:{line:14,column:172},end:{line:14,column:370}},line:14},"5":{name:"_setPrototypeOf",decl:{start:{line:16,column:9},end:{line:16,column:24}},loc:{start:{line:16,column:31},end:{line:16,column:170}},line:16},"6":{name:"_setPrototypeOf",decl:{start:{line:16,column:85},end:{line:16,column:100}},loc:{start:{line:16,column:107},end:{line:16,column:137}},line:16},"7":{name:"eventType",decl:{start:{line:24,column:25},end:{line:24,column:34}},loc:{start:{line:24,column:42},end:{line:36,column:1}},line:24},"8":{name:"_write",decl:{start:{line:48,column:22},end:{line:48,column:28}},loc:{start:{line:48,column:49},end:{line:54,column:1}},line:48},"9":{name:"(anonymous_9)",decl:{start:{line:49,column:21},end:{line:49,column:22}},loc:{start:{line:49,column:48},end:{line:53,column:3}},line:49},"10":{name:"(anonymous_10)",decl:{start:{line:50,column:50},end:{line:50,column:51}},loc:{start:{line:50,column:67},end:{line:52,column:5}},line:50},"11":{name:"push",decl:{start:{line:76,column:20},end:{line:76,column:24}},loc:{start:{line:76,column:37},end:{line:82,column:1}},line:76},"12":{name:"(anonymous_12)",decl:{start:{line:77,column:21},end:{line:77,column:22}},loc:{start:{line:77,column:48},end:{line:81,column:3}},line:77},"13":{name:"(anonymous_13)",decl:{start:{line:78,column:61},end:{line:78,column:62}},loc:{start:{line:78,column:78},end:{line:80,column:5}},line:78},"14":{name:"remove",decl:{start:{line:105,column:22},end:{line:105,column:28}},loc:{start:{line:105,column:35},end:{line:111,column:1}},line:105},"15":{name:"(anonymous_15)",decl:{start:{line:106,column:21},end:{line:106,column:22}},loc:{start:{line:106,column:48},end:{line:110,column:3}},line:106},"16":{name:"(anonymous_16)",decl:{start:{line:107,column:43},end:{line:107,column:44}},loc:{start:{line:107,column:60},end:{line:109,column:5}},line:107},"17":{name:"once",decl:{start:{line:123,column:20},end:{line:123,column:24}},loc:{start:{line:123,column:38},end:{line:127,column:1}},line:123},"18":{name:"(anonymous_18)",decl:{start:{line:124,column:21},end:{line:124,column:22}},loc:{start:{line:124,column:48},end:{line:126,column:3}},line:124},"19":{name:"get",decl:{start:{line:138,column:19},end:{line:138,column:22}},loc:{start:{line:138,column:29},end:{line:140,column:1}},line:138},"20":{name:"list",decl:{start:{line:153,column:20},end:{line:153,column:24}},loc:{start:{line:153,column:37},end:{line:169,column:1}},line:153},"21":{name:"(anonymous_21)",decl:{start:{line:158,column:24},end:{line:158,column:25}},loc:{start:{line:158,column:44},end:{line:168,column:3}},line:158},"22":{name:"(anonymous_22)",decl:{start:{line:161,column:23},end:{line:161,column:24}},loc:{start:{line:161,column:44},end:{line:163,column:7}},line:161},"23":{name:"on",decl:{start:{line:182,column:18},end:{line:182,column:20}},loc:{start:{line:182,column:65},end:{line:184,column:1}},line:182},"24":{name:"off",decl:{start:{line:197,column:19},end:{line:197,column:22}},loc:{start:{line:197,column:46},end:{line:199,column:1}},line:197},"25":{name:"onDisconnect",decl:{start:{line:210,column:28},end:{line:210,column:40}},loc:{start:{line:210,column:47},end:{line:212,column:1}},line:210},"26":{name:"ts",decl:{start:{line:223,column:18},end:{line:223,column:20}},loc:{start:{line:223,column:23},end:{line:225,column:1}},line:223}},branchMap:{"0":{loc:{start:{line:10,column:46},end:{line:10,column:92}},type:"cond-expr",locations:[{start:{line:10,column:70},end:{line:10,column:73}},{start:{line:10,column:76},end:{line:10,column:92}}],line:10},"1":{loc:{start:{line:10,column:46},end:{line:10,column:67}},type:"binary-expr",locations:[{start:{line:10,column:46},end:{line:10,column:49}},{start:{line:10,column:53},end:{line:10,column:67}}],line:10},"2":{loc:{start:{line:12,column:38},end:{line:12,column:109}},type:"if",locations:[{start:{line:12,column:38},end:{line:12,column:109}},{start:{line:12,column:38},end:{line:12,column:109}}],line:12},"3":{loc:{start:{line:12,column:42},end:{line:12,column:94}},type:"binary-expr",locations:[{start:{line:12,column:42},end:{line:12,column:72}},{start:{line:12,column:76},end:{line:12,column:94}}],line:12},"4":{loc:{start:{line:12,column:110},end:{line:12,column:151}},type:"if",locations:[{start:{line:12,column:110},end:{line:12,column:151}},{start:{line:12,column:110},end:{line:12,column:151}}],line:12},"5":{loc:{start:{line:12,column:152},end:{line:12,column:197}},type:"if",locations:[{start:{line:12,column:152},end:{line:12,column:197}},{start:{line:12,column:152},end:{line:12,column:197}}],line:12},"6":{loc:{start:{line:14,column:43},end:{line:14,column:373}},type:"if",locations:[{start:{line:14,column:43},end:{line:14,column:373}},{start:{line:14,column:43},end:{line:14,column:373}}],line:14},"7":{loc:{start:{line:14,column:297},end:{line:14,column:351}},type:"if",locations:[{start:{line:14,column:297},end:{line:14,column:351}},{start:{line:14,column:297},end:{line:14,column:351}}],line:14},"8":{loc:{start:{line:16,column:51},end:{line:16,column:137}},type:"binary-expr",locations:[{start:{line:16,column:51},end:{line:16,column:72}},{start:{line:16,column:76},end:{line:16,column:137}}],line:16},"9":{loc:{start:{line:27,column:2},end:{line:33,column:3}},type:"if",locations:[{start:{line:27,column:2},end:{line:33,column:3}},{start:{line:27,column:2},end:{line:33,column:3}}],line:27},"10":{loc:{start:{line:27,column:6},end:{line:27,column:57}},type:"binary-expr",locations:[{start:{line:27,column:6},end:{line:27,column:28}},{start:{line:27,column:32},end:{line:27,column:57}}],line:27},"11":{loc:{start:{line:29,column:9},end:{line:33,column:3}},type:"if",locations:[{start:{line:29,column:9},end:{line:33,column:3}},{start:{line:29,column:9},end:{line:33,column:3}}],line:29},"12":{loc:{start:{line:29,column:13},end:{line:29,column:65}},type:"binary-expr",locations:[{start:{line:29,column:13},end:{line:29,column:36}},{start:{line:29,column:40},end:{line:29,column:65}}],line:29},"13":{loc:{start:{line:31,column:9},end:{line:33,column:3}},type:"if",locations:[{start:{line:31,column:9},end:{line:33,column:3}},{start:{line:31,column:9},end:{line:33,column:3}}],line:31},"14":{loc:{start:{line:31,column:13},end:{line:31,column:67}},type:"binary-expr",locations:[{start:{line:31,column:13},end:{line:31,column:36}},{start:{line:31,column:40},end:{line:31,column:67}}],line:31},"15":{loc:{start:{line:35,column:9},end:{line:35,column:43}},type:"cond-expr",locations:[{start:{line:35,column:15},end:{line:35,column:35}},{start:{line:35,column:38},end:{line:35,column:43}}],line:35},"16":{loc:{start:{line:51,column:13},end:{line:51,column:46}},type:"cond-expr",locations:[{start:{line:51,column:21},end:{line:51,column:34}},{start:{line:51,column:37},end:{line:51,column:46}}],line:51},"17":{loc:{start:{line:79,column:13},end:{line:79,column:53}},type:"cond-expr",locations:[{start:{line:79,column:21},end:{line:79,column:34}},{start:{line:79,column:37},end:{line:79,column:53}}],line:79},"18":{loc:{start:{line:108,column:13},end:{line:108,column:46}},type:"cond-expr",locations:[{start:{line:108,column:21},end:{line:108,column:34}},{start:{line:108,column:37},end:{line:108,column:46}}],line:108},"19":{loc:{start:{line:159,column:4},end:{line:165,column:5}},type:"if",locations:[{start:{line:159,column:4},end:{line:165,column:5}},{start:{line:159,column:4},end:{line:165,column:5}}],line:159}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/util/DataSync.js"],names:["eventType","event","evt","test","_write","method","path","data","Promise","resolve","reject","cache","base","child","error","set","bind","undefined","push","pushRef","update","remove","once","get","list","Type","params","then","snapData","values","forEach","snapChild","on","queryCallback","cancelCallback","off","callback","onDisconnect","ts","Date","now"],mappings:"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",sourcesContent:["import cache from './cache';\n\n/**\n * Get the event string for Webcom from Reach events\n * @access protected\n * @param {string} event A Reach event\n * @return {string}\n */\nexport const eventType = (event) => {\n  let evt;\n  if ((/_ADDED$/i).test(event) || /_PUBLISHED$/.test(event)) {\n    evt = 'added';\n  } else if (/_CHANGED$/.test(event) || /_REFRESHED$/.test(event)) {\n    evt = 'changed';\n  } else if (/_REMOVED$/.test(event) || /_UNPUBLISHED$/.test(event)) {\n    evt = 'removed';\n  }\n  return evt ? `child_${evt}` : event;\n};\n\n/**\n * Write method\n * @param {string} method Write method (set,update)\n * @param {string} path The path to set\n * @param {object} data The data to set\n * @ignore\n */\nconst _write = (method, path, data) => new Promise((resolve, reject) => {\n  cache.base.child(path)[method](data, error => (error ? reject(error) : resolve()));\n});\n\n/**\n * {@link Webcom#set} as a {@link Promise}\n * @access protected\n * @param {string} path The path to set\n * @param {object} data The data to set\n * @return {Promise<*, Error>}\n */\nexport const set = _write.bind(undefined, 'set');\n\n/**\n * {@link Webcom#push} as a {@link Promise}\n * @access protected\n * @param {string} path The path to push\n * @param {object} data The data to push\n * @return {Promise<Webcom, Error>}\n */\nexport const push = (path, data) => new Promise((resolve, reject) => {\n  const pushRef = cache.base.child(path).push(data,\n    error => (error ? reject(error) : resolve(pushRef)));\n});\n\n/**\n * {@link Webcom#update} as a {@link Promise}\n * @access protected\n * @param {string} path The path to update\n * @param {object} data The data to update\n * @return {Promise<*, Error>}\n */\nexport const update = _write.bind(undefined, 'update');\n\n/**\n * {@link Webcom#remove} as a {@link Promise}\n * @access protected\n * @param {string} path The path to remove\n * @return {Promise<*, Error>}\n */\nexport const remove = path => new Promise((resolve, reject) => {\n  cache.base.child(path).remove(error => (error ? reject(error) : resolve()));\n});\n\n/**\n * {@link Webcom#once} shortcut as a {@link Promise}\n * @access protected\n * @param {string} path The path\n * @param {string} event The event\n * @returns {Promise<Webcom/api.DataSnapshot, Error>}\n */\nexport const once = (path, event) => new Promise((resolve, reject) => {\n  cache.base.child(path).once(eventType(event), resolve, reject);\n});\n\n/**\n * {@link Webcom#once}('value') as a {@link Promise}\n * @access protected\n * @param {string} path The path to get\n * @return {Promise<Webcom/api.DataSnapshot, Error>}\n */\nexport const get = path => once(path, 'value');\n\n/**\n * List values as a {@link Promise}\n * @access protected\n * @param {string} path The path to get\n * @param {function} Type The type of the object to list\n * @param params Additional constructor parameters\n * @return {Promise<Object[], Error>}\n */\nexport const list = (path, Type, ...params) => get(path)\n  .then((snapData) => {\n    if (snapData) {\n      const values = [];\n      snapData.forEach((snapChild) => {\n        values.push(new Type(snapChild, ...params));\n      });\n      return values;\n    }\n    return [];\n  });\n\n/**\n * {@link Webcom#on} shortcut\n * @access protected\n * @param {string} path The path\n * @param {string} event The event\n * @param {Webcom/api.Query~queryCallback|function} queryCallback The callback\n * @param {Webcom/api.Query~cancelCallback|function} [cancelCallback] The callback\n */\nexport const on = (path, event, queryCallback, cancelCallback) => {\n  cache.base.child(path).on(eventType(event), queryCallback, cancelCallback);\n};\n\n/**\n * {@link Webcom#off} shortcut\n * @access protected\n * @param {string} path The path\n * @param {string} event The event\n * @param {function} [callback] The callback\n * @param {object} context The execution context\n */\nexport const off = (path, event, callback) => {\n  cache.base.child(path).off(eventType(event), callback);\n};\n\n/**\n * {@link Webcom#onDisconnect} shortcut\n * @access protected\n * @param {string} path The path\n * @return {Webcom/api.OnDisconnect}\n */\nexport const onDisconnect = path => cache.base.child(path).onDisconnect();\n\n/**\n * Timestamp value\n * @access protected\n * @type {function}\n */\n// export const ts = () => Webcom.ServerValue.TIMESTAMP;\nexport const ts = () => Date.now();\n// HACK #DataSync: Rollback when TIMESTAMP works again (server-side bug with security rules)\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_179zxd8xwr.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_179zxd8xwr.s[1]++;exports.ts=exports.onDisconnect=exports.off=exports.on=exports.list=exports.get=exports.once=exports.remove=exports.update=exports.push=exports.set=exports.eventType=void 0;var _cache=(cov_179zxd8xwr.s[2]++,_interopRequireDefault(__webpack_require__(/*! ./cache */ "./src/core/util/cache.js")));function _interopRequireDefault(obj){cov_179zxd8xwr.f[0]++;cov_179zxd8xwr.s[3]++;return(cov_179zxd8xwr.b[1][0]++,obj)&&(cov_179zxd8xwr.b[1][1]++,obj.__esModule)?(cov_179zxd8xwr.b[0][0]++,obj):(cov_179zxd8xwr.b[0][1]++,{default:obj});}function isNativeReflectConstruct(){cov_179zxd8xwr.f[1]++;cov_179zxd8xwr.s[4]++;if((cov_179zxd8xwr.b[3][0]++,typeof Reflect==="undefined")||(cov_179zxd8xwr.b[3][1]++,!Reflect.construct)){cov_179zxd8xwr.b[2][0]++;cov_179zxd8xwr.s[5]++;return false;}else{cov_179zxd8xwr.b[2][1]++;}cov_179zxd8xwr.s[6]++;if(Reflect.construct.sham){cov_179zxd8xwr.b[4][0]++;cov_179zxd8xwr.s[7]++;return false;}else{cov_179zxd8xwr.b[4][1]++;}cov_179zxd8xwr.s[8]++;if(typeof Proxy==="function"){cov_179zxd8xwr.b[5][0]++;cov_179zxd8xwr.s[9]++;return true;}else{cov_179zxd8xwr.b[5][1]++;}cov_179zxd8xwr.s[10]++;try{cov_179zxd8xwr.s[11]++;Date.prototype.toString.call(Reflect.construct(Date,[],function(){cov_179zxd8xwr.f[2]++;}));cov_179zxd8xwr.s[12]++;return true;}catch(e){cov_179zxd8xwr.s[13]++;return false;}}function _construct(Parent,args,Class){cov_179zxd8xwr.f[3]++;cov_179zxd8xwr.s[14]++;if(isNativeReflectConstruct()){cov_179zxd8xwr.b[6][0]++;cov_179zxd8xwr.s[15]++;_construct=Reflect.construct;}else{cov_179zxd8xwr.b[6][1]++;cov_179zxd8xwr.s[16]++;_construct=function _construct(Parent,args,Class){cov_179zxd8xwr.f[4]++;var a=(cov_179zxd8xwr.s[17]++,[null]);cov_179zxd8xwr.s[18]++;a.push.apply(a,args);var Constructor=(cov_179zxd8xwr.s[19]++,Function.bind.apply(Parent,a));var instance=(cov_179zxd8xwr.s[20]++,new Constructor());cov_179zxd8xwr.s[21]++;if(Class){cov_179zxd8xwr.b[7][0]++;cov_179zxd8xwr.s[22]++;_setPrototypeOf(instance,Class.prototype);}else{cov_179zxd8xwr.b[7][1]++;}cov_179zxd8xwr.s[23]++;return instance;};}cov_179zxd8xwr.s[24]++;return _construct.apply(null,arguments);}function _setPrototypeOf(o,p){cov_179zxd8xwr.f[5]++;cov_179zxd8xwr.s[25]++;_setPrototypeOf=(cov_179zxd8xwr.b[8][0]++,Object.setPrototypeOf)||(cov_179zxd8xwr.b[8][1]++,function _setPrototypeOf(o,p){cov_179zxd8xwr.f[6]++;cov_179zxd8xwr.s[26]++;o.__proto__=p;cov_179zxd8xwr.s[27]++;return o;});cov_179zxd8xwr.s[28]++;return _setPrototypeOf(o,p);}cov_179zxd8xwr.s[29]++;var eventType=function eventType(event){cov_179zxd8xwr.f[7]++;var evt;cov_179zxd8xwr.s[30]++;if((cov_179zxd8xwr.b[10][0]++,/_ADDED$/i.test(event))||(cov_179zxd8xwr.b[10][1]++,/_PUBLISHED$/.test(event))){cov_179zxd8xwr.b[9][0]++;cov_179zxd8xwr.s[31]++;evt='added';}else{cov_179zxd8xwr.b[9][1]++;cov_179zxd8xwr.s[32]++;if((cov_179zxd8xwr.b[12][0]++,/_CHANGED$/.test(event))||(cov_179zxd8xwr.b[12][1]++,/_REFRESHED$/.test(event))){cov_179zxd8xwr.b[11][0]++;cov_179zxd8xwr.s[33]++;evt='changed';}else{cov_179zxd8xwr.b[11][1]++;cov_179zxd8xwr.s[34]++;if((cov_179zxd8xwr.b[14][0]++,/_REMOVED$/.test(event))||(cov_179zxd8xwr.b[14][1]++,/_UNPUBLISHED$/.test(event))){cov_179zxd8xwr.b[13][0]++;cov_179zxd8xwr.s[35]++;evt='removed';}else{cov_179zxd8xwr.b[13][1]++;}}}cov_179zxd8xwr.s[36]++;return evt?(cov_179zxd8xwr.b[15][0]++,"child_".concat(evt)):(cov_179zxd8xwr.b[15][1]++,event);};cov_179zxd8xwr.s[37]++;exports.eventType=eventType;cov_179zxd8xwr.s[38]++;var _write=function _write(method,path,data){cov_179zxd8xwr.f[8]++;cov_179zxd8xwr.s[39]++;return new Promise(function(resolve,reject){cov_179zxd8xwr.f[9]++;cov_179zxd8xwr.s[40]++;_cache.default.base.child(path)[method](data,function(error){cov_179zxd8xwr.f[10]++;cov_179zxd8xwr.s[41]++;return error?(cov_179zxd8xwr.b[16][0]++,reject(error)):(cov_179zxd8xwr.b[16][1]++,resolve());});});};var set=(cov_179zxd8xwr.s[42]++,_write.bind(undefined,'set'));cov_179zxd8xwr.s[43]++;exports.set=set;cov_179zxd8xwr.s[44]++;var push=function push(path,data){cov_179zxd8xwr.f[11]++;cov_179zxd8xwr.s[45]++;return new Promise(function(resolve,reject){cov_179zxd8xwr.f[12]++;var pushRef=(cov_179zxd8xwr.s[46]++,_cache.default.base.child(path).push(data,function(error){cov_179zxd8xwr.f[13]++;cov_179zxd8xwr.s[47]++;return error?(cov_179zxd8xwr.b[17][0]++,reject(error)):(cov_179zxd8xwr.b[17][1]++,resolve(pushRef));}));});};cov_179zxd8xwr.s[48]++;exports.push=push;var update=(cov_179zxd8xwr.s[49]++,_write.bind(undefined,'update'));cov_179zxd8xwr.s[50]++;exports.update=update;cov_179zxd8xwr.s[51]++;var remove=function remove(path){cov_179zxd8xwr.f[14]++;cov_179zxd8xwr.s[52]++;return new Promise(function(resolve,reject){cov_179zxd8xwr.f[15]++;cov_179zxd8xwr.s[53]++;_cache.default.base.child(path).remove(function(error){cov_179zxd8xwr.f[16]++;cov_179zxd8xwr.s[54]++;return error?(cov_179zxd8xwr.b[18][0]++,reject(error)):(cov_179zxd8xwr.b[18][1]++,resolve());});});};cov_179zxd8xwr.s[55]++;exports.remove=remove;cov_179zxd8xwr.s[56]++;var once=function once(path,event){cov_179zxd8xwr.f[17]++;cov_179zxd8xwr.s[57]++;return new Promise(function(resolve,reject){cov_179zxd8xwr.f[18]++;cov_179zxd8xwr.s[58]++;_cache.default.base.child(path).once(eventType(event),resolve,reject);});};cov_179zxd8xwr.s[59]++;exports.once=once;cov_179zxd8xwr.s[60]++;var get=function get(path){cov_179zxd8xwr.f[19]++;cov_179zxd8xwr.s[61]++;return once(path,'value');};cov_179zxd8xwr.s[62]++;exports.get=get;cov_179zxd8xwr.s[63]++;var list=function list(path,Type){cov_179zxd8xwr.f[20]++;cov_179zxd8xwr.s[64]++;for(var _len=arguments.length,params=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){cov_179zxd8xwr.s[65]++;params[_key-2]=arguments[_key];}cov_179zxd8xwr.s[66]++;return get(path).then(function(snapData){cov_179zxd8xwr.f[21]++;cov_179zxd8xwr.s[67]++;if(snapData){cov_179zxd8xwr.b[19][0]++;var values=(cov_179zxd8xwr.s[68]++,[]);cov_179zxd8xwr.s[69]++;snapData.forEach(function(snapChild){cov_179zxd8xwr.f[22]++;cov_179zxd8xwr.s[70]++;values.push(_construct(Type,[snapChild].concat(params)));});cov_179zxd8xwr.s[71]++;return values;}else{cov_179zxd8xwr.b[19][1]++;}cov_179zxd8xwr.s[72]++;return[];});};cov_179zxd8xwr.s[73]++;exports.list=list;cov_179zxd8xwr.s[74]++;var on=function on(path,event,queryCallback,cancelCallback){cov_179zxd8xwr.f[23]++;cov_179zxd8xwr.s[75]++;_cache.default.base.child(path).on(eventType(event),queryCallback,cancelCallback);};cov_179zxd8xwr.s[76]++;exports.on=on;cov_179zxd8xwr.s[77]++;var off=function off(path,event,callback){cov_179zxd8xwr.f[24]++;cov_179zxd8xwr.s[78]++;_cache.default.base.child(path).off(eventType(event),callback);};cov_179zxd8xwr.s[79]++;exports.off=off;cov_179zxd8xwr.s[80]++;var onDisconnect=function onDisconnect(path){cov_179zxd8xwr.f[25]++;cov_179zxd8xwr.s[81]++;return _cache.default.base.child(path).onDisconnect();};cov_179zxd8xwr.s[82]++;exports.onDisconnect=onDisconnect;cov_179zxd8xwr.s[83]++;var ts=function ts(){cov_179zxd8xwr.f[26]++;cov_179zxd8xwr.s[84]++;return Date.now();};cov_179zxd8xwr.s[85]++;exports.ts=ts;

/***/ }),

/***/ "./src/core/util/Log.js":
/*!******************************!*\
  !*** ./src/core/util/Log.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {var cov_22y7k47z5v=function(){var path="/home/florent/Projets/reach/src/core/util/Log.js",hash="0d18df03e220dff9b1d5bde4c46c9927acec476e",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/util/Log.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:67}},"2":{start:{line:8,column:13},end:{line:8,column:55}},"3":{start:{line:10,column:39},end:{line:10,column:93}},"4":{start:{line:17,column:13},end:{line:17,column:47}},"5":{start:{line:25,column:16},end:{line:27,column:1}},"6":{start:{line:26,column:2},end:{line:26,column:102}},"7":{start:{line:35,column:15},end:{line:35,column:29}},"8":{start:{line:44,column:13},end:{line:50,column:1}},"9":{start:{line:45,column:2},end:{line:47,column:3}},"10":{start:{line:46,column:4},end:{line:46,column:41}},"11":{start:{line:49,column:2},end:{line:49,column:115}},"12":{start:{line:60,column:12},end:{line:83,column:1}},"13":{start:{line:61,column:2},end:{line:63,column:3}},"14":{start:{line:62,column:4},end:{line:62,column:40}},"15":{start:{line:65,column:2},end:{line:82,column:3}},"16":{start:{line:66,column:4},end:{line:66,column:112}},"17":{start:{line:67,column:17},end:{line:67,column:77}},"18":{start:{line:69,column:4},end:{line:71,column:5}},"19":{start:{line:70,column:6},end:{line:70,column:24}},"20":{start:{line:73,column:4},end:{line:75,column:7}},"21":{start:{line:74,column:6},end:{line:74,column:56}},"22":{start:{line:77,column:4},end:{line:79,column:5}},"23":{start:{line:78,column:6},end:{line:78,column:26}},"24":{start:{line:81,column:4},end:{line:81,column:50}},"25":{start:{line:91,column:8},end:{line:91,column:40}},"26":{start:{line:98,column:0},end:{line:98,column:14}},"27":{start:{line:99,column:8},end:{line:99,column:40}},"28":{start:{line:106,column:0},end:{line:106,column:14}},"29":{start:{line:107,column:8},end:{line:107,column:40}},"30":{start:{line:114,column:0},end:{line:114,column:14}},"31":{start:{line:115,column:8},end:{line:115,column:37}},"32":{start:{line:123,column:0},end:{line:123,column:14}},"33":{start:{line:125,column:8},end:{line:130,column:1}},"34":{start:{line:126,column:2},end:{line:129,column:4}},"35":{start:{line:127,column:4},end:{line:127,column:23}},"36":{start:{line:128,column:4},end:{line:128,column:45}},"37":{start:{line:132,column:0},end:{line:132,column:14}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:10,column:9},end:{line:10,column:31}},loc:{start:{line:10,column:37},end:{line:10,column:95}},line:10},"1":{name:"isEnabled",decl:{start:{line:25,column:25},end:{line:25,column:34}},loc:{start:{line:25,column:42},end:{line:27,column:1}},line:25},"2":{name:"logger",decl:{start:{line:44,column:22},end:{line:44,column:28}},loc:{start:{line:44,column:44},end:{line:50,column:1}},line:44},"3":{name:"(anonymous_3)",decl:{start:{line:49,column:100},end:{line:49,column:101}},loc:{start:{line:49,column:112},end:{line:49,column:114}},line:49},"4":{name:"group",decl:{start:{line:60,column:21},end:{line:60,column:26}},loc:{start:{line:60,column:43},end:{line:83,column:1}},line:60},"5":{name:"(anonymous_5)",decl:{start:{line:73,column:19},end:{line:73,column:20}},loc:{start:{line:73,column:35},end:{line:75,column:5}},line:73},"6":{name:"r",decl:{start:{line:125,column:17},end:{line:125,column:18}},loc:{start:{line:125,column:28},end:{line:130,column:1}},line:125},"7":{name:"(anonymous_7)",decl:{start:{line:126,column:9},end:{line:126,column:10}},loc:{start:{line:126,column:27},end:{line:129,column:3}},line:126}},branchMap:{"0":{loc:{start:{line:10,column:46},end:{line:10,column:92}},type:"cond-expr",locations:[{start:{line:10,column:70},end:{line:10,column:73}},{start:{line:10,column:76},end:{line:10,column:92}}],line:10},"1":{loc:{start:{line:10,column:46},end:{line:10,column:67}},type:"binary-expr",locations:[{start:{line:10,column:46},end:{line:10,column:49}},{start:{line:10,column:53},end:{line:10,column:67}}],line:10},"2":{loc:{start:{line:49,column:9},end:{line:49,column:114}},type:"cond-expr",locations:[{start:{line:49,column:28},end:{line:49,column:97}},{start:{line:49,column:100},end:{line:49,column:114}}],line:49},"3":{loc:{start:{line:65,column:2},end:{line:82,column:3}},type:"if",locations:[{start:{line:65,column:2},end:{line:82,column:3}},{start:{line:65,column:2},end:{line:82,column:3}}],line:65},"4":{loc:{start:{line:66,column:27},end:{line:66,column:59}},type:"cond-expr",locations:[{start:{line:66,column:44},end:{line:66,column:51}},{start:{line:66,column:54},end:{line:66,column:59}}],line:66},"5":{loc:{start:{line:66,column:68},end:{line:66,column:110}},type:"cond-expr",locations:[{start:{line:66,column:98},end:{line:66,column:105}},{start:{line:66,column:108},end:{line:66,column:110}}],line:66},"6":{loc:{start:{line:67,column:18},end:{line:67,column:62}},type:"cond-expr",locations:[{start:{line:67,column:48},end:{line:67,column:57}},{start:{line:67,column:60},end:{line:67,column:62}}],line:67},"7":{loc:{start:{line:69,column:4},end:{line:71,column:5}},type:"if",locations:[{start:{line:69,column:4},end:{line:71,column:5}},{start:{line:69,column:4},end:{line:71,column:5}}],line:69},"8":{loc:{start:{line:69,column:8},end:{line:69,column:97}},type:"binary-expr",locations:[{start:{line:69,column:8},end:{line:69,column:26}},{start:{line:69,column:30},end:{line:69,column:55}},{start:{line:69,column:59},end:{line:69,column:97}}],line:69},"9":{loc:{start:{line:77,column:4},end:{line:79,column:5}},type:"if",locations:[{start:{line:77,column:4},end:{line:79,column:5}},{start:{line:77,column:4},end:{line:79,column:5}}],line:77},"10":{loc:{start:{line:128,column:26},end:{line:128,column:43}},type:"binary-expr",locations:[{start:{line:128,column:26},end:{line:128,column:32}},{start:{line:128,column:36},end:{line:128,column:43}}],line:128}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/util/Log.js"],names:["levels","isEnabled","level","indexOf","toUpperCase","cache","logLevel","gConsole","global","console","logger","method","messages","toLowerCase","bind","group","message","items","length","undefined","values","concat","Array","forEach","item","groupEnd","d","i","w","e","error","r","reason","Promise","reject"],mappings:"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",sourcesContent:["import cache from './cache';\n\n/**\n * List of possible log levels\n * @access private\n * @type {string[]}\n */\nconst levels = ['DEBUG', 'INFO', 'WARN', 'ERROR'];\n/**\n * Is log enabled for a specific level\n * @access private\n * @param {string} level The level to test\n * @returns {boolean}\n */\nconst isEnabled = level => (\n  levels.indexOf(level.toUpperCase()) >= levels.indexOf(cache.logLevel.toUpperCase())\n);\n/**\n * Global Console. (to avoid drop_console...)\n * @access private\n * @type {Console}\n */\nconst gConsole = global.console;\n/**\n * Shorthand for console call\n * @access private\n * @param {string} method A method of the console object\n * @param {string} level The log level\n * @param {*} messages the log content\n */\nconst logger = (method, level, ...messages) => (\n  isEnabled(level)\n    ? gConsole[method.toLowerCase()].bind(gConsole)(...messages)\n    : () => {}\n);\n/**\n * Use a group to log\n * @access private\n * @param {string} level The log level\n * @param {string} message The group title\n * @param {*} items the log content\n */\nconst group = (level, message, ...items) => {\n  if (items.length > 0) {\n    logger.bind(\n      undefined,\n      gConsole.group ? 'group' : level,\n      level\n    )(typeof message === 'string' ? message : '');\n\n    let values = (typeof message !== 'string' ? [message] : []).concat(items);\n    if (items.length === 1\n      && items[0] instanceof Array\n      && typeof items[0].length !== 'undefined') {\n      values = items[0]; // eslint-disable-line prefer-destructuring\n    }\n    values.forEach(item => logger.bind(undefined, level, level)(item));\n    if (gConsole.groupEnd) {\n      gConsole.groupEnd();\n    }\n  } else {\n    logger.bind(undefined, level, level, message);\n  }\n};\n\n/**\n * Log debug messages if log level is set to DEBUG.\n * @access protected\n * @see https://developer.mozilla.org/fr/docs/Web/API/Console/log\n */\nexport const d = group.bind(undefined, levels[0]);\n/**\n * Log information messages if log level is set to DEBUG or INFO.\n * @access protected\n * @see https://developer.mozilla.org/fr/docs/Web/API/Console/info\n */\nexport const i = group.bind(undefined, levels[1]);\n/**\n * Log warning messages if log level is set to DEBUG, INFO or WARN.\n * @access protected\n * @see https://developer.mozilla.org/fr/docs/Web/API/Console/warn\n */\nexport const w = group.bind(undefined, levels[2]);\n/**\n * Log error messages. Errors are always logged.\n * @access protected\n * @see https://developer.mozilla.org/fr/docs/Web/API/Console/error\n */\nexport const e = gConsole.error.bind(gConsole);\n/**\n * Promise rejection logger to use with catch\n * @access protected\n * @param {string} message\n * @returns {function}\n */\nexport const r = message => (reason) => {\n  d(message, reason);\n  return Promise.reject(reason || message);\n};\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_22y7k47z5v.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_22y7k47z5v.s[1]++;exports.r=exports.e=exports.w=exports.i=exports.d=void 0;var _cache=(cov_22y7k47z5v.s[2]++,_interopRequireDefault(__webpack_require__(/*! ./cache */ "./src/core/util/cache.js")));function _interopRequireDefault(obj){cov_22y7k47z5v.f[0]++;cov_22y7k47z5v.s[3]++;return(cov_22y7k47z5v.b[1][0]++,obj)&&(cov_22y7k47z5v.b[1][1]++,obj.__esModule)?(cov_22y7k47z5v.b[0][0]++,obj):(cov_22y7k47z5v.b[0][1]++,{default:obj});}var levels=(cov_22y7k47z5v.s[4]++,['DEBUG','INFO','WARN','ERROR']);cov_22y7k47z5v.s[5]++;var isEnabled=function isEnabled(level){cov_22y7k47z5v.f[1]++;cov_22y7k47z5v.s[6]++;return levels.indexOf(level.toUpperCase())>=levels.indexOf(_cache.default.logLevel.toUpperCase());};var gConsole=(cov_22y7k47z5v.s[7]++,global.console);cov_22y7k47z5v.s[8]++;var logger=function logger(method,level){cov_22y7k47z5v.f[2]++;cov_22y7k47z5v.s[9]++;for(var _len=arguments.length,messages=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){cov_22y7k47z5v.s[10]++;messages[_key-2]=arguments[_key];}cov_22y7k47z5v.s[11]++;return isEnabled(level)?(cov_22y7k47z5v.b[2][0]++,gConsole[method.toLowerCase()].bind(gConsole).apply(void 0,messages)):(cov_22y7k47z5v.b[2][1]++,function(){cov_22y7k47z5v.f[3]++;});};cov_22y7k47z5v.s[12]++;var group=function group(level,message){cov_22y7k47z5v.f[4]++;cov_22y7k47z5v.s[13]++;for(var _len2=arguments.length,items=new Array(_len2>2?_len2-2:0),_key2=2;_key2<_len2;_key2++){cov_22y7k47z5v.s[14]++;items[_key2-2]=arguments[_key2];}cov_22y7k47z5v.s[15]++;if(items.length>0){cov_22y7k47z5v.b[3][0]++;cov_22y7k47z5v.s[16]++;logger.bind(undefined,gConsole.group?(cov_22y7k47z5v.b[4][0]++,'group'):(cov_22y7k47z5v.b[4][1]++,level),level)(typeof message==='string'?(cov_22y7k47z5v.b[5][0]++,message):(cov_22y7k47z5v.b[5][1]++,''));var values=(cov_22y7k47z5v.s[17]++,(typeof message!=='string'?(cov_22y7k47z5v.b[6][0]++,[message]):(cov_22y7k47z5v.b[6][1]++,[])).concat(items));cov_22y7k47z5v.s[18]++;if((cov_22y7k47z5v.b[8][0]++,items.length===1)&&(cov_22y7k47z5v.b[8][1]++,items[0]instanceof Array)&&(cov_22y7k47z5v.b[8][2]++,typeof items[0].length!=='undefined')){cov_22y7k47z5v.b[7][0]++;cov_22y7k47z5v.s[19]++;values=items[0];}else{cov_22y7k47z5v.b[7][1]++;}cov_22y7k47z5v.s[20]++;values.forEach(function(item){cov_22y7k47z5v.f[5]++;cov_22y7k47z5v.s[21]++;return logger.bind(undefined,level,level)(item);});cov_22y7k47z5v.s[22]++;if(gConsole.groupEnd){cov_22y7k47z5v.b[9][0]++;cov_22y7k47z5v.s[23]++;gConsole.groupEnd();}else{cov_22y7k47z5v.b[9][1]++;}}else{cov_22y7k47z5v.b[3][1]++;cov_22y7k47z5v.s[24]++;logger.bind(undefined,level,level,message);}};var d=(cov_22y7k47z5v.s[25]++,group.bind(undefined,levels[0]));cov_22y7k47z5v.s[26]++;exports.d=d;var i=(cov_22y7k47z5v.s[27]++,group.bind(undefined,levels[1]));cov_22y7k47z5v.s[28]++;exports.i=i;var w=(cov_22y7k47z5v.s[29]++,group.bind(undefined,levels[2]));cov_22y7k47z5v.s[30]++;exports.w=w;var e=(cov_22y7k47z5v.s[31]++,gConsole.error.bind(gConsole));cov_22y7k47z5v.s[32]++;exports.e=e;cov_22y7k47z5v.s[33]++;var r=function r(message){cov_22y7k47z5v.f[6]++;cov_22y7k47z5v.s[34]++;return function(reason){cov_22y7k47z5v.f[7]++;cov_22y7k47z5v.s[35]++;d(message,reason);cov_22y7k47z5v.s[36]++;return Promise.reject((cov_22y7k47z5v.b[10][0]++,reason)||(cov_22y7k47z5v.b[10][1]++,message));};};cov_22y7k47z5v.s[37]++;exports.r=r;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./src/core/util/Media.js":
/*!********************************!*\
  !*** ./src/core/util/Media.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_2iup0ivnny=function(){var path="/home/florent/Projets/reach/src/core/util/Media.js",hash="732f57a04c5924b869800cdbbddd61c4f6eb3e4c",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/util/Media.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:10},end:{line:8,column:51}},"3":{start:{line:10,column:13},end:{line:10,column:59}},"4":{start:{line:12,column:39},end:{line:12,column:93}},"5":{start:{line:14,column:40},end:{line:14,column:470}},"6":{start:{line:14,column:69},end:{line:14,column:80}},"7":{start:{line:14,column:103},end:{line:14,column:105}},"8":{start:{line:14,column:107},end:{line:14,column:431}},"9":{start:{line:14,column:126},end:{line:14,column:429}},"10":{start:{line:14,column:149},end:{line:14,column:427}},"11":{start:{line:14,column:214},end:{line:14,column:319}},"12":{start:{line:14,column:321},end:{line:14,column:425}},"13":{start:{line:14,column:349},end:{line:14,column:390}},"14":{start:{line:14,column:400},end:{line:14,column:423}},"15":{start:{line:14,column:432},end:{line:14,column:453}},"16":{start:{line:14,column:454},end:{line:14,column:468}},"17":{start:{line:16,column:50},end:{line:16,column:151}},"18":{start:{line:16,column:92},end:{line:16,column:149}},"19":{start:{line:18,column:44},end:{line:18,column:315}},"20":{start:{line:18,column:102},end:{line:18,column:110}},"21":{start:{line:18,column:112},end:{line:18,column:167}},"22":{start:{line:18,column:168},end:{line:18,column:199}},"23":{start:{line:18,column:200},end:{line:18,column:254}},"24":{start:{line:18,column:227},end:{line:18,column:254}},"25":{start:{line:18,column:255},end:{line:18,column:313}},"26":{start:{line:20,column:62},end:{line:20,column:131}},"27":{start:{line:20,column:78},end:{line:20,column:131}},"28":{start:{line:20,column:132},end:{line:20,column:193}},"29":{start:{line:20,column:149},end:{line:20,column:193}},"30":{start:{line:20,column:194},end:{line:20,column:213}},"31":{start:{line:27,column:14},end:{line:62,column:1}},"32":{start:{line:70,column:20},end:{line:80,column:1}},"33":{start:{line:71,column:2},end:{line:77,column:3}},"34":{start:{line:72,column:4},end:{line:76,column:46}},"35":{start:{line:79,column:2},end:{line:79,column:20}},"36":{start:{line:88,column:0},end:{line:323,column:3}},"37":{start:{line:90,column:4},end:{line:90,column:33}},"38":{start:{line:93,column:2},end:{line:320,column:6}},"39":{start:{line:115,column:29},end:{line:115,column:101}},"40":{start:{line:116,column:29},end:{line:116,column:101}},"41":{start:{line:117,column:17},end:{line:117,column:92}},"42":{start:{line:118,column:26},end:{line:118,column:73}},"43":{start:{line:119,column:26},end:{line:119,column:73}},"44":{start:{line:120,column:18},end:{line:120,column:34}},"45":{start:{line:122,column:6},end:{line:147,column:7}},"46":{start:{line:123,column:8},end:{line:146,column:9}},"47":{start:{line:124,column:23},end:{line:124,column:62}},"48":{start:{line:126,column:30},end:{line:138,column:11}},"49":{start:{line:127,column:12},end:{line:131,column:13}},"50":{start:{line:128,column:22},end:{line:128,column:24}},"51":{start:{line:129,column:14},end:{line:129,column:36}},"52":{start:{line:130,column:14},end:{line:130,column:23}},"53":{start:{line:133,column:12},end:{line:137,column:14}},"54":{start:{line:140,column:10},end:{line:143,column:12}},"55":{start:{line:145,column:10},end:{line:145,column:91}},"56":{start:{line:149,column:6},end:{line:149,column:50}},"57":{start:{line:151,column:18},end:{line:151,column:64}},"58":{start:{line:153,column:6},end:{line:156,column:9}},"59":{start:{line:157,column:6},end:{line:160,column:8}},"60":{start:{line:174,column:19},end:{line:174,column:90}},"61":{start:{line:175,column:20},end:{line:175,column:22}},"62":{start:{line:177,column:6},end:{line:181,column:7}},"63":{start:{line:178,column:8},end:{line:178,column:26}},"64":{start:{line:179,column:13},end:{line:181,column:7}},"65":{start:{line:180,column:8},end:{line:180,column:26}},"66":{start:{line:183,column:6},end:{line:183,column:56}},"67":{start:{line:185,column:6},end:{line:274,column:7}},"68":{start:{line:186,column:20},end:{line:186,column:28}},"69":{start:{line:188,column:8},end:{line:200,column:9}},"70":{start:{line:189,column:10},end:{line:189,column:50}},"71":{start:{line:190,column:10},end:{line:190,column:32}},"72":{start:{line:192,column:10},end:{line:197,column:11}},"73":{start:{line:193,column:12},end:{line:193,column:52}},"74":{start:{line:195,column:12},end:{line:195,column:46}},"75":{start:{line:199,column:10},end:{line:199,column:43}},"76":{start:{line:202,column:8},end:{line:208,column:9}},"77":{start:{line:203,column:10},end:{line:207,column:11}},"78":{start:{line:204,column:12},end:{line:204,column:52}},"79":{start:{line:205,column:17},end:{line:207,column:11}},"80":{start:{line:206,column:12},end:{line:206,column:41}},"81":{start:{line:210,column:8},end:{line:210,column:38}},"82":{start:{line:272,column:8},end:{line:272,column:30}},"83":{start:{line:273,column:8},end:{line:273,column:21}},"84":{start:{line:276,column:6},end:{line:276,column:22}},"85":{start:{line:294,column:6},end:{line:305,column:39}},"86":{start:{line:295,column:16},end:{line:295,column:18}},"87":{start:{line:296,column:8},end:{line:302,column:11}},"88":{start:{line:297,column:10},end:{line:299,column:11}},"89":{start:{line:298,column:12},end:{line:298,column:32}},"90":{start:{line:301,column:10},end:{line:301,column:38}},"91":{start:{line:303,column:8},end:{line:303,column:34}},"92":{start:{line:304,column:8},end:{line:304,column:17}},"93":{start:{line:315,column:6},end:{line:318,column:8}},"94":{start:{line:322,column:2},end:{line:322,column:15}},"95":{start:{line:325,column:0},end:{line:325,column:24}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:12,column:9},end:{line:12,column:31}},loc:{start:{line:12,column:37},end:{line:12,column:95}},line:12},"1":{name:"_interopRequireWildcard",decl:{start:{line:14,column:9},end:{line:14,column:32}},loc:{start:{line:14,column:38},end:{line:14,column:472}},line:14},"2":{name:"_classCallCheck",decl:{start:{line:16,column:9},end:{line:16,column:24}},loc:{start:{line:16,column:48},end:{line:16,column:153}},line:16},"3":{name:"_defineProperties",decl:{start:{line:18,column:9},end:{line:18,column:26}},loc:{start:{line:18,column:42},end:{line:18,column:317}},line:18},"4":{name:"_createClass",decl:{start:{line:20,column:9},end:{line:20,column:21}},loc:{start:{line:20,column:60},end:{line:20,column:215}},line:20},"5":{name:"_assignDevice",decl:{start:{line:70,column:29},end:{line:70,column:42}},loc:{start:{line:70,column:65},end:{line:80,column:1}},line:70},"6":{name:"(anonymous_6)",decl:{start:{line:88,column:0},end:{line:88,column:1}},loc:{start:{line:88,column:12},end:{line:323,column:1}},line:88},"7":{name:"Media",decl:{start:{line:89,column:11},end:{line:89,column:16}},loc:{start:{line:89,column:19},end:{line:91,column:3}},line:89},"8":{name:"constraints",decl:{start:{line:114,column:20},end:{line:114,column:31}},loc:{start:{line:114,column:34},end:{line:161,column:5}},line:114},"9":{name:"dimConstraint",decl:{start:{line:126,column:39},end:{line:126,column:52}},loc:{start:{line:126,column:58},end:{line:138,column:11}},line:126},"10":{name:"attachStream",decl:{start:{line:173,column:20},end:{line:173,column:32}},loc:{start:{line:173,column:67},end:{line:277,column:5}},line:173},"11":{name:"devices",decl:{start:{line:293,column:20},end:{line:293,column:27}},loc:{start:{line:293,column:30},end:{line:306,column:5}},line:293},"12":{name:"(anonymous_12)",decl:{start:{line:294,column:60},end:{line:294,column:61}},loc:{start:{line:294,column:79},end:{line:305,column:7}},line:294},"13":{name:"(anonymous_13)",decl:{start:{line:296,column:24},end:{line:296,column:25}},loc:{start:{line:296,column:42},end:{line:302,column:9}},line:296},"14":{name:"get",decl:{start:{line:314,column:18},end:{line:314,column:21}},loc:{start:{line:314,column:24},end:{line:319,column:5}},line:314}},branchMap:{"0":{loc:{start:{line:12,column:46},end:{line:12,column:92}},type:"cond-expr",locations:[{start:{line:12,column:70},end:{line:12,column:73}},{start:{line:12,column:76},end:{line:12,column:92}}],line:12},"1":{loc:{start:{line:12,column:46},end:{line:12,column:67}},type:"binary-expr",locations:[{start:{line:12,column:46},end:{line:12,column:49}},{start:{line:12,column:53},end:{line:12,column:67}}],line:12},"2":{loc:{start:{line:14,column:40},end:{line:14,column:470}},type:"if",locations:[{start:{line:14,column:40},end:{line:14,column:470}},{start:{line:14,column:40},end:{line:14,column:470}}],line:14},"3":{loc:{start:{line:14,column:44},end:{line:14,column:65}},type:"binary-expr",locations:[{start:{line:14,column:44},end:{line:14,column:47}},{start:{line:14,column:51},end:{line:14,column:65}}],line:14},"4":{loc:{start:{line:14,column:107},end:{line:14,column:431}},type:"if",locations:[{start:{line:14,column:107},end:{line:14,column:431}},{start:{line:14,column:107},end:{line:14,column:431}}],line:14},"5":{loc:{start:{line:14,column:149},end:{line:14,column:427}},type:"if",locations:[{start:{line:14,column:149},end:{line:14,column:427}},{start:{line:14,column:149},end:{line:14,column:427}}],line:14},"6":{loc:{start:{line:14,column:214},end:{line:14,column:319}},type:"cond-expr",locations:[{start:{line:14,column:273},end:{line:14,column:314}},{start:{line:14,column:317},end:{line:14,column:319}}],line:14},"7":{loc:{start:{line:14,column:214},end:{line:14,column:270}},type:"binary-expr",locations:[{start:{line:14,column:214},end:{line:14,column:235}},{start:{line:14,column:239},end:{line:14,column:270}}],line:14},"8":{loc:{start:{line:14,column:321},end:{line:14,column:425}},type:"if",locations:[{start:{line:14,column:321},end:{line:14,column:425}},{start:{line:14,column:321},end:{line:14,column:425}}],line:14},"9":{loc:{start:{line:14,column:325},end:{line:14,column:345}},type:"binary-expr",locations:[{start:{line:14,column:325},end:{line:14,column:333}},{start:{line:14,column:337},end:{line:14,column:345}}],line:14},"10":{loc:{start:{line:16,column:50},end:{line:16,column:151}},type:"if",locations:[{start:{line:16,column:50},end:{line:16,column:151}},{start:{line:16,column:50},end:{line:16,column:151}}],line:16},"11":{loc:{start:{line:18,column:136},end:{line:18,column:166}},type:"binary-expr",locations:[{start:{line:18,column:136},end:{line:18,column:157}},{start:{line:18,column:161},end:{line:18,column:166}}],line:18},"12":{loc:{start:{line:18,column:200},end:{line:18,column:254}},type:"if",locations:[{start:{line:18,column:200},end:{line:18,column:254}},{start:{line:18,column:200},end:{line:18,column:254}}],line:18},"13":{loc:{start:{line:20,column:62},end:{line:20,column:131}},type:"if",locations:[{start:{line:20,column:62},end:{line:20,column:131}},{start:{line:20,column:62},end:{line:20,column:131}}],line:20},"14":{loc:{start:{line:20,column:132},end:{line:20,column:193}},type:"if",locations:[{start:{line:20,column:132},end:{line:20,column:193}},{start:{line:20,column:132},end:{line:20,column:193}}],line:20},"15":{loc:{start:{line:71,column:2},end:{line:77,column:3}},type:"if",locations:[{start:{line:71,column:2},end:{line:77,column:3}},{start:{line:71,column:2},end:{line:77,column:3}}],line:71},"16":{loc:{start:{line:71,column:6},end:{line:71,column:28}},type:"binary-expr",locations:[{start:{line:71,column:6},end:{line:71,column:16}},{start:{line:71,column:20},end:{line:71,column:28}}],line:71},"17":{loc:{start:{line:72,column:25},end:{line:76,column:5}},type:"cond-expr",locations:[{start:{line:72,column:70},end:{line:74,column:5}},{start:{line:74,column:8},end:{line:76,column:5}}],line:72},"18":{loc:{start:{line:76,column:7},end:{line:76,column:44}},type:"cond-expr",locations:[{start:{line:76,column:29},end:{line:76,column:31}},{start:{line:76,column:34},end:{line:76,column:44}}],line:76},"19":{loc:{start:{line:115,column:29},end:{line:115,column:101}},type:"cond-expr",locations:[{start:{line:115,column:82},end:{line:115,column:94}},{start:{line:115,column:97},end:{line:115,column:101}}],line:115},"20":{loc:{start:{line:115,column:29},end:{line:115,column:79}},type:"binary-expr",locations:[{start:{line:115,column:29},end:{line:115,column:49}},{start:{line:115,column:53},end:{line:115,column:79}}],line:115},"21":{loc:{start:{line:116,column:29},end:{line:116,column:101}},type:"cond-expr",locations:[{start:{line:116,column:82},end:{line:116,column:94}},{start:{line:116,column:97},end:{line:116,column:101}}],line:116},"22":{loc:{start:{line:116,column:29},end:{line:116,column:79}},type:"binary-expr",locations:[{start:{line:116,column:29},end:{line:116,column:49}},{start:{line:116,column:53},end:{line:116,column:79}}],line:116},"23":{loc:{start:{line:117,column:17},end:{line:117,column:92}},type:"cond-expr",locations:[{start:{line:117,column:70},end:{line:117,column:82}},{start:{line:117,column:85},end:{line:117,column:92}}],line:117},"24":{loc:{start:{line:117,column:17},end:{line:117,column:67}},type:"binary-expr",locations:[{start:{line:117,column:17},end:{line:117,column:37}},{start:{line:117,column:41},end:{line:117,column:67}}],line:117},"25":{loc:{start:{line:118,column:26},end:{line:118,column:73}},type:"cond-expr",locations:[{start:{line:118,column:49},end:{line:118,column:61}},{start:{line:118,column:64},end:{line:118,column:73}}],line:118},"26":{loc:{start:{line:119,column:26},end:{line:119,column:73}},type:"cond-expr",locations:[{start:{line:119,column:49},end:{line:119,column:61}},{start:{line:119,column:64},end:{line:119,column:73}}],line:119},"27":{loc:{start:{line:122,column:6},end:{line:147,column:7}},type:"if",locations:[{start:{line:122,column:6},end:{line:147,column:7}},{start:{line:122,column:6},end:{line:147,column:7}}],line:122},"28":{loc:{start:{line:123,column:8},end:{line:146,column:9}},type:"if",locations:[{start:{line:123,column:8},end:{line:146,column:9}},{start:{line:123,column:8},end:{line:146,column:9}}],line:123},"29":{loc:{start:{line:127,column:12},end:{line:131,column:13}},type:"if",locations:[{start:{line:127,column:12},end:{line:131,column:13}},{start:{line:127,column:12},end:{line:131,column:13}}],line:127},"30":{loc:{start:{line:134,column:19},end:{line:134,column:70}},type:"cond-expr",locations:[{start:{line:134,column:32},end:{line:134,column:56}},{start:{line:134,column:59},end:{line:134,column:70}}],line:134},"31":{loc:{start:{line:136,column:19},end:{line:136,column:70}},type:"cond-expr",locations:[{start:{line:136,column:32},end:{line:136,column:56}},{start:{line:136,column:59},end:{line:136,column:70}}],line:136},"32":{loc:{start:{line:174,column:19},end:{line:174,column:90}},type:"cond-expr",locations:[{start:{line:174,column:72},end:{line:174,column:84}},{start:{line:174,column:87},end:{line:174,column:90}}],line:174},"33":{loc:{start:{line:174,column:19},end:{line:174,column:69}},type:"binary-expr",locations:[{start:{line:174,column:19},end:{line:174,column:39}},{start:{line:174,column:43},end:{line:174,column:69}}],line:174},"34":{loc:{start:{line:177,column:6},end:{line:181,column:7}},type:"if",locations:[{start:{line:177,column:6},end:{line:181,column:7}},{start:{line:177,column:6},end:{line:181,column:7}}],line:177},"35":{loc:{start:{line:179,column:13},end:{line:181,column:7}},type:"if",locations:[{start:{line:179,column:13},end:{line:181,column:7}},{start:{line:179,column:13},end:{line:181,column:7}}],line:179},"36":{loc:{start:{line:185,column:6},end:{line:274,column:7}},type:"if",locations:[{start:{line:185,column:6},end:{line:274,column:7}},{start:{line:185,column:6},end:{line:274,column:7}}],line:185},"37":{loc:{start:{line:188,column:8},end:{line:200,column:9}},type:"if",locations:[{start:{line:188,column:8},end:{line:200,column:9}},{start:{line:188,column:8},end:{line:200,column:9}}],line:188},"38":{loc:{start:{line:188,column:12},end:{line:188,column:61}},type:"binary-expr",locations:[{start:{line:188,column:12},end:{line:188,column:18}},{start:{line:188,column:22},end:{line:188,column:61}}],line:188},"39":{loc:{start:{line:192,column:10},end:{line:197,column:11}},type:"if",locations:[{start:{line:192,column:10},end:{line:197,column:11}},{start:{line:192,column:10},end:{line:197,column:11}}],line:192},"40":{loc:{start:{line:202,column:8},end:{line:208,column:9}},type:"if",locations:[{start:{line:202,column:8},end:{line:208,column:9}},{start:{line:202,column:8},end:{line:208,column:9}}],line:202},"41":{loc:{start:{line:203,column:10},end:{line:207,column:11}},type:"if",locations:[{start:{line:203,column:10},end:{line:207,column:11}},{start:{line:203,column:10},end:{line:207,column:11}}],line:203},"42":{loc:{start:{line:203,column:14},end:{line:203,column:44}},type:"binary-expr",locations:[{start:{line:203,column:14},end:{line:203,column:22}},{start:{line:203,column:26},end:{line:203,column:44}}],line:203},"43":{loc:{start:{line:205,column:17},end:{line:207,column:11}},type:"if",locations:[{start:{line:205,column:17},end:{line:207,column:11}},{start:{line:205,column:17},end:{line:207,column:11}}],line:205},"44":{loc:{start:{line:297,column:10},end:{line:299,column:11}},type:"if",locations:[{start:{line:297,column:10},end:{line:299,column:11}},{start:{line:297,column:10},end:{line:299,column:11}}],line:297}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/util/Media.js"],names:["presets","UHD","w","h","min","FHD","max","HD","SVGA","SD","VGA","_assignDevice","constraint","deviceId","Object","assign","test","facingMode","Media","videoConstraints","audioConstraints","type","videoDeviceId","audioDeviceId","video","toUpperCase","preset","dimConstraint","dim","r","ideal","width","height","Error","audio","Log","d","mediaStream","container","previous","volume","tagName","getVideoTracks","length","getAudioTracks","_node","toLowerCase","document","createElement","autoplay","Reach","browser","setAttribute","style","borderRadius","replaceChild","appendChild","srcObject","navigator","mediaDevices","enumerateDevices","then","devices","forEach","device","kind","push","catch","USER","ENVIRONMENT"],mappings:"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",sourcesContent:["/* eslint max-params: [2, 5], max-len: [0, 120] */\nimport * as Log from './Log';\nimport Reach from '../../Reach';\n\n/**\n * Video resolution presets\n * @access private\n * @type {{UHD: {w: number, h: number, min: string}, FHD: {w: number, h: number, min: string, max: string}, HD: {w: number, h: number, min: string, max: string}, SVGA: {w: number, h: number, min: string, max: string}, SD: {w: number, h: number, min: string, max: string}, VGA: {w: number, h: number, max: string}}}\n */\nconst presets = {\n  UHD: { w: 3840, h: 2160, min: 'HD' },\n  FHD: {\n    w: 1920, h: 1080, min: 'HD', max: 'UHD'\n  },\n  HD: {\n    w: 1280, h: 720, min: 'SD', max: 'FHD'\n  },\n  SVGA: {\n    w: 800, h: 600, min: 'VGA', max: 'HD'\n  },\n  SD: {\n    w: 720, h: 576, min: 'VGA', max: 'HD'\n  },\n  VGA: { w: 640, h: 480, max: 'SVGA' }\n};\n\n/**\n * Assign deviceId to constraint\n * @param constraint\n * @param deviceId\n * @returns {*}\n */\nconst _assignDevice = (constraint, deviceId) => {\n  if (constraint && deviceId) {\n    return Object.assign(\n      /^((user)|(environment))$/i.test(deviceId) ? { facingMode: deviceId } : { deviceId },\n      constraint === true ? {} : constraint\n    );\n  }\n  return constraint;\n};\n\n/**\n * Helpers for MediaDevices and MediaStreamConstraints.\n */\nexport default class Media {\n  /**\n   * facingMode values to use with constraints\n   * @returns {{USER: string, ENVIRONMENT: string}}\n   */\n  static get facingMode() {\n    return {\n      USER: 'user',\n      ENVIRONMENT: 'environment'\n    };\n  }\n\n  /**\n   * Helpers to create a MediaStreamConstraints configuration object\n   * @param {boolean|MediaTrackConstraints|string} [videoConstraints='HD'] a boolean, a video constraints object or a preset id (UHD, FHD, HD, SVGA, SD, VGA)\n   * @param {boolean|MediaTrackConstraints} [audioConstraints=true] a boolean or an audio constraints object\n   * @param {string} [type=ideal] type of constraints for video when using a preset (exact,min,max or ideal)\n   * @param {string|object} [videoDeviceId] video input device id or facingMode\n   * @param {string|object} [audioDeviceId] audio input device id\n   * @returns {object}\n   * @throws {Error}\n   *\n   * @example <caption>HD AudioVideo with default devices</caption>\n   * let myConstraints = Reach.media.constraints();\n   * console.log(myConstraints);\n   *\n   * @example <caption>Full HD Video without audio using default devices</caption>\n   * let myConstraints = Reach.media.constraints('FHD', false, 'exact');\n   * console.log(myConstraints);\n   */\n  static constraints(videoConstraints = 'HD', audioConstraints = true, type = 'ideal', videoDeviceId, audioDeviceId) {\n    let video = videoConstraints;\n    if (typeof videoConstraints === 'string') {\n      if (presets[videoConstraints.toUpperCase()]) {\n        const\n          preset = presets[videoConstraints.toUpperCase()];\n\n\n        const dimConstraint = (dim) => {\n          if (/^(min|max|exact)$/.test(type)) {\n            const r = {};\n            r[type] = preset[dim];\n            return r;\n          }\n          return {\n            min: preset.min ? presets[preset.min][dim] : preset[dim],\n            ideal: preset[dim],\n            max: preset.max ? presets[preset.max][dim] : preset[dim]\n          };\n        };\n        video = { width: dimConstraint('w'), height: dimConstraint('h') };\n      } else {\n        throw new Error('Unknown Video Resolution preset (UHD, FHD, HD, SVGA, SD, VGA)');\n      }\n    }\n    video = _assignDevice(video, videoDeviceId);\n\n    const audio = _assignDevice(audioConstraints, audioDeviceId);\n\n    Log.d('Media#constraints', { video, audio });\n    return { video, audio };\n  }\n\n  /**\n   * Init stream display node depending on stream type\n   * @param {MediaStream} mediaStream The MediaStream to display\n   * @param {Element} container Container node for streams\n   * @param {Element} previous Previous node for the stream\n   * @param {number} [volume=.7] the default volume\n   * @return {Element}\n   */\n  static attachStream(mediaStream, container, previous, volume = 0.7) {\n    let tagName = '';\n    if (mediaStream.getVideoTracks().length > 0) {\n      tagName = 'video';\n    } else if (mediaStream.getAudioTracks().length > 0) {\n      tagName = 'audio';\n    }\n    Log.d('Media#attachStream', mediaStream, tagName);\n    if (tagName.length > 0) {\n      let _node = previous;\n      if (!_node || _node.tagName.toLowerCase() !== tagName) {\n        _node = document.createElement(tagName);\n        _node.autoplay = true;\n        // set these attributes in order to launch the video on IOS\n        if (Reach.browser.browser === 'safari') {\n          _node.setAttribute('playsinline', true);\n          _node.setAttribute('muted', true);\n        } else {\n          // _node.setAttribute('type','video/mp4');\n        }\n        _node.style.borderRadius = '1px';\n      }\n      if (container) {\n        if (previous && previous !== _node) {\n          container.replaceChild(_node, previous);\n        } else if (!previous) {\n          container.appendChild(_node);\n        }\n      }\n      _node.srcObject = mediaStream;\n      /* _node.addEventListener('play', (event) => {\n        Log.d(`video.onplay = ${event.type}`);\n        _node.srcObject.onaddtrack = (track) => {\n          Log.d(`[Local] listener: video.onaddtrack = ${track.label}`); // eslint-disable-line\n        };\n        _node.srcObject.onremovetrack = (track) => {\n          Log.d(`[Local] listener: video.onremovetrack = ${track.label}`); // eslint-disable-line\n        };\n        _node.srcObject.oninactive = () => {\n          Log.d(`[Local] listener: video.oninactive`); // eslint-disable-line\n        };\n        _node.srcObject.onplaying = (event) => {\n          console.debug(`[Local] listener: video.onplaying = ${event.type}`); // eslint-disable-line\n        };\n        _node.srcObject.onstalled = (event) => {\n          console.debug(`[Local] listener: video.onstalled = ${event.type}`); // eslint-disable-line\n        };\n        _node.srcObject.onsuspend = (event) => {\n          console.debug(`[Local] listener: video.onsuspend = ${event.type}`); // eslint-disable-line\n          console.debug(event); // eslint-disable-line\n          console.debug('on passe l\xE0');\n        };\n      }); */\n      /* _node.onsuspend = (event) => {\n        console.debug(`[Local] listener: video.onsuspend = ${event}`); // eslint-disable-line\n        console.debug(event); // eslint-disable-line\n        /!* console.debug('on est ici');\n                const tagmuted = _node.muted;\n                _node.setAttribute('muted',true);\n                let autoPlayAllowed = true;\n                const promise = _node.play();\n                if (promise instanceof Promise) {\n                    promise.then(function(status) {\n                        console.dir(promise);\n                    });\n                    promise.catch(function(error) {\n                        console.error(error.message);\n                        if (error.name === 'NotAllowedError') {\n                            autoPlayAllowed = false;\n                        } else {\n                            // Don't throw the error so that we get to the then\n                            // or throw it but set the autoPlayAllowed to true in here\n                        }\n                    }).then(function() {\n                        if (autoPlayAllowed) {\n                            console.log('autoplay allowed')\n                        } else {\n                            console.log('autoplay NOT allowed')\n                        }\n                    });\n                } else {\n                    console.log('autoplay unknown')\n                } *!/\n      }; */\n      // _node.addEventListener('loadeddata', () => Log.d('on a charg\xE9 les donn\xE9es'));\n      // _node.addEventListener('error', error => Log.d(`on a une erreur ${error}`));\n      // _node.setAttribute('controls',true);\n      // disabled doesn't seem to be needed\n      // _node.disabled = false;\n      _node.volume = volume;\n      return _node;\n    }\n    return previous;\n  }\n\n  /**\n   * List available input devices\n   * @return {Promise<{audioinput: MediaDeviceInfo[], videoinput: MediaDeviceInfo[]}>}\n   *\n   * @example\n   * Reach.media.devices().then(devices => {\n   *  // Video cameras\n   *  console.log(devices.videoinput);\n   *  // Audio mics\n   *  console.log(devices.audioinput);\n   * });\n   */\n  static devices() {\n    return navigator.mediaDevices.enumerateDevices()\n      .then((devices) => {\n        const r = {};\n        devices.forEach((device) => {\n          if (!r[device.kind]) {\n            r[device.kind] = [];\n          }\n          r[device.kind].push(device);\n        });\n        Log.d('Media#devices', r);\n        return r;\n      })\n      .catch(Log.r('Media#devices'));\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_2iup0ivnny.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2iup0ivnny.s[1]++;exports.default=void 0;var Log=(cov_2iup0ivnny.s[2]++,_interopRequireWildcard(__webpack_require__(/*! ./Log */ "./src/core/util/Log.js")));var _Reach=(cov_2iup0ivnny.s[3]++,_interopRequireDefault(__webpack_require__(/*! ../../Reach */ "./src/Reach.js")));function _interopRequireDefault(obj){cov_2iup0ivnny.f[0]++;cov_2iup0ivnny.s[4]++;return(cov_2iup0ivnny.b[1][0]++,obj)&&(cov_2iup0ivnny.b[1][1]++,obj.__esModule)?(cov_2iup0ivnny.b[0][0]++,obj):(cov_2iup0ivnny.b[0][1]++,{default:obj});}function _interopRequireWildcard(obj){cov_2iup0ivnny.f[1]++;cov_2iup0ivnny.s[5]++;if((cov_2iup0ivnny.b[3][0]++,obj)&&(cov_2iup0ivnny.b[3][1]++,obj.__esModule)){cov_2iup0ivnny.b[2][0]++;cov_2iup0ivnny.s[6]++;return obj;}else{cov_2iup0ivnny.b[2][1]++;var newObj=(cov_2iup0ivnny.s[7]++,{});cov_2iup0ivnny.s[8]++;if(obj!=null){cov_2iup0ivnny.b[4][0]++;cov_2iup0ivnny.s[9]++;for(var key in obj){cov_2iup0ivnny.s[10]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_2iup0ivnny.b[5][0]++;var desc=(cov_2iup0ivnny.s[11]++,(cov_2iup0ivnny.b[7][0]++,Object.defineProperty)&&(cov_2iup0ivnny.b[7][1]++,Object.getOwnPropertyDescriptor)?(cov_2iup0ivnny.b[6][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_2iup0ivnny.b[6][1]++,{}));cov_2iup0ivnny.s[12]++;if((cov_2iup0ivnny.b[9][0]++,desc.get)||(cov_2iup0ivnny.b[9][1]++,desc.set)){cov_2iup0ivnny.b[8][0]++;cov_2iup0ivnny.s[13]++;Object.defineProperty(newObj,key,desc);}else{cov_2iup0ivnny.b[8][1]++;cov_2iup0ivnny.s[14]++;newObj[key]=obj[key];}}else{cov_2iup0ivnny.b[5][1]++;}}}else{cov_2iup0ivnny.b[4][1]++;}cov_2iup0ivnny.s[15]++;newObj.default=obj;cov_2iup0ivnny.s[16]++;return newObj;}}function _classCallCheck(instance,Constructor){cov_2iup0ivnny.f[2]++;cov_2iup0ivnny.s[17]++;if(!(instance instanceof Constructor)){cov_2iup0ivnny.b[10][0]++;cov_2iup0ivnny.s[18]++;throw new TypeError("Cannot call a class as a function");}else{cov_2iup0ivnny.b[10][1]++;}}function _defineProperties(target,props){cov_2iup0ivnny.f[3]++;cov_2iup0ivnny.s[19]++;for(var i=0;i<props.length;i++){var descriptor=(cov_2iup0ivnny.s[20]++,props[i]);cov_2iup0ivnny.s[21]++;descriptor.enumerable=(cov_2iup0ivnny.b[11][0]++,descriptor.enumerable)||(cov_2iup0ivnny.b[11][1]++,false);cov_2iup0ivnny.s[22]++;descriptor.configurable=true;cov_2iup0ivnny.s[23]++;if("value"in descriptor){cov_2iup0ivnny.b[12][0]++;cov_2iup0ivnny.s[24]++;descriptor.writable=true;}else{cov_2iup0ivnny.b[12][1]++;}cov_2iup0ivnny.s[25]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_2iup0ivnny.f[4]++;cov_2iup0ivnny.s[26]++;if(protoProps){cov_2iup0ivnny.b[13][0]++;cov_2iup0ivnny.s[27]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_2iup0ivnny.b[13][1]++;}cov_2iup0ivnny.s[28]++;if(staticProps){cov_2iup0ivnny.b[14][0]++;cov_2iup0ivnny.s[29]++;_defineProperties(Constructor,staticProps);}else{cov_2iup0ivnny.b[14][1]++;}cov_2iup0ivnny.s[30]++;return Constructor;}var presets=(cov_2iup0ivnny.s[31]++,{UHD:{w:3840,h:2160,min:'HD'},FHD:{w:1920,h:1080,min:'HD',max:'UHD'},HD:{w:1280,h:720,min:'SD',max:'FHD'},SVGA:{w:800,h:600,min:'VGA',max:'HD'},SD:{w:720,h:576,min:'VGA',max:'HD'},VGA:{w:640,h:480,max:'SVGA'}});cov_2iup0ivnny.s[32]++;var _assignDevice=function _assignDevice(constraint,deviceId){cov_2iup0ivnny.f[5]++;cov_2iup0ivnny.s[33]++;if((cov_2iup0ivnny.b[16][0]++,constraint)&&(cov_2iup0ivnny.b[16][1]++,deviceId)){cov_2iup0ivnny.b[15][0]++;cov_2iup0ivnny.s[34]++;return Object.assign(/^((user)|(environment))$/i.test(deviceId)?(cov_2iup0ivnny.b[17][0]++,{facingMode:deviceId}):(cov_2iup0ivnny.b[17][1]++,{deviceId:deviceId}),constraint===true?(cov_2iup0ivnny.b[18][0]++,{}):(cov_2iup0ivnny.b[18][1]++,constraint));}else{cov_2iup0ivnny.b[15][1]++;}cov_2iup0ivnny.s[35]++;return constraint;};var Media=(cov_2iup0ivnny.s[36]++,function(){cov_2iup0ivnny.f[6]++;function Media(){cov_2iup0ivnny.f[7]++;cov_2iup0ivnny.s[37]++;_classCallCheck(this,Media);}cov_2iup0ivnny.s[38]++;_createClass(Media,null,[{key:"constraints",value:function constraints(){cov_2iup0ivnny.f[8]++;var videoConstraints=(cov_2iup0ivnny.s[39]++,(cov_2iup0ivnny.b[20][0]++,arguments.length>0)&&(cov_2iup0ivnny.b[20][1]++,arguments[0]!==undefined)?(cov_2iup0ivnny.b[19][0]++,arguments[0]):(cov_2iup0ivnny.b[19][1]++,'HD'));var audioConstraints=(cov_2iup0ivnny.s[40]++,(cov_2iup0ivnny.b[22][0]++,arguments.length>1)&&(cov_2iup0ivnny.b[22][1]++,arguments[1]!==undefined)?(cov_2iup0ivnny.b[21][0]++,arguments[1]):(cov_2iup0ivnny.b[21][1]++,true));var type=(cov_2iup0ivnny.s[41]++,(cov_2iup0ivnny.b[24][0]++,arguments.length>2)&&(cov_2iup0ivnny.b[24][1]++,arguments[2]!==undefined)?(cov_2iup0ivnny.b[23][0]++,arguments[2]):(cov_2iup0ivnny.b[23][1]++,'ideal'));var videoDeviceId=(cov_2iup0ivnny.s[42]++,arguments.length>3?(cov_2iup0ivnny.b[25][0]++,arguments[3]):(cov_2iup0ivnny.b[25][1]++,undefined));var audioDeviceId=(cov_2iup0ivnny.s[43]++,arguments.length>4?(cov_2iup0ivnny.b[26][0]++,arguments[4]):(cov_2iup0ivnny.b[26][1]++,undefined));var video=(cov_2iup0ivnny.s[44]++,videoConstraints);cov_2iup0ivnny.s[45]++;if(typeof videoConstraints==='string'){cov_2iup0ivnny.b[27][0]++;cov_2iup0ivnny.s[46]++;if(presets[videoConstraints.toUpperCase()]){cov_2iup0ivnny.b[28][0]++;var preset=(cov_2iup0ivnny.s[47]++,presets[videoConstraints.toUpperCase()]);cov_2iup0ivnny.s[48]++;var dimConstraint=function dimConstraint(dim){cov_2iup0ivnny.f[9]++;cov_2iup0ivnny.s[49]++;if(/^(min|max|exact)$/.test(type)){cov_2iup0ivnny.b[29][0]++;var r=(cov_2iup0ivnny.s[50]++,{});cov_2iup0ivnny.s[51]++;r[type]=preset[dim];cov_2iup0ivnny.s[52]++;return r;}else{cov_2iup0ivnny.b[29][1]++;}cov_2iup0ivnny.s[53]++;return{min:preset.min?(cov_2iup0ivnny.b[30][0]++,presets[preset.min][dim]):(cov_2iup0ivnny.b[30][1]++,preset[dim]),ideal:preset[dim],max:preset.max?(cov_2iup0ivnny.b[31][0]++,presets[preset.max][dim]):(cov_2iup0ivnny.b[31][1]++,preset[dim])};};cov_2iup0ivnny.s[54]++;video={width:dimConstraint('w'),height:dimConstraint('h')};}else{cov_2iup0ivnny.b[28][1]++;cov_2iup0ivnny.s[55]++;throw new Error('Unknown Video Resolution preset (UHD, FHD, HD, SVGA, SD, VGA)');}}else{cov_2iup0ivnny.b[27][1]++;}cov_2iup0ivnny.s[56]++;video=_assignDevice(video,videoDeviceId);var audio=(cov_2iup0ivnny.s[57]++,_assignDevice(audioConstraints,audioDeviceId));cov_2iup0ivnny.s[58]++;Log.d('Media#constraints',{video:video,audio:audio});cov_2iup0ivnny.s[59]++;return{video:video,audio:audio};}},{key:"attachStream",value:function attachStream(mediaStream,container,previous){cov_2iup0ivnny.f[10]++;var volume=(cov_2iup0ivnny.s[60]++,(cov_2iup0ivnny.b[33][0]++,arguments.length>3)&&(cov_2iup0ivnny.b[33][1]++,arguments[3]!==undefined)?(cov_2iup0ivnny.b[32][0]++,arguments[3]):(cov_2iup0ivnny.b[32][1]++,0.7));var tagName=(cov_2iup0ivnny.s[61]++,'');cov_2iup0ivnny.s[62]++;if(mediaStream.getVideoTracks().length>0){cov_2iup0ivnny.b[34][0]++;cov_2iup0ivnny.s[63]++;tagName='video';}else{cov_2iup0ivnny.b[34][1]++;cov_2iup0ivnny.s[64]++;if(mediaStream.getAudioTracks().length>0){cov_2iup0ivnny.b[35][0]++;cov_2iup0ivnny.s[65]++;tagName='audio';}else{cov_2iup0ivnny.b[35][1]++;}}cov_2iup0ivnny.s[66]++;Log.d('Media#attachStream',mediaStream,tagName);cov_2iup0ivnny.s[67]++;if(tagName.length>0){cov_2iup0ivnny.b[36][0]++;var _node=(cov_2iup0ivnny.s[68]++,previous);cov_2iup0ivnny.s[69]++;if((cov_2iup0ivnny.b[38][0]++,!_node)||(cov_2iup0ivnny.b[38][1]++,_node.tagName.toLowerCase()!==tagName)){cov_2iup0ivnny.b[37][0]++;cov_2iup0ivnny.s[70]++;_node=document.createElement(tagName);cov_2iup0ivnny.s[71]++;_node.autoplay=true;cov_2iup0ivnny.s[72]++;if(_Reach.default.browser.browser==='safari'){cov_2iup0ivnny.b[39][0]++;cov_2iup0ivnny.s[73]++;_node.setAttribute('playsinline',true);cov_2iup0ivnny.s[74]++;_node.setAttribute('muted',true);}else{cov_2iup0ivnny.b[39][1]++;}cov_2iup0ivnny.s[75]++;_node.style.borderRadius='1px';}else{cov_2iup0ivnny.b[37][1]++;}cov_2iup0ivnny.s[76]++;if(container){cov_2iup0ivnny.b[40][0]++;cov_2iup0ivnny.s[77]++;if((cov_2iup0ivnny.b[42][0]++,previous)&&(cov_2iup0ivnny.b[42][1]++,previous!==_node)){cov_2iup0ivnny.b[41][0]++;cov_2iup0ivnny.s[78]++;container.replaceChild(_node,previous);}else{cov_2iup0ivnny.b[41][1]++;cov_2iup0ivnny.s[79]++;if(!previous){cov_2iup0ivnny.b[43][0]++;cov_2iup0ivnny.s[80]++;container.appendChild(_node);}else{cov_2iup0ivnny.b[43][1]++;}}}else{cov_2iup0ivnny.b[40][1]++;}cov_2iup0ivnny.s[81]++;_node.srcObject=mediaStream;cov_2iup0ivnny.s[82]++;_node.volume=volume;cov_2iup0ivnny.s[83]++;return _node;}else{cov_2iup0ivnny.b[36][1]++;}cov_2iup0ivnny.s[84]++;return previous;}},{key:"devices",value:function devices(){cov_2iup0ivnny.f[11]++;cov_2iup0ivnny.s[85]++;return navigator.mediaDevices.enumerateDevices().then(function(devices){cov_2iup0ivnny.f[12]++;var r=(cov_2iup0ivnny.s[86]++,{});cov_2iup0ivnny.s[87]++;devices.forEach(function(device){cov_2iup0ivnny.f[13]++;cov_2iup0ivnny.s[88]++;if(!r[device.kind]){cov_2iup0ivnny.b[44][0]++;cov_2iup0ivnny.s[89]++;r[device.kind]=[];}else{cov_2iup0ivnny.b[44][1]++;}cov_2iup0ivnny.s[90]++;r[device.kind].push(device);});cov_2iup0ivnny.s[91]++;Log.d('Media#devices',r);cov_2iup0ivnny.s[92]++;return r;}).catch(Log.r('Media#devices'));}},{key:"facingMode",get:function get(){cov_2iup0ivnny.f[14]++;cov_2iup0ivnny.s[93]++;return{USER:'user',ENVIRONMENT:'environment'};}}]);cov_2iup0ivnny.s[94]++;return Media;}());cov_2iup0ivnny.s[95]++;exports.default=Media;

/***/ }),

/***/ "./src/core/util/cache.js":
/*!********************************!*\
  !*** ./src/core/util/cache.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_22eb5xbn1j=function(){var path="/home/florent/Projets/reach/src/core/util/cache.js",hash="56a70d66ae4895545dc14895f3c9cc6b6b5ccf55",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/util/cache.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:14},end:{line:8,column:62}},"3":{start:{line:10,column:14},end:{line:10,column:58}},"4":{start:{line:12,column:21},end:{line:12,column:79}},"5":{start:{line:14,column:29},end:{line:14,column:95}},"6":{start:{line:16,column:39},end:{line:16,column:93}},"7":{start:{line:18,column:50},end:{line:18,column:151}},"8":{start:{line:18,column:92},end:{line:18,column:149}},"9":{start:{line:20,column:44},end:{line:20,column:315}},"10":{start:{line:20,column:102},end:{line:20,column:110}},"11":{start:{line:20,column:112},end:{line:20,column:167}},"12":{start:{line:20,column:168},end:{line:20,column:199}},"13":{start:{line:20,column:200},end:{line:20,column:254}},"14":{start:{line:20,column:227},end:{line:20,column:254}},"15":{start:{line:20,column:255},end:{line:20,column:313}},"16":{start:{line:22,column:62},end:{line:22,column:131}},"17":{start:{line:22,column:78},end:{line:22,column:131}},"18":{start:{line:22,column:132},end:{line:22,column:193}},"19":{start:{line:22,column:149},end:{line:22,column:193}},"20":{start:{line:22,column:194},end:{line:22,column:213}},"21":{start:{line:29,column:13},end:{line:29,column:17}},"22":{start:{line:37,column:0},end:{line:224,column:3}},"23":{start:{line:43,column:4},end:{line:43,column:40}},"24":{start:{line:45,column:4},end:{line:47,column:5}},"25":{start:{line:46,column:6},end:{line:46,column:20}},"26":{start:{line:49,column:4},end:{line:49,column:18}},"27":{start:{line:57,column:2},end:{line:221,column:6}},"28":{start:{line:63,column:6},end:{line:63,column:83}},"29":{start:{line:71,column:6},end:{line:71,column:24}},"30":{start:{line:81,column:6},end:{line:88,column:7}},"31":{start:{line:85,column:8},end:{line:85,column:51}},"32":{start:{line:87,column:8},end:{line:87,column:36}},"33":{start:{line:96,column:6},end:{line:98,column:7}},"34":{start:{line:97,column:8},end:{line:97,column:45}},"35":{start:{line:100,column:6},end:{line:100,column:26}},"36":{start:{line:113,column:6},end:{line:113,column:24}},"37":{start:{line:121,column:6},end:{line:121,column:24}},"38":{start:{line:134,column:6},end:{line:134,column:28}},"39":{start:{line:142,column:6},end:{line:142,column:26}},"40":{start:{line:152,column:6},end:{line:159,column:7}},"41":{start:{line:156,column:8},end:{line:156,column:31}},"42":{start:{line:157,column:13},end:{line:159,column:7}},"43":{start:{line:158,column:8},end:{line:158,column:76}},"44":{start:{line:167,column:6},end:{line:167,column:39}},"45":{start:{line:177,column:6},end:{line:182,column:7}},"46":{start:{line:181,column:8},end:{line:181,column:53}},"47":{start:{line:184,column:6},end:{line:184,column:27}},"48":{start:{line:194,column:6},end:{line:199,column:7}},"49":{start:{line:198,column:8},end:{line:198,column:69}},"50":{start:{line:201,column:6},end:{line:201,column:35}},"51":{start:{line:211,column:6},end:{line:211,column:24}},"52":{start:{line:219,column:6},end:{line:219,column:24}},"53":{start:{line:223,column:2},end:{line:223,column:22}},"54":{start:{line:232,column:12},end:{line:232,column:30}},"55":{start:{line:238,column:15},end:{line:238,column:20}},"56":{start:{line:239,column:0},end:{line:239,column:27}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:16,column:9},end:{line:16,column:31}},loc:{start:{line:16,column:37},end:{line:16,column:95}},line:16},"1":{name:"_classCallCheck",decl:{start:{line:18,column:9},end:{line:18,column:24}},loc:{start:{line:18,column:48},end:{line:18,column:153}},line:18},"2":{name:"_defineProperties",decl:{start:{line:20,column:9},end:{line:20,column:26}},loc:{start:{line:20,column:42},end:{line:20,column:317}},line:20},"3":{name:"_createClass",decl:{start:{line:22,column:9},end:{line:22,column:21}},loc:{start:{line:22,column:60},end:{line:22,column:215}},line:22},"4":{name:"(anonymous_4)",decl:{start:{line:37,column:0},end:{line:37,column:1}},loc:{start:{line:37,column:12},end:{line:224,column:1}},line:37},"5":{name:"CacheManager",decl:{start:{line:42,column:11},end:{line:42,column:23}},loc:{start:{line:42,column:26},end:{line:50,column:3}},line:42},"6":{name:"set",decl:{start:{line:59,column:18},end:{line:59,column:21}},loc:{start:{line:59,column:27},end:{line:64,column:5}},line:59},"7":{name:"get",decl:{start:{line:70,column:18},end:{line:70,column:21}},loc:{start:{line:70,column:24},end:{line:72,column:5}},line:70},"8":{name:"set",decl:{start:{line:80,column:18},end:{line:80,column:21}},loc:{start:{line:80,column:30},end:{line:89,column:5}},line:80},"9":{name:"get",decl:{start:{line:95,column:18},end:{line:95,column:21}},loc:{start:{line:95,column:24},end:{line:101,column:5}},line:95},"10":{name:"set",decl:{start:{line:109,column:18},end:{line:109,column:21}},loc:{start:{line:109,column:28},end:{line:114,column:5}},line:109},"11":{name:"get",decl:{start:{line:120,column:18},end:{line:120,column:21}},loc:{start:{line:120,column:24},end:{line:122,column:5}},line:120},"12":{name:"set",decl:{start:{line:130,column:18},end:{line:130,column:21}},loc:{start:{line:130,column:30},end:{line:135,column:5}},line:130},"13":{name:"get",decl:{start:{line:141,column:18},end:{line:141,column:21}},loc:{start:{line:141,column:24},end:{line:143,column:5}},line:141},"14":{name:"set",decl:{start:{line:151,column:18},end:{line:151,column:21}},loc:{start:{line:151,column:29},end:{line:160,column:5}},line:151},"15":{name:"get",decl:{start:{line:166,column:18},end:{line:166,column:21}},loc:{start:{line:166,column:24},end:{line:168,column:5}},line:166},"16":{name:"get",decl:{start:{line:176,column:18},end:{line:176,column:21}},loc:{start:{line:176,column:24},end:{line:185,column:5}},line:176},"17":{name:"get",decl:{start:{line:193,column:18},end:{line:193,column:21}},loc:{start:{line:193,column:24},end:{line:202,column:5}},line:193},"18":{name:"set",decl:{start:{line:210,column:18},end:{line:210,column:21}},loc:{start:{line:210,column:28},end:{line:212,column:5}},line:210},"19":{name:"get",decl:{start:{line:218,column:18},end:{line:218,column:21}},loc:{start:{line:218,column:24},end:{line:220,column:5}},line:218}},branchMap:{"0":{loc:{start:{line:16,column:46},end:{line:16,column:92}},type:"cond-expr",locations:[{start:{line:16,column:70},end:{line:16,column:73}},{start:{line:16,column:76},end:{line:16,column:92}}],line:16},"1":{loc:{start:{line:16,column:46},end:{line:16,column:67}},type:"binary-expr",locations:[{start:{line:16,column:46},end:{line:16,column:49}},{start:{line:16,column:53},end:{line:16,column:67}}],line:16},"2":{loc:{start:{line:18,column:50},end:{line:18,column:151}},type:"if",locations:[{start:{line:18,column:50},end:{line:18,column:151}},{start:{line:18,column:50},end:{line:18,column:151}}],line:18},"3":{loc:{start:{line:20,column:136},end:{line:20,column:166}},type:"binary-expr",locations:[{start:{line:20,column:136},end:{line:20,column:157}},{start:{line:20,column:161},end:{line:20,column:166}}],line:20},"4":{loc:{start:{line:20,column:200},end:{line:20,column:254}},type:"if",locations:[{start:{line:20,column:200},end:{line:20,column:254}},{start:{line:20,column:200},end:{line:20,column:254}}],line:20},"5":{loc:{start:{line:22,column:62},end:{line:22,column:131}},type:"if",locations:[{start:{line:22,column:62},end:{line:22,column:131}},{start:{line:22,column:62},end:{line:22,column:131}}],line:22},"6":{loc:{start:{line:22,column:132},end:{line:22,column:193}},type:"if",locations:[{start:{line:22,column:132},end:{line:22,column:193}},{start:{line:22,column:132},end:{line:22,column:193}}],line:22},"7":{loc:{start:{line:45,column:4},end:{line:47,column:5}},type:"if",locations:[{start:{line:45,column:4},end:{line:47,column:5}},{start:{line:45,column:4},end:{line:47,column:5}}],line:45},"8":{loc:{start:{line:63,column:19},end:{line:63,column:82}},type:"cond-expr",locations:[{start:{line:63,column:52},end:{line:63,column:55}},{start:{line:63,column:58},end:{line:63,column:82}}],line:63},"9":{loc:{start:{line:81,column:6},end:{line:88,column:7}},type:"if",locations:[{start:{line:81,column:6},end:{line:88,column:7}},{start:{line:81,column:6},end:{line:88,column:7}}],line:81},"10":{loc:{start:{line:96,column:6},end:{line:98,column:7}},type:"if",locations:[{start:{line:96,column:6},end:{line:98,column:7}},{start:{line:96,column:6},end:{line:98,column:7}}],line:96},"11":{loc:{start:{line:152,column:6},end:{line:159,column:7}},type:"if",locations:[{start:{line:152,column:6},end:{line:159,column:7}},{start:{line:152,column:6},end:{line:159,column:7}}],line:152},"12":{loc:{start:{line:157,column:13},end:{line:159,column:7}},type:"if",locations:[{start:{line:157,column:13},end:{line:159,column:7}},{start:{line:157,column:13},end:{line:159,column:7}}],line:157},"13":{loc:{start:{line:167,column:13},end:{line:167,column:38}},type:"binary-expr",locations:[{start:{line:167,column:13},end:{line:167,column:27}},{start:{line:167,column:31},end:{line:167,column:38}}],line:167},"14":{loc:{start:{line:177,column:6},end:{line:182,column:7}},type:"if",locations:[{start:{line:177,column:6},end:{line:182,column:7}},{start:{line:177,column:6},end:{line:182,column:7}}],line:177},"15":{loc:{start:{line:194,column:6},end:{line:199,column:7}},type:"if",locations:[{start:{line:194,column:6},end:{line:199,column:7}},{start:{line:194,column:6},end:{line:199,column:7}}],line:194}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/util/cache.js"],names:["_cache","CacheManager","url","_base","Webcom","config","_config","Config","assign","user","_user","device","_device","level","test","_logLevel","Error","_streams","StreamManager","_peerConnections","PeerConnectionManager","room","_room","cache"],mappings:";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA;;;;;AAKA,IAAIA,MAAM,GAAG,IAAb;AAEA;;;;;IAIMC,Y;;;AACJ;;;;AAIA,0BAAc;AAAA;;AACZ,QAAI,CAACD,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,IAAT;AACD;;AACD,WAAOA,MAAP;AACD;AAED;;;;;;;;sBAISE,G,EAAK;AACZ;;;AAGA,WAAKC,KAAL,GAAaD,GAAG,YAAYE,eAAf,GAAwBF,GAAxB,GAA8B,IAAIE,eAAJ,CAAWF,GAAX,CAA3C;AACD;AAED;;;;;wBAIW;AACT,aAAO,KAAKC,KAAZ;AACD;AAED;;;;;;;sBAIWE,M,EAAQ;AACjB,UAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB;;;AAGA,aAAKA,OAAL,GAAe,IAAIC,eAAJ,CAAWF,MAAX,CAAf;AACD,OALD,MAKO;AACL,aAAKC,OAAL,CAAaE,MAAb,CAAoBH,MAApB;AACD;AACF;AAED;;;;;wBAIa;AACX,UAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,aAAKA,OAAL,GAAe,IAAIC,eAAJ,EAAf;AACD;;AACD,aAAO,KAAKD,OAAZ;AACD;AAED;;;;;;;sBAISG,I,EAAM;AACb;;;AAGA,WAAKC,KAAL,GAAaD,IAAb;AACD;AAED;;;;;wBAIW;AACT,aAAO,KAAKC,KAAZ;AACD;AAED;;;;;;;sBAIWC,M,EAAQ;AACjB;;;AAGA,WAAKC,OAAL,GAAeD,MAAf;AACD;AAED;;;;;wBAIa;AACX,aAAO,KAAKC,OAAZ;AACD;AAED;;;;;;;sBAIaC,K,EAAO;AAClB,UAAI,2BAA2BC,IAA3B,CAAgCD,KAAhC,CAAJ,EAA4C;AAC1C;;;AAGA,aAAKE,SAAL,GAAiBF,KAAjB;AACD,OALD,MAKO,IAAIA,KAAJ,EAAW;AAChB,cAAM,IAAIG,KAAJ,CAAU,kDAAV,CAAN;AACD;AACF;AAED;;;;;wBAIe;AACb,aAAO,KAAKD,SAAL,IAAkB,OAAzB;AACD;AAED;;;;;;;wBAIc;AACZ,UAAI,CAAC,KAAKE,QAAV,EAAoB;AAClB;;;AAGA,aAAKA,QAAL,GAAgB,IAAIC,sBAAJ,EAAhB;AACD;;AACD,aAAO,KAAKD,QAAZ;AACD;AAED;;;;;;;wBAIsB;AACpB,UAAI,CAAC,KAAKE,gBAAV,EAA4B;AAC1B;;;AAGA,aAAKA,gBAAL,GAAwB,IAAIC,8BAAJ,EAAxB;AACD;;AACD,aAAO,KAAKD,gBAAZ;AACD;AAED;;;;;;;sBAISE,I,EAAM;AACb,WAAKC,KAAL,GAAaD,IAAb;AACD;AAED;;;;;wBAIW;AACT,aAAO,KAAKC,KAAZ;AACD;;;;;AAGH;;;;;;;AAKA,IAAMC,KAAK,GAAG,IAAItB,YAAJ,EAAd;AAEA;;;;;eAIesB,K",sourcesContent:["import Webcom from 'webcom/webcom';\nimport Config from '../Config';\nimport StreamManager from '../stream/StreamManager';\nimport PeerConnectionManager from '../webrtc/PeerConnectionManager';\n\n/**\n * singleton\n * @type {CacheManager}\n * @private\n */\nlet _cache = null;\n\n/**\n * Singleton to handle global references\n * @access protected\n */\nclass CacheManager {\n  /**\n   * Construct singleton\n   * @return {CacheManager}\n   */\n  constructor() {\n    if (!_cache) {\n      _cache = this;\n    }\n    return _cache;\n  }\n\n  /**\n   * The base reference\n   * @param {Webcom} url the reference or its url\n   */\n  set base(url) {\n    /**\n     * @ignore\n     */\n    this._base = url instanceof Webcom ? url : new Webcom(url);\n  }\n\n  /**\n   * The base reference\n   * @type {Webcom}\n   */\n  get base() {\n    return this._base;\n  }\n\n  /**\n   * The connected user\n   * @param {Config} config the connected user\n   */\n  set config(config) {\n    if (!this._config) {\n      /**\n       * @ignore\n       */\n      this._config = new Config(config);\n    } else {\n      this._config.assign(config);\n    }\n  }\n\n  /**\n   * The connected user\n   * @type {Config}\n   */\n  get config() {\n    if (!this._config) {\n      this._config = new Config();\n    }\n    return this._config;\n  }\n\n  /**\n   * The connected user\n   * @param {User} user the connected user\n   */\n  set user(user) {\n    /**\n     * @ignore\n     */\n    this._user = user;\n  }\n\n  /**\n   * The connected user\n   * @type {User}\n   */\n  get user() {\n    return this._user;\n  }\n\n  /**\n   * The current device\n   * @param {string} device the current device\n   */\n  set device(device) {\n    /**\n     * @ignore\n     */\n    this._device = device;\n  }\n\n  /**\n   * The current device\n   * @type {string}\n   */\n  get device() {\n    return this._device;\n  }\n\n  /**\n   * The log level (DEBUG, INFO, WARN, ERROR)\n   * @type {string}\n   */\n  set logLevel(level) {\n    if (/^DEBUG|INFO|WARN|ERROR$/i.test(level)) {\n      /**\n       * @ignore\n       */\n      this._logLevel = level;\n    } else if (level) {\n      throw new Error('Unsupported log level (DEBUG, INFO, WARN, ERROR)');\n    }\n  }\n\n  /**\n   * The log level (DEBUG, INFO, WARN, ERROR)\n   * @returns {string}\n   */\n  get logLevel() {\n    return this._logLevel || 'ERROR';\n  }\n\n  /**\n   * Streams manager\n   * @returns {StreamManager}\n   */\n  get streams() {\n    if (!this._streams) {\n      /**\n       * @ignore\n       */\n      this._streams = new StreamManager();\n    }\n    return this._streams;\n  }\n\n  /**\n   * PeerConnections manager\n   * @returns {PeerConnectionManager}\n   */\n  get peerConnections() {\n    if (!this._peerConnections) {\n      /**\n       * @ignore\n       */\n      this._peerConnections = new PeerConnectionManager();\n    }\n    return this._peerConnections;\n  }\n\n  /**\n   *\n   * @param room\n   */\n  set room(room) {\n    this._room = room;\n  }\n\n  /**\n   *\n   * @returns {*}\n   */\n  get room() {\n    return this._room;\n  }\n}\n\n/**\n * The singleton instance\n * @ignore\n * @type {CacheManager}\n */\nconst cache = new CacheManager();\n\n/**\n * Singleton for shared references\n * @access protected\n */\nexport default cache;\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_22eb5xbn1j.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_22eb5xbn1j.s[1]++;exports.default=void 0;var _webcom=(cov_22eb5xbn1j.s[2]++,_interopRequireDefault(__webpack_require__(/*! webcom/webcom */ "webcom/webcom")));var _Config=(cov_22eb5xbn1j.s[3]++,_interopRequireDefault(__webpack_require__(/*! ../Config */ "./src/core/Config.js")));var _StreamManager=(cov_22eb5xbn1j.s[4]++,_interopRequireDefault(__webpack_require__(/*! ../stream/StreamManager */ "./src/core/stream/StreamManager.js")));var _PeerConnectionManager=(cov_22eb5xbn1j.s[5]++,_interopRequireDefault(__webpack_require__(/*! ../webrtc/PeerConnectionManager */ "./src/core/webrtc/PeerConnectionManager.js")));function _interopRequireDefault(obj){cov_22eb5xbn1j.f[0]++;cov_22eb5xbn1j.s[6]++;return(cov_22eb5xbn1j.b[1][0]++,obj)&&(cov_22eb5xbn1j.b[1][1]++,obj.__esModule)?(cov_22eb5xbn1j.b[0][0]++,obj):(cov_22eb5xbn1j.b[0][1]++,{default:obj});}function _classCallCheck(instance,Constructor){cov_22eb5xbn1j.f[1]++;cov_22eb5xbn1j.s[7]++;if(!(instance instanceof Constructor)){cov_22eb5xbn1j.b[2][0]++;cov_22eb5xbn1j.s[8]++;throw new TypeError("Cannot call a class as a function");}else{cov_22eb5xbn1j.b[2][1]++;}}function _defineProperties(target,props){cov_22eb5xbn1j.f[2]++;cov_22eb5xbn1j.s[9]++;for(var i=0;i<props.length;i++){var descriptor=(cov_22eb5xbn1j.s[10]++,props[i]);cov_22eb5xbn1j.s[11]++;descriptor.enumerable=(cov_22eb5xbn1j.b[3][0]++,descriptor.enumerable)||(cov_22eb5xbn1j.b[3][1]++,false);cov_22eb5xbn1j.s[12]++;descriptor.configurable=true;cov_22eb5xbn1j.s[13]++;if("value"in descriptor){cov_22eb5xbn1j.b[4][0]++;cov_22eb5xbn1j.s[14]++;descriptor.writable=true;}else{cov_22eb5xbn1j.b[4][1]++;}cov_22eb5xbn1j.s[15]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_22eb5xbn1j.f[3]++;cov_22eb5xbn1j.s[16]++;if(protoProps){cov_22eb5xbn1j.b[5][0]++;cov_22eb5xbn1j.s[17]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_22eb5xbn1j.b[5][1]++;}cov_22eb5xbn1j.s[18]++;if(staticProps){cov_22eb5xbn1j.b[6][0]++;cov_22eb5xbn1j.s[19]++;_defineProperties(Constructor,staticProps);}else{cov_22eb5xbn1j.b[6][1]++;}cov_22eb5xbn1j.s[20]++;return Constructor;}var _cache=(cov_22eb5xbn1j.s[21]++,null);var CacheManager=(cov_22eb5xbn1j.s[22]++,function(){cov_22eb5xbn1j.f[4]++;function CacheManager(){cov_22eb5xbn1j.f[5]++;cov_22eb5xbn1j.s[23]++;_classCallCheck(this,CacheManager);cov_22eb5xbn1j.s[24]++;if(!_cache){cov_22eb5xbn1j.b[7][0]++;cov_22eb5xbn1j.s[25]++;_cache=this;}else{cov_22eb5xbn1j.b[7][1]++;}cov_22eb5xbn1j.s[26]++;return _cache;}cov_22eb5xbn1j.s[27]++;_createClass(CacheManager,[{key:"base",set:function set(url){cov_22eb5xbn1j.f[6]++;cov_22eb5xbn1j.s[28]++;this._base=url instanceof _webcom.default?(cov_22eb5xbn1j.b[8][0]++,url):(cov_22eb5xbn1j.b[8][1]++,new _webcom.default(url));},get:function get(){cov_22eb5xbn1j.f[7]++;cov_22eb5xbn1j.s[29]++;return this._base;}},{key:"config",set:function set(config){cov_22eb5xbn1j.f[8]++;cov_22eb5xbn1j.s[30]++;if(!this._config){cov_22eb5xbn1j.b[9][0]++;cov_22eb5xbn1j.s[31]++;this._config=new _Config.default(config);}else{cov_22eb5xbn1j.b[9][1]++;cov_22eb5xbn1j.s[32]++;this._config.assign(config);}},get:function get(){cov_22eb5xbn1j.f[9]++;cov_22eb5xbn1j.s[33]++;if(!this._config){cov_22eb5xbn1j.b[10][0]++;cov_22eb5xbn1j.s[34]++;this._config=new _Config.default();}else{cov_22eb5xbn1j.b[10][1]++;}cov_22eb5xbn1j.s[35]++;return this._config;}},{key:"user",set:function set(user){cov_22eb5xbn1j.f[10]++;cov_22eb5xbn1j.s[36]++;this._user=user;},get:function get(){cov_22eb5xbn1j.f[11]++;cov_22eb5xbn1j.s[37]++;return this._user;}},{key:"device",set:function set(device){cov_22eb5xbn1j.f[12]++;cov_22eb5xbn1j.s[38]++;this._device=device;},get:function get(){cov_22eb5xbn1j.f[13]++;cov_22eb5xbn1j.s[39]++;return this._device;}},{key:"logLevel",set:function set(level){cov_22eb5xbn1j.f[14]++;cov_22eb5xbn1j.s[40]++;if(/^DEBUG|INFO|WARN|ERROR$/i.test(level)){cov_22eb5xbn1j.b[11][0]++;cov_22eb5xbn1j.s[41]++;this._logLevel=level;}else{cov_22eb5xbn1j.b[11][1]++;cov_22eb5xbn1j.s[42]++;if(level){cov_22eb5xbn1j.b[12][0]++;cov_22eb5xbn1j.s[43]++;throw new Error('Unsupported log level (DEBUG, INFO, WARN, ERROR)');}else{cov_22eb5xbn1j.b[12][1]++;}}},get:function get(){cov_22eb5xbn1j.f[15]++;cov_22eb5xbn1j.s[44]++;return(cov_22eb5xbn1j.b[13][0]++,this._logLevel)||(cov_22eb5xbn1j.b[13][1]++,'ERROR');}},{key:"streams",get:function get(){cov_22eb5xbn1j.f[16]++;cov_22eb5xbn1j.s[45]++;if(!this._streams){cov_22eb5xbn1j.b[14][0]++;cov_22eb5xbn1j.s[46]++;this._streams=new _StreamManager.default();}else{cov_22eb5xbn1j.b[14][1]++;}cov_22eb5xbn1j.s[47]++;return this._streams;}},{key:"peerConnections",get:function get(){cov_22eb5xbn1j.f[17]++;cov_22eb5xbn1j.s[48]++;if(!this._peerConnections){cov_22eb5xbn1j.b[15][0]++;cov_22eb5xbn1j.s[49]++;this._peerConnections=new _PeerConnectionManager.default();}else{cov_22eb5xbn1j.b[15][1]++;}cov_22eb5xbn1j.s[50]++;return this._peerConnections;}},{key:"room",set:function set(room){cov_22eb5xbn1j.f[18]++;cov_22eb5xbn1j.s[51]++;this._room=room;},get:function get(){cov_22eb5xbn1j.f[19]++;cov_22eb5xbn1j.s[52]++;return this._room;}}]);cov_22eb5xbn1j.s[53]++;return CacheManager;}());var cache=(cov_22eb5xbn1j.s[54]++,new CacheManager());var _default=(cov_22eb5xbn1j.s[55]++,cache);cov_22eb5xbn1j.s[56]++;exports.default=_default;

/***/ }),

/***/ "./src/core/util/constants.js":
/*!************************************!*\
  !*** ./src/core/util/constants.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_10ez0sp7em=function(){var path="/home/florent/Projets/reach/src/core/util/constants.js",hash="90be2a748f41fe7f5ee6007e4b6fd8ce5742a76f",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/util/constants.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:275}},"2":{start:{line:13,column:13},end:{line:13,column:21}},"3":{start:{line:20,column:0},end:{line:20,column:24}},"4":{start:{line:21,column:13},end:{line:21,column:21}},"5":{start:{line:28,column:0},end:{line:28,column:24}},"6":{start:{line:29,column:14},end:{line:29,column:23}},"7":{start:{line:36,column:0},end:{line:36,column:26}},"8":{start:{line:37,column:16},end:{line:37,column:27}},"9":{start:{line:44,column:0},end:{line:44,column:30}},"10":{start:{line:45,column:20},end:{line:45,column:35}},"11":{start:{line:52,column:0},end:{line:52,column:38}},"12":{start:{line:53,column:20},end:{line:53,column:35}},"13":{start:{line:60,column:0},end:{line:60,column:38}},"14":{start:{line:61,column:12},end:{line:61,column:19}},"15":{start:{line:68,column:0},end:{line:68,column:22}},"16":{start:{line:69,column:16},end:{line:69,column:27}},"17":{start:{line:76,column:0},end:{line:76,column:30}},"18":{start:{line:77,column:18},end:{line:77,column:31}},"19":{start:{line:84,column:0},end:{line:84,column:34}},"20":{start:{line:85,column:11},end:{line:85,column:17}},"21":{start:{line:92,column:0},end:{line:92,column:20}},"22":{start:{line:93,column:14},end:{line:93,column:23}},"23":{start:{line:100,column:0},end:{line:100,column:26}},"24":{start:{line:101,column:15},end:{line:101,column:25}},"25":{start:{line:108,column:0},end:{line:108,column:28}},"26":{start:{line:109,column:15},end:{line:109,column:25}},"27":{start:{line:116,column:0},end:{line:116,column:28}},"28":{start:{line:117,column:15},end:{line:117,column:25}},"29":{start:{line:118,column:0},end:{line:118,column:28}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},f:{},b:{},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/util/constants.js"],names:["OPENED","CLOSED","CLOSING","CONNECTED","NOT_CONNECTED","WAS_CONNECTED","OWNER","MODERATOR","PARTICIPANT","NONE","ONGOING","ACCEPTED","REJECTED","CANCELED"],mappings:";;;;;;;AAAA;;;;;AAKO,IAAMA,MAAM,GAAG,QAAf;AACP;;;;;;;AAKO,IAAMC,MAAM,GAAG,QAAf;AACP;;;;;;;AAKO,IAAMC,OAAO,GAAG,SAAhB;AACP;;;;;;;AAKO,IAAMC,SAAS,GAAG,WAAlB;AACP;;;;;;;AAKO,IAAMC,aAAa,GAAG,eAAtB;AACP;;;;;;;AAKO,IAAMC,aAAa,GAAG,eAAtB;AACP;;;;;;;AAKO,IAAMC,KAAK,GAAG,OAAd;AACP;;;;;;;AAKO,IAAMC,SAAS,GAAG,WAAlB;AACP;;;;;;;AAKO,IAAMC,WAAW,GAAG,aAApB;AACP;;;;;;;AAKO,IAAMC,IAAI,GAAG,MAAb;AACP;;;;;;;AAKO,IAAMC,OAAO,GAAG,SAAhB;AACP;;;;;;;AAKO,IAAMC,QAAQ,GAAG,UAAjB;AACP;;;;;;;AAKO,IAAMC,QAAQ,GAAG,UAAjB;AACP;;;;;;;AAKO,IAAMC,QAAQ,GAAG,UAAjB",sourcesContent:["/**\n * OPENED\n * @access protected\n * @type {string}\n */\nexport const OPENED = 'OPENED';\n/**\n * CLOSED\n * @access protected\n * @type {string}\n */\nexport const CLOSED = 'CLOSED';\n/**\n * CLOSING\n * @access protected\n * @type {string}\n */\nexport const CLOSING = 'CLOSING';\n/**\n * CONNECTED\n * @access protected\n * @type {string}\n */\nexport const CONNECTED = 'CONNECTED';\n/**\n * NOT_CONNECTED\n * @access protected\n * @type {string}\n */\nexport const NOT_CONNECTED = 'NOT_CONNECTED';\n/**\n * WAS_CONNECTED\n * @access protected\n * @type {string}\n */\nexport const WAS_CONNECTED = 'WAS_CONNECTED';\n/**\n * OWNER\n * @access protected\n * @type {string}\n */\nexport const OWNER = 'OWNER';\n/**\n * MODERATOR\n * @access protected\n * @type {string}\n */\nexport const MODERATOR = 'MODERATOR';\n/**\n * PARTICIPANT\n * @access protected\n * @type {string}\n */\nexport const PARTICIPANT = 'PARTICIPANT';\n/**\n * NONE\n * @access protected\n * @type {string}\n */\nexport const NONE = 'NONE';\n/**\n * Ongoing invitation\n * @access protected\n * @type {string}\n */\nexport const ONGOING = 'ONGOING';\n/**\n * Accepted invitation\n * @access protected\n * @type {string}\n */\nexport const ACCEPTED = 'ACCEPTED';\n/**\n * Rejected invitation\n * @access protected\n * @type {string}\n */\nexport const REJECTED = 'REJECTED';\n/**\n * Canceled invitation\n * @access protected\n * @type {string}\n */\nexport const CANCELED = 'CANCELED';\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_10ez0sp7em.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_10ez0sp7em.s[1]++;exports.CANCELED=exports.REJECTED=exports.ACCEPTED=exports.ONGOING=exports.NONE=exports.PARTICIPANT=exports.MODERATOR=exports.OWNER=exports.WAS_CONNECTED=exports.NOT_CONNECTED=exports.CONNECTED=exports.CLOSING=exports.CLOSED=exports.OPENED=void 0;var OPENED=(cov_10ez0sp7em.s[2]++,'OPENED');cov_10ez0sp7em.s[3]++;exports.OPENED=OPENED;var CLOSED=(cov_10ez0sp7em.s[4]++,'CLOSED');cov_10ez0sp7em.s[5]++;exports.CLOSED=CLOSED;var CLOSING=(cov_10ez0sp7em.s[6]++,'CLOSING');cov_10ez0sp7em.s[7]++;exports.CLOSING=CLOSING;var CONNECTED=(cov_10ez0sp7em.s[8]++,'CONNECTED');cov_10ez0sp7em.s[9]++;exports.CONNECTED=CONNECTED;var NOT_CONNECTED=(cov_10ez0sp7em.s[10]++,'NOT_CONNECTED');cov_10ez0sp7em.s[11]++;exports.NOT_CONNECTED=NOT_CONNECTED;var WAS_CONNECTED=(cov_10ez0sp7em.s[12]++,'WAS_CONNECTED');cov_10ez0sp7em.s[13]++;exports.WAS_CONNECTED=WAS_CONNECTED;var OWNER=(cov_10ez0sp7em.s[14]++,'OWNER');cov_10ez0sp7em.s[15]++;exports.OWNER=OWNER;var MODERATOR=(cov_10ez0sp7em.s[16]++,'MODERATOR');cov_10ez0sp7em.s[17]++;exports.MODERATOR=MODERATOR;var PARTICIPANT=(cov_10ez0sp7em.s[18]++,'PARTICIPANT');cov_10ez0sp7em.s[19]++;exports.PARTICIPANT=PARTICIPANT;var NONE=(cov_10ez0sp7em.s[20]++,'NONE');cov_10ez0sp7em.s[21]++;exports.NONE=NONE;var ONGOING=(cov_10ez0sp7em.s[22]++,'ONGOING');cov_10ez0sp7em.s[23]++;exports.ONGOING=ONGOING;var ACCEPTED=(cov_10ez0sp7em.s[24]++,'ACCEPTED');cov_10ez0sp7em.s[25]++;exports.ACCEPTED=ACCEPTED;var REJECTED=(cov_10ez0sp7em.s[26]++,'REJECTED');cov_10ez0sp7em.s[27]++;exports.REJECTED=REJECTED;var CANCELED=(cov_10ez0sp7em.s[28]++,'CANCELED');cov_10ez0sp7em.s[29]++;exports.CANCELED=CANCELED;

/***/ }),

/***/ "./src/core/webrtc/PeerConnection.js":
/*!*******************************************!*\
  !*** ./src/core/webrtc/PeerConnection.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_2o397libkm=function(){var path="/home/florent/Projets/reach/src/core/webrtc/PeerConnection.js",hash="497c4e9d08f9a2779635cf93dc2ebd3aa59078f5",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/webrtc/PeerConnection.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:14},end:{line:8,column:65}},"3":{start:{line:10,column:16},end:{line:10,column:59}},"4":{start:{line:12,column:13},end:{line:12,column:61}},"5":{start:{line:14,column:10},end:{line:14,column:57}},"6":{start:{line:16,column:13},end:{line:16,column:61}},"7":{start:{line:18,column:14},end:{line:18,column:58}},"8":{start:{line:20,column:15},end:{line:20,column:67}},"9":{start:{line:22,column:17},end:{line:22,column:45}},"10":{start:{line:24,column:0},end:{line:24,column:33}},"11":{start:{line:26,column:40},end:{line:26,column:470}},"12":{start:{line:26,column:69},end:{line:26,column:80}},"13":{start:{line:26,column:103},end:{line:26,column:105}},"14":{start:{line:26,column:107},end:{line:26,column:431}},"15":{start:{line:26,column:126},end:{line:26,column:429}},"16":{start:{line:26,column:149},end:{line:26,column:427}},"17":{start:{line:26,column:214},end:{line:26,column:319}},"18":{start:{line:26,column:321},end:{line:26,column:425}},"19":{start:{line:26,column:349},end:{line:26,column:390}},"20":{start:{line:26,column:400},end:{line:26,column:423}},"21":{start:{line:26,column:432},end:{line:26,column:453}},"22":{start:{line:26,column:454},end:{line:26,column:468}},"23":{start:{line:28,column:39},end:{line:28,column:93}},"24":{start:{line:30,column:50},end:{line:30,column:151}},"25":{start:{line:30,column:92},end:{line:30,column:149}},"26":{start:{line:32,column:44},end:{line:32,column:315}},"27":{start:{line:32,column:102},end:{line:32,column:110}},"28":{start:{line:32,column:112},end:{line:32,column:167}},"29":{start:{line:32,column:168},end:{line:32,column:199}},"30":{start:{line:32,column:200},end:{line:32,column:254}},"31":{start:{line:32,column:227},end:{line:32,column:254}},"32":{start:{line:32,column:255},end:{line:32,column:313}},"33":{start:{line:34,column:62},end:{line:34,column:131}},"34":{start:{line:34,column:78},end:{line:34,column:131}},"35":{start:{line:34,column:132},end:{line:34,column:193}},"36":{start:{line:34,column:149},end:{line:34,column:193}},"37":{start:{line:34,column:194},end:{line:34,column:213}},"38":{start:{line:36,column:27},end:{line:38,column:1}},"39":{start:{line:40,column:21},end:{line:45,column:1}},"40":{start:{line:41,column:2},end:{line:44,column:4}},"41":{start:{line:53,column:40},end:{line:53,column:54}},"42":{start:{line:60,column:37},end:{line:60,column:48}},"43":{start:{line:67,column:37},end:{line:67,column:48}},"44":{start:{line:74,column:36},end:{line:74,column:46}},"45":{start:{line:81,column:34},end:{line:81,column:42}},"46":{start:{line:88,column:34},end:{line:88,column:42}},"47":{start:{line:95,column:33},end:{line:95,column:40}},"48":{start:{line:100,column:14},end:{line:102,column:1}},"49":{start:{line:101,column:2},end:{line:101,column:69}},"50":{start:{line:111,column:0},end:{line:773,column:3}},"51":{start:{line:120,column:16},end:{line:120,column:20}},"52":{start:{line:122,column:4},end:{line:122,column:42}},"53":{start:{line:128,column:4},end:{line:128,column:27}},"54":{start:{line:134,column:4},end:{line:134,column:29}},"55":{start:{line:140,column:4},end:{line:140,column:25}},"56":{start:{line:146,column:4},end:{line:146,column:27}},"57":{start:{line:153,column:4},end:{line:153,column:117}},"58":{start:{line:160,column:4},end:{line:160,column:115}},"59":{start:{line:166,column:4},end:{line:166,column:28}},"60":{start:{line:173,column:4},end:{line:173,column:21}},"61":{start:{line:180,column:4},end:{line:180,column:26}},"62":{start:{line:186,column:4},end:{line:191,column:7}},"63":{start:{line:193,column:4},end:{line:198,column:6}},"64":{start:{line:194,column:6},end:{line:197,column:7}},"65":{start:{line:195,column:8},end:{line:195,column:60}},"66":{start:{line:196,column:8},end:{line:196,column:81}},"67":{start:{line:200,column:4},end:{line:243,column:6}},"68":{start:{line:201,column:6},end:{line:201,column:67}},"69":{start:{line:202,column:31},end:{line:202,column:58}},"70":{start:{line:204,column:6},end:{line:240,column:7}},"71":{start:{line:207,column:10},end:{line:207,column:16}},"72":{start:{line:210,column:10},end:{line:210,column:32}},"73":{start:{line:212,column:10},end:{line:212,column:44}},"74":{start:{line:214,column:10},end:{line:214,column:28}},"75":{start:{line:216,column:10},end:{line:216,column:16}},"76":{start:{line:219,column:10},end:{line:219,column:44}},"77":{start:{line:221,column:10},end:{line:221,column:16}},"78":{start:{line:224,column:10},end:{line:224,column:71}},"79":{start:{line:225,column:10},end:{line:225,column:16}},"80":{start:{line:228,column:10},end:{line:228,column:81}},"81":{start:{line:229,column:10},end:{line:229,column:16}},"82":{start:{line:232,column:10},end:{line:232,column:70}},"83":{start:{line:234,column:10},end:{line:234,column:24}},"84":{start:{line:236,column:10},end:{line:236,column:16}},"85":{start:{line:239,column:10},end:{line:239,column:16}},"86":{start:{line:242,column:6},end:{line:242,column:63}},"87":{start:{line:245,column:4},end:{line:247,column:6}},"88":{start:{line:246,column:6},end:{line:246,column:84}},"89":{start:{line:255,column:4},end:{line:255,column:37}},"90":{start:{line:258,column:2},end:{line:770,column:6}},"91":{start:{line:261,column:19},end:{line:261,column:23}},"92":{start:{line:263,column:6},end:{line:263,column:196}},"93":{start:{line:265,column:6},end:{line:277,column:7}},"94":{start:{line:267,column:8},end:{line:276,column:49}},"95":{start:{line:268,column:10},end:{line:275,column:22}},"96":{start:{line:288,column:19},end:{line:288,column:23}},"97":{start:{line:290,column:17},end:{line:290,column:52}},"98":{start:{line:291,column:18},end:{line:291,column:31}},"99":{start:{line:293,column:6},end:{line:303,column:7}},"100":{start:{line:295,column:8},end:{line:300,column:11}},"101":{start:{line:296,column:26},end:{line:296,column:36}},"102":{start:{line:297,column:10},end:{line:297,column:61}},"103":{start:{line:299,column:10},end:{line:299,column:68}},"104":{start:{line:302,column:8},end:{line:302,column:34}},"105":{start:{line:313,column:6},end:{line:316,column:7}},"106":{start:{line:314,column:8},end:{line:314,column:94}},"107":{start:{line:315,column:8},end:{line:315,column:32}},"108":{start:{line:335,column:19},end:{line:335,column:23}},"109":{start:{line:337,column:27},end:{line:337,column:97}},"110":{start:{line:338,column:6},end:{line:341,column:9}},"111":{start:{line:342,column:6},end:{line:342,column:35}},"112":{start:{line:344,column:6},end:{line:354,column:7}},"113":{start:{line:345,column:8},end:{line:348,column:10}},"114":{start:{line:346,column:10},end:{line:346,column:56}},"115":{start:{line:347,column:10},end:{line:347,column:45}},"116":{start:{line:350,column:8},end:{line:353,column:10}},"117":{start:{line:351,column:10},end:{line:351,column:56}},"118":{start:{line:352,column:10},end:{line:352,column:41}},"119":{start:{line:357,column:6},end:{line:398,column:9}},"120":{start:{line:358,column:23},end:{line:358,column:33}},"121":{start:{line:360,column:8},end:{line:397,column:9}},"122":{start:{line:361,column:10},end:{line:361,column:64}},"123":{start:{line:363,column:10},end:{line:396,column:13}},"124":{start:{line:364,column:12},end:{line:364,column:70}},"125":{start:{line:365,column:12},end:{line:368,column:15}},"126":{start:{line:366,column:14},end:{line:366,column:81}},"127":{start:{line:367,column:14},end:{line:367,column:20}},"128":{start:{line:369,column:12},end:{line:369,column:21}},"129":{start:{line:371,column:12},end:{line:371,column:101}},"130":{start:{line:373,column:12},end:{line:377,column:13}},"131":{start:{line:374,column:14},end:{line:376,column:17}},"132":{start:{line:375,column:16},end:{line:375,column:81}},"133":{start:{line:379,column:12},end:{line:379,column:68}},"134":{start:{line:381,column:12},end:{line:381,column:59}},"135":{start:{line:383,column:12},end:{line:383,column:62}},"136":{start:{line:385,column:12},end:{line:385,column:84}},"137":{start:{line:387,column:12},end:{line:387,column:84}},"138":{start:{line:389,column:12},end:{line:389,column:46}},"139":{start:{line:391,column:12},end:{line:391,column:45}},"140":{start:{line:395,column:12},end:{line:395,column:88}},"141":{start:{line:399,column:6},end:{line:399,column:35}},"142":{start:{line:412,column:19},end:{line:412,column:23}},"143":{start:{line:414,column:27},end:{line:414,column:97}},"144":{start:{line:415,column:6},end:{line:418,column:9}},"145":{start:{line:420,column:6},end:{line:467,column:9}},"146":{start:{line:421,column:8},end:{line:442,column:10}},"147":{start:{line:422,column:10},end:{line:422,column:54}},"148":{start:{line:424,column:10},end:{line:427,column:11}},"149":{start:{line:425,column:12},end:{line:425,column:38}},"150":{start:{line:426,column:12},end:{line:426,column:31}},"151":{start:{line:429,column:10},end:{line:441,column:17}},"152":{start:{line:430,column:12},end:{line:430,column:31}},"153":{start:{line:432,column:12},end:{line:440,column:15}},"154":{start:{line:433,column:14},end:{line:433,column:47}},"155":{start:{line:434,column:14},end:{line:436,column:17}},"156":{start:{line:435,column:16},end:{line:435,column:29}},"157":{start:{line:437,column:14},end:{line:437,column:24}},"158":{start:{line:439,column:14},end:{line:439,column:30}},"159":{start:{line:444,column:8},end:{line:464,column:11}},"160":{start:{line:445,column:26},end:{line:445,column:36}},"161":{start:{line:447,column:10},end:{line:463,column:11}},"162":{start:{line:448,column:12},end:{line:448,column:74}},"163":{start:{line:450,column:12},end:{line:462,column:15}},"164":{start:{line:451,column:14},end:{line:453,column:17}},"165":{start:{line:452,column:16},end:{line:452,column:29}},"166":{start:{line:455,column:14},end:{line:455,column:90}},"167":{start:{line:457,column:14},end:{line:457,column:72}},"168":{start:{line:459,column:14},end:{line:459,column:95}},"169":{start:{line:461,column:14},end:{line:461,column:48}},"170":{start:{line:466,column:8},end:{line:466,column:43}},"171":{start:{line:477,column:19},end:{line:477,column:23}},"172":{start:{line:480,column:25},end:{line:480,column:75}},"173":{start:{line:482,column:6},end:{line:510,column:9}},"174":{start:{line:483,column:23},end:{line:483,column:53}},"175":{start:{line:484,column:21},end:{line:484,column:29}},"176":{start:{line:485,column:20},end:{line:485,column:64}},"177":{start:{line:486,column:21},end:{line:486,column:68}},"178":{start:{line:488,column:8},end:{line:494,column:9}},"179":{start:{line:489,column:10},end:{line:493,column:11}},"180":{start:{line:490,column:12},end:{line:490,column:73}},"181":{start:{line:492,column:12},end:{line:492,column:56}},"182":{start:{line:496,column:8},end:{line:502,column:9}},"183":{start:{line:497,column:10},end:{line:501,column:11}},"184":{start:{line:498,column:12},end:{line:498,column:73}},"185":{start:{line:500,column:12},end:{line:500,column:56}},"186":{start:{line:504,column:8},end:{line:504,column:84}},"187":{start:{line:505,column:33},end:{line:508,column:9}},"188":{start:{line:509,column:8},end:{line:509,column:91}},"189":{start:{line:521,column:19},end:{line:521,column:23}},"190":{start:{line:523,column:6},end:{line:523,column:41}},"191":{start:{line:524,column:6},end:{line:532,column:9}},"192":{start:{line:525,column:8},end:{line:525,column:55}},"193":{start:{line:527,column:8},end:{line:527,column:58}},"194":{start:{line:529,column:8},end:{line:529,column:99}},"195":{start:{line:531,column:8},end:{line:531,column:41}},"196":{start:{line:544,column:19},end:{line:544,column:23}},"197":{start:{line:546,column:6},end:{line:558,column:7}},"198":{start:{line:547,column:8},end:{line:555,column:9}},"199":{start:{line:548,column:10},end:{line:550,column:19}},"200":{start:{line:549,column:12},end:{line:549,column:72}},"201":{start:{line:552,column:10},end:{line:554,column:19}},"202":{start:{line:553,column:12},end:{line:553,column:65}},"203":{start:{line:557,column:8},end:{line:557,column:53}},"204":{start:{line:570,column:6},end:{line:570,column:42}},"205":{start:{line:572,column:6},end:{line:602,column:7}},"206":{start:{line:574,column:8},end:{line:593,column:11}},"207":{start:{line:577,column:10},end:{line:588,column:11}},"208":{start:{line:579,column:14},end:{line:579,column:53}},"209":{start:{line:580,column:14},end:{line:580,column:20}},"210":{start:{line:583,column:14},end:{line:583,column:53}},"211":{start:{line:584,column:14},end:{line:584,column:20}},"212":{start:{line:587,column:14},end:{line:587,column:29}},"213":{start:{line:590,column:10},end:{line:592,column:11}},"214":{start:{line:591,column:12},end:{line:591,column:46}},"215":{start:{line:595,column:8},end:{line:597,column:11}},"216":{start:{line:596,column:10},end:{line:596,column:49}},"217":{start:{line:599,column:8},end:{line:599,column:47}},"218":{start:{line:601,column:8},end:{line:601,column:44}},"219":{start:{line:612,column:19},end:{line:612,column:23}},"220":{start:{line:614,column:6},end:{line:646,column:7}},"221":{start:{line:615,column:8},end:{line:615,column:42}},"222":{start:{line:617,column:8},end:{line:625,column:9}},"223":{start:{line:618,column:10},end:{line:620,column:11}},"224":{start:{line:619,column:12},end:{line:619,column:29}},"225":{start:{line:622,column:10},end:{line:622,column:37}},"226":{start:{line:623,column:10},end:{line:623,column:48}},"227":{start:{line:624,column:10},end:{line:624,column:27}},"228":{start:{line:628,column:8},end:{line:628,column:41}},"229":{start:{line:631,column:8},end:{line:631,column:67}},"230":{start:{line:633,column:8},end:{line:633,column:41}},"231":{start:{line:635,column:8},end:{line:645,column:9}},"232":{start:{line:636,column:10},end:{line:640,column:12}},"233":{start:{line:637,column:12},end:{line:639,column:13}},"234":{start:{line:638,column:14},end:{line:638,column:49}},"235":{start:{line:642,column:10},end:{line:642,column:26}},"236":{start:{line:644,column:10},end:{line:644,column:43}},"237":{start:{line:659,column:6},end:{line:728,column:7}},"238":{start:{line:660,column:8},end:{line:663,column:11}},"239":{start:{line:664,column:23},end:{line:664,column:53}},"240":{start:{line:665,column:21},end:{line:668,column:9}},"241":{start:{line:669,column:22},end:{line:669,column:26}},"242":{start:{line:671,column:8},end:{line:693,column:11}},"243":{start:{line:672,column:10},end:{line:692,column:11}},"244":{start:{line:674,column:20},end:{line:674,column:82}},"245":{start:{line:675,column:12},end:{line:679,column:14}},"246":{start:{line:680,column:12},end:{line:680,column:39}},"247":{start:{line:681,column:17},end:{line:692,column:11}},"248":{start:{line:683,column:20},end:{line:683,column:71}},"249":{start:{line:685,column:12},end:{line:691,column:13}},"250":{start:{line:686,column:14},end:{line:690,column:17}},"251":{start:{line:694,column:8},end:{line:694,column:60}},"252":{start:{line:695,column:21},end:{line:695,column:26}},"253":{start:{line:697,column:21},end:{line:711,column:9}},"254":{start:{line:698,column:10},end:{line:710,column:13}},"255":{start:{line:699,column:27},end:{line:701,column:14}},"256":{start:{line:700,column:14},end:{line:700,column:52}},"257":{start:{line:703,column:12},end:{line:709,column:13}},"258":{start:{line:704,column:24},end:{line:706,column:17}},"259":{start:{line:705,column:16},end:{line:705,column:43}},"260":{start:{line:707,column:14},end:{line:707,column:104}},"261":{start:{line:708,column:14},end:{line:708,column:28}},"262":{start:{line:713,column:8},end:{line:715,column:9}},"263":{start:{line:714,column:10},end:{line:714,column:74}},"264":{start:{line:717,column:8},end:{line:719,column:9}},"265":{start:{line:718,column:10},end:{line:718,column:74}},"266":{start:{line:721,column:8},end:{line:727,column:9}},"267":{start:{line:722,column:10},end:{line:722,column:77}},"268":{start:{line:723,column:10},end:{line:726,column:12}},"269":{start:{line:730,column:6},end:{line:730,column:25}},"270":{start:{line:735,column:6},end:{line:737,column:7}},"271":{start:{line:736,column:8},end:{line:736,column:80}},"272":{start:{line:739,column:6},end:{line:739,column:26}},"273":{start:{line:747,column:6},end:{line:747,column:34}},"274":{start:{line:749,column:6},end:{line:749,column:27}},"275":{start:{line:757,column:6},end:{line:757,column:32}},"276":{start:{line:767,column:6},end:{line:768,column:134}},"277":{start:{line:772,column:2},end:{line:772,column:24}},"278":{start:{line:775,column:0},end:{line:775,column:33}}},fnMap:{"0":{name:"_interopRequireWildcard",decl:{start:{line:26,column:9},end:{line:26,column:32}},loc:{start:{line:26,column:38},end:{line:26,column:472}},line:26},"1":{name:"_interopRequireDefault",decl:{start:{line:28,column:9},end:{line:28,column:31}},loc:{start:{line:28,column:37},end:{line:28,column:95}},line:28},"2":{name:"_classCallCheck",decl:{start:{line:30,column:9},end:{line:30,column:24}},loc:{start:{line:30,column:48},end:{line:30,column:153}},line:30},"3":{name:"_defineProperties",decl:{start:{line:32,column:9},end:{line:32,column:26}},loc:{start:{line:32,column:42},end:{line:32,column:317}},line:32},"4":{name:"_createClass",decl:{start:{line:34,column:9},end:{line:34,column:21}},loc:{start:{line:34,column:60},end:{line:34,column:215}},line:34},"5":{name:"sdpConstraints",decl:{start:{line:40,column:30},end:{line:40,column:44}},loc:{start:{line:40,column:54},end:{line:45,column:1}},line:40},"6":{name:"_toJSON",decl:{start:{line:100,column:23},end:{line:100,column:30}},loc:{start:{line:100,column:34},end:{line:102,column:1}},line:100},"7":{name:"(anonymous_7)",decl:{start:{line:111,column:0},end:{line:111,column:1}},loc:{start:{line:111,column:12},end:{line:773,column:1}},line:111},"8":{name:"PeerConnection",decl:{start:{line:119,column:11},end:{line:119,column:25}},loc:{start:{line:119,column:62},end:{line:256,column:3}},line:119},"9":{name:"(anonymous_9)",decl:{start:{line:193,column:29},end:{line:193,column:30}},loc:{start:{line:193,column:42},end:{line:198,column:5}},line:193},"10":{name:"(anonymous_10)",decl:{start:{line:200,column:41},end:{line:200,column:42}},loc:{start:{line:200,column:53},end:{line:243,column:5}},line:200},"11":{name:"(anonymous_11)",decl:{start:{line:245,column:40},end:{line:245,column:41}},loc:{start:{line:245,column:52},end:{line:247,column:5}},line:245},"12":{name:"_getStats",decl:{start:{line:260,column:20},end:{line:260,column:29}},loc:{start:{line:260,column:32},end:{line:278,column:5}},line:260},"13":{name:"(anonymous_13)",decl:{start:{line:267,column:40},end:{line:267,column:41}},loc:{start:{line:267,column:58},end:{line:276,column:9}},line:267},"14":{name:"_remoteICECandidates",decl:{start:{line:287,column:20},end:{line:287,column:40}},loc:{start:{line:287,column:49},end:{line:304,column:5}},line:287},"15":{name:"(anonymous_15)",decl:{start:{line:295,column:33},end:{line:295,column:34}},loc:{start:{line:295,column:49},end:{line:300,column:9}},line:295},"16":{name:"_attachStream",decl:{start:{line:312,column:20},end:{line:312,column:33}},loc:{start:{line:312,column:36},end:{line:317,column:5}},line:312},"17":{name:"answer",decl:{start:{line:334,column:20},end:{line:334,column:26}},loc:{start:{line:334,column:40},end:{line:400,column:5}},line:334},"18":{name:"(anonymous_18)",decl:{start:{line:345,column:26},end:{line:345,column:27}},loc:{start:{line:345,column:39},end:{line:348,column:9}},line:345},"19":{name:"(anonymous_19)",decl:{start:{line:350,column:30},end:{line:350,column:31}},loc:{start:{line:350,column:43},end:{line:353,column:9}},line:350},"20":{name:"(anonymous_20)",decl:{start:{line:357,column:64},end:{line:357,column:65}},loc:{start:{line:357,column:80},end:{line:398,column:7}},line:357},"21":{name:"(anonymous_21)",decl:{start:{line:363,column:57},end:{line:363,column:58}},loc:{start:{line:363,column:70},end:{line:370,column:11}},line:363},"22":{name:"(anonymous_22)",decl:{start:{line:365,column:35},end:{line:365,column:36}},loc:{start:{line:365,column:49},end:{line:368,column:13}},line:365},"23":{name:"(anonymous_23)",decl:{start:{line:370,column:18},end:{line:370,column:19}},loc:{start:{line:370,column:30},end:{line:372,column:11}},line:370},"24":{name:"(anonymous_24)",decl:{start:{line:372,column:18},end:{line:372,column:19}},loc:{start:{line:372,column:30},end:{line:380,column:11}},line:372},"25":{name:"(anonymous_25)",decl:{start:{line:374,column:52},end:{line:374,column:53}},loc:{start:{line:374,column:65},end:{line:376,column:15}},line:374},"26":{name:"(anonymous_26)",decl:{start:{line:380,column:18},end:{line:380,column:19}},loc:{start:{line:380,column:41},end:{line:382,column:11}},line:380},"27":{name:"(anonymous_27)",decl:{start:{line:382,column:18},end:{line:382,column:19}},loc:{start:{line:382,column:41},end:{line:384,column:11}},line:382},"28":{name:"(anonymous_28)",decl:{start:{line:384,column:19},end:{line:384,column:20}},loc:{start:{line:384,column:32},end:{line:386,column:11}},line:384},"29":{name:"(anonymous_29)",decl:{start:{line:386,column:18},end:{line:386,column:19}},loc:{start:{line:386,column:30},end:{line:390,column:11}},line:386},"30":{name:"(anonymous_30)",decl:{start:{line:390,column:18},end:{line:390,column:19}},loc:{start:{line:390,column:30},end:{line:392,column:11}},line:390},"31":{name:"(anonymous_31)",decl:{start:{line:393,column:17},end:{line:393,column:18}},loc:{start:{line:393,column:29},end:{line:396,column:11}},line:393},"32":{name:"offer",decl:{start:{line:411,column:20},end:{line:411,column:25}},loc:{start:{line:411,column:34},end:{line:468,column:5}},line:411},"33":{name:"(anonymous_33)",decl:{start:{line:420,column:25},end:{line:420,column:26}},loc:{start:{line:420,column:52},end:{line:467,column:7}},line:420},"34":{name:"(anonymous_34)",decl:{start:{line:421,column:40},end:{line:421,column:41}},loc:{start:{line:421,column:52},end:{line:442,column:9}},line:421},"35":{name:"(anonymous_35)",decl:{start:{line:429,column:35},end:{line:429,column:36}},loc:{start:{line:429,column:47},end:{line:441,column:11}},line:429},"36":{name:"(anonymous_36)",decl:{start:{line:432,column:38},end:{line:432,column:39}},loc:{start:{line:432,column:51},end:{line:438,column:13}},line:432},"37":{name:"(anonymous_37)",decl:{start:{line:434,column:37},end:{line:434,column:38}},loc:{start:{line:434,column:51},end:{line:436,column:15}},line:434},"38":{name:"(anonymous_38)",decl:{start:{line:438,column:20},end:{line:438,column:21}},loc:{start:{line:438,column:32},end:{line:440,column:13}},line:438},"39":{name:"(anonymous_39)",decl:{start:{line:444,column:68},end:{line:444,column:69}},loc:{start:{line:444,column:84},end:{line:464,column:9}},line:444},"40":{name:"(anonymous_40)",decl:{start:{line:450,column:60},end:{line:450,column:61}},loc:{start:{line:450,column:73},end:{line:458,column:13}},line:450},"41":{name:"(anonymous_41)",decl:{start:{line:451,column:37},end:{line:451,column:38}},loc:{start:{line:451,column:51},end:{line:453,column:15}},line:451},"42":{name:"(anonymous_42)",decl:{start:{line:458,column:20},end:{line:458,column:21}},loc:{start:{line:458,column:32},end:{line:462,column:13}},line:458},"43":{name:"_sendSdpToRemote",decl:{start:{line:476,column:20},end:{line:476,column:36}},loc:{start:{line:476,column:39},end:{line:511,column:5}},line:476},"44":{name:"(anonymous_44)",decl:{start:{line:482,column:65},end:{line:482,column:66}},loc:{start:{line:482,column:89},end:{line:510,column:7}},line:482},"45":{name:"_sendOffer",decl:{start:{line:520,column:20},end:{line:520,column:30}},loc:{start:{line:520,column:33},end:{line:533,column:5}},line:520},"46":{name:"(anonymous_46)",decl:{start:{line:524,column:40},end:{line:524,column:41}},loc:{start:{line:524,column:63},end:{line:526,column:7}},line:524},"47":{name:"(anonymous_47)",decl:{start:{line:526,column:14},end:{line:526,column:15}},loc:{start:{line:526,column:37},end:{line:528,column:7}},line:526},"48":{name:"(anonymous_48)",decl:{start:{line:528,column:14},end:{line:528,column:15}},loc:{start:{line:528,column:26},end:{line:530,column:7}},line:528},"49":{name:"(anonymous_49)",decl:{start:{line:530,column:14},end:{line:530,column:15}},loc:{start:{line:530,column:26},end:{line:532,column:7}},line:530},"50":{name:"_alterStream",decl:{start:{line:543,column:20},end:{line:543,column:32}},loc:{start:{line:543,column:49},end:{line:559,column:5}},line:543},"51":{name:"(anonymous_51)",decl:{start:{line:548,column:37},end:{line:548,column:38}},loc:{start:{line:548,column:54},end:{line:550,column:11}},line:548},"52":{name:"(anonymous_52)",decl:{start:{line:552,column:39},end:{line:552,column:40}},loc:{start:{line:552,column:57},end:{line:554,column:11}},line:552},"53":{name:"renegotiate",decl:{start:{line:569,column:20},end:{line:569,column:31}},loc:{start:{line:569,column:54},end:{line:603,column:5}},line:569},"54":{name:"(anonymous_54)",decl:{start:{line:574,column:37},end:{line:574,column:38}},loc:{start:{line:574,column:55},end:{line:593,column:9}},line:574},"55":{name:"(anonymous_55)",decl:{start:{line:595,column:32},end:{line:595,column:33}},loc:{start:{line:595,column:45},end:{line:597,column:9}},line:595},"56":{name:"close",decl:{start:{line:611,column:20},end:{line:611,column:25}},loc:{start:{line:611,column:28},end:{line:647,column:5}},line:611},"57":{name:"(anonymous_57)",decl:{start:{line:636,column:43},end:{line:636,column:44}},loc:{start:{line:636,column:55},end:{line:640,column:11}},line:636},"58":{name:"_setPreferredCodecs",decl:{start:{line:658,column:20},end:{line:658,column:39}},loc:{start:{line:658,column:53},end:{line:731,column:5}},line:658},"59":{name:"(anonymous_59)",decl:{start:{line:671,column:25},end:{line:671,column:26}},loc:{start:{line:671,column:47},end:{line:693,column:9}},line:671},"60":{name:"prefer",decl:{start:{line:697,column:30},end:{line:697,column:36}},loc:{start:{line:697,column:63},end:{line:711,column:9}},line:697},"61":{name:"(anonymous_61)",decl:{start:{line:698,column:28},end:{line:698,column:29}},loc:{start:{line:698,column:45},end:{line:710,column:11}},line:698},"62":{name:"(anonymous_62)",decl:{start:{line:699,column:45},end:{line:699,column:46}},loc:{start:{line:699,column:62},end:{line:701,column:13}},line:699},"63":{name:"(anonymous_63)",decl:{start:{line:704,column:62},end:{line:704,column:63}},loc:{start:{line:704,column:77},end:{line:706,column:15}},line:704},"64":{name:"get",decl:{start:{line:734,column:18},end:{line:734,column:21}},loc:{start:{line:734,column:24},end:{line:740,column:5}},line:734},"65":{name:"set",decl:{start:{line:743,column:18},end:{line:743,column:21}},loc:{start:{line:743,column:30},end:{line:750,column:5}},line:743},"66":{name:"get",decl:{start:{line:756,column:18},end:{line:756,column:21}},loc:{start:{line:756,column:24},end:{line:758,column:5}},line:756},"67":{name:"get",decl:{start:{line:766,column:18},end:{line:766,column:21}},loc:{start:{line:766,column:24},end:{line:769,column:5}},line:766}},branchMap:{"0":{loc:{start:{line:26,column:40},end:{line:26,column:470}},type:"if",locations:[{start:{line:26,column:40},end:{line:26,column:470}},{start:{line:26,column:40},end:{line:26,column:470}}],line:26},"1":{loc:{start:{line:26,column:44},end:{line:26,column:65}},type:"binary-expr",locations:[{start:{line:26,column:44},end:{line:26,column:47}},{start:{line:26,column:51},end:{line:26,column:65}}],line:26},"2":{loc:{start:{line:26,column:107},end:{line:26,column:431}},type:"if",locations:[{start:{line:26,column:107},end:{line:26,column:431}},{start:{line:26,column:107},end:{line:26,column:431}}],line:26},"3":{loc:{start:{line:26,column:149},end:{line:26,column:427}},type:"if",locations:[{start:{line:26,column:149},end:{line:26,column:427}},{start:{line:26,column:149},end:{line:26,column:427}}],line:26},"4":{loc:{start:{line:26,column:214},end:{line:26,column:319}},type:"cond-expr",locations:[{start:{line:26,column:273},end:{line:26,column:314}},{start:{line:26,column:317},end:{line:26,column:319}}],line:26},"5":{loc:{start:{line:26,column:214},end:{line:26,column:270}},type:"binary-expr",locations:[{start:{line:26,column:214},end:{line:26,column:235}},{start:{line:26,column:239},end:{line:26,column:270}}],line:26},"6":{loc:{start:{line:26,column:321},end:{line:26,column:425}},type:"if",locations:[{start:{line:26,column:321},end:{line:26,column:425}},{start:{line:26,column:321},end:{line:26,column:425}}],line:26},"7":{loc:{start:{line:26,column:325},end:{line:26,column:345}},type:"binary-expr",locations:[{start:{line:26,column:325},end:{line:26,column:333}},{start:{line:26,column:337},end:{line:26,column:345}}],line:26},"8":{loc:{start:{line:28,column:46},end:{line:28,column:92}},type:"cond-expr",locations:[{start:{line:28,column:70},end:{line:28,column:73}},{start:{line:28,column:76},end:{line:28,column:92}}],line:28},"9":{loc:{start:{line:28,column:46},end:{line:28,column:67}},type:"binary-expr",locations:[{start:{line:28,column:46},end:{line:28,column:49}},{start:{line:28,column:53},end:{line:28,column:67}}],line:28},"10":{loc:{start:{line:30,column:50},end:{line:30,column:151}},type:"if",locations:[{start:{line:30,column:50},end:{line:30,column:151}},{start:{line:30,column:50},end:{line:30,column:151}}],line:30},"11":{loc:{start:{line:32,column:136},end:{line:32,column:166}},type:"binary-expr",locations:[{start:{line:32,column:136},end:{line:32,column:157}},{start:{line:32,column:161},end:{line:32,column:166}}],line:32},"12":{loc:{start:{line:32,column:200},end:{line:32,column:254}},type:"if",locations:[{start:{line:32,column:200},end:{line:32,column:254}},{start:{line:32,column:200},end:{line:32,column:254}}],line:32},"13":{loc:{start:{line:34,column:62},end:{line:34,column:131}},type:"if",locations:[{start:{line:34,column:62},end:{line:34,column:131}},{start:{line:34,column:62},end:{line:34,column:131}}],line:34},"14":{loc:{start:{line:34,column:132},end:{line:34,column:193}},type:"if",locations:[{start:{line:34,column:132},end:{line:34,column:193}},{start:{line:34,column:132},end:{line:34,column:193}}],line:34},"15":{loc:{start:{line:101,column:9},end:{line:101,column:68}},type:"cond-expr",locations:[{start:{line:101,column:54},end:{line:101,column:64}},{start:{line:101,column:67},end:{line:101,column:68}}],line:101},"16":{loc:{start:{line:101,column:9},end:{line:101,column:51}},type:"binary-expr",locations:[{start:{line:101,column:9},end:{line:101,column:17}},{start:{line:101,column:21},end:{line:101,column:51}}],line:101},"17":{loc:{start:{line:194,column:6},end:{line:197,column:7}},type:"if",locations:[{start:{line:194,column:6},end:{line:197,column:7}},{start:{line:194,column:6},end:{line:197,column:7}}],line:194},"18":{loc:{start:{line:194,column:10},end:{line:194,column:42}},type:"binary-expr",locations:[{start:{line:194,column:10},end:{line:194,column:27}},{start:{line:194,column:31},end:{line:194,column:42}}],line:194},"19":{loc:{start:{line:204,column:6},end:{line:240,column:7}},type:"switch",locations:[{start:{line:205,column:8},end:{line:207,column:16}},{start:{line:209,column:8},end:{line:216,column:16}},{start:{line:218,column:8},end:{line:221,column:16}},{start:{line:223,column:8},end:{line:225,column:16}},{start:{line:227,column:8},end:{line:229,column:16}},{start:{line:231,column:8},end:{line:236,column:16}},{start:{line:238,column:8},end:{line:239,column:16}}],line:204},"20":{loc:{start:{line:242,column:25},end:{line:242,column:62}},type:"binary-expr",locations:[{start:{line:242,column:25},end:{line:242,column:41}},{start:{line:242,column:45},end:{line:242,column:62}}],line:242},"21":{loc:{start:{line:263,column:58},end:{line:263,column:193}},type:"cond-expr",locations:[{start:{line:263,column:135},end:{line:263,column:183}},{start:{line:263,column:186},end:{line:263,column:193}}],line:263},"22":{loc:{start:{line:263,column:58},end:{line:263,column:132}},type:"binary-expr",locations:[{start:{line:263,column:58},end:{line:263,column:92}},{start:{line:263,column:96},end:{line:263,column:132}}],line:263},"23":{loc:{start:{line:265,column:6},end:{line:277,column:7}},type:"if",locations:[{start:{line:265,column:6},end:{line:277,column:7}},{start:{line:265,column:6},end:{line:277,column:7}}],line:265},"24":{loc:{start:{line:265,column:10},end:{line:265,column:84}},type:"binary-expr",locations:[{start:{line:265,column:10},end:{line:265,column:44}},{start:{line:265,column:48},end:{line:265,column:84}}],line:265},"25":{loc:{start:{line:293,column:6},end:{line:303,column:7}},type:"if",locations:[{start:{line:293,column:6},end:{line:303,column:7}},{start:{line:293,column:6},end:{line:303,column:7}}],line:293},"26":{loc:{start:{line:313,column:6},end:{line:316,column:7}},type:"if",locations:[{start:{line:313,column:6},end:{line:316,column:7}},{start:{line:313,column:6},end:{line:316,column:7}}],line:313},"27":{loc:{start:{line:313,column:10},end:{line:313,column:47}},type:"binary-expr",locations:[{start:{line:313,column:10},end:{line:313,column:27}},{start:{line:313,column:31},end:{line:313,column:47}}],line:313},"28":{loc:{start:{line:337,column:27},end:{line:337,column:97}},type:"cond-expr",locations:[{start:{line:337,column:80},end:{line:337,column:92}},{start:{line:337,column:95},end:{line:337,column:97}}],line:337},"29":{loc:{start:{line:337,column:27},end:{line:337,column:77}},type:"binary-expr",locations:[{start:{line:337,column:27},end:{line:337,column:47}},{start:{line:337,column:51},end:{line:337,column:77}}],line:337},"30":{loc:{start:{line:344,column:6},end:{line:354,column:7}},type:"if",locations:[{start:{line:344,column:6},end:{line:354,column:7}},{start:{line:344,column:6},end:{line:354,column:7}}],line:344},"31":{loc:{start:{line:360,column:8},end:{line:397,column:9}},type:"if",locations:[{start:{line:360,column:8},end:{line:397,column:9}},{start:{line:360,column:8},end:{line:397,column:9}}],line:360},"32":{loc:{start:{line:373,column:12},end:{line:377,column:13}},type:"if",locations:[{start:{line:373,column:12},end:{line:377,column:13}},{start:{line:373,column:12},end:{line:377,column:13}}],line:373},"33":{loc:{start:{line:414,column:27},end:{line:414,column:97}},type:"cond-expr",locations:[{start:{line:414,column:80},end:{line:414,column:92}},{start:{line:414,column:95},end:{line:414,column:97}}],line:414},"34":{loc:{start:{line:414,column:27},end:{line:414,column:77}},type:"binary-expr",locations:[{start:{line:414,column:27},end:{line:414,column:47}},{start:{line:414,column:51},end:{line:414,column:77}}],line:414},"35":{loc:{start:{line:424,column:10},end:{line:427,column:11}},type:"if",locations:[{start:{line:424,column:10},end:{line:427,column:11}},{start:{line:424,column:10},end:{line:427,column:11}}],line:424},"36":{loc:{start:{line:447,column:10},end:{line:463,column:11}},type:"if",locations:[{start:{line:447,column:10},end:{line:463,column:11}},{start:{line:447,column:10},end:{line:463,column:11}}],line:447},"37":{loc:{start:{line:480,column:25},end:{line:480,column:75}},type:"cond-expr",locations:[{start:{line:480,column:42},end:{line:480,column:56}},{start:{line:480,column:59},end:{line:480,column:75}}],line:480},"38":{loc:{start:{line:488,column:8},end:{line:494,column:9}},type:"if",locations:[{start:{line:488,column:8},end:{line:494,column:9}},{start:{line:488,column:8},end:{line:494,column:9}}],line:488},"39":{loc:{start:{line:488,column:12},end:{line:488,column:174}},type:"binary-expr",locations:[{start:{line:488,column:12},end:{line:488,column:56}},{start:{line:488,column:60},end:{line:488,column:105}},{start:{line:488,column:109},end:{line:488,column:156}},{start:{line:488,column:160},end:{line:488,column:174}}],line:488},"40":{loc:{start:{line:489,column:10},end:{line:493,column:11}},type:"if",locations:[{start:{line:489,column:10},end:{line:493,column:11}},{start:{line:489,column:10},end:{line:493,column:11}}],line:489},"41":{loc:{start:{line:496,column:8},end:{line:502,column:9}},type:"if",locations:[{start:{line:496,column:8},end:{line:502,column:9}},{start:{line:496,column:8},end:{line:502,column:9}}],line:496},"42":{loc:{start:{line:496,column:12},end:{line:496,column:178}},type:"binary-expr",locations:[{start:{line:496,column:12},end:{line:496,column:56}},{start:{line:496,column:60},end:{line:496,column:107}},{start:{line:496,column:111},end:{line:496,column:159}},{start:{line:496,column:163},end:{line:496,column:178}}],line:496},"43":{loc:{start:{line:497,column:10},end:{line:501,column:11}},type:"if",locations:[{start:{line:497,column:10},end:{line:501,column:11}},{start:{line:497,column:10},end:{line:501,column:11}}],line:497},"44":{loc:{start:{line:546,column:6},end:{line:558,column:7}},type:"if",locations:[{start:{line:546,column:6},end:{line:558,column:7}},{start:{line:546,column:6},end:{line:558,column:7}}],line:546},"45":{loc:{start:{line:547,column:8},end:{line:555,column:9}},type:"if",locations:[{start:{line:547,column:8},end:{line:555,column:9}},{start:{line:547,column:8},end:{line:555,column:9}}],line:547},"46":{loc:{start:{line:572,column:6},end:{line:602,column:7}},type:"if",locations:[{start:{line:572,column:6},end:{line:602,column:7}},{start:{line:572,column:6},end:{line:602,column:7}}],line:572},"47":{loc:{start:{line:572,column:10},end:{line:572,column:187}},type:"binary-expr",locations:[{start:{line:572,column:10},end:{line:572,column:84}},{start:{line:572,column:88},end:{line:572,column:112}},{start:{line:572,column:116},end:{line:572,column:187}}],line:572},"48":{loc:{start:{line:577,column:10},end:{line:588,column:11}},type:"switch",locations:[{start:{line:578,column:12},end:{line:580,column:20}},{start:{line:582,column:12},end:{line:584,column:20}},{start:{line:586,column:12},end:{line:587,column:29}}],line:577},"49":{loc:{start:{line:590,column:10},end:{line:592,column:11}},type:"if",locations:[{start:{line:590,column:10},end:{line:592,column:11}},{start:{line:590,column:10},end:{line:592,column:11}}],line:590},"50":{loc:{start:{line:614,column:6},end:{line:646,column:7}},type:"if",locations:[{start:{line:614,column:6},end:{line:646,column:7}},{start:{line:614,column:6},end:{line:646,column:7}}],line:614},"51":{loc:{start:{line:617,column:8},end:{line:625,column:9}},type:"if",locations:[{start:{line:617,column:8},end:{line:625,column:9}},{start:{line:617,column:8},end:{line:625,column:9}}],line:617},"52":{loc:{start:{line:618,column:10},end:{line:620,column:11}},type:"if",locations:[{start:{line:618,column:10},end:{line:620,column:11}},{start:{line:618,column:10},end:{line:620,column:11}}],line:618},"53":{loc:{start:{line:635,column:8},end:{line:645,column:9}},type:"if",locations:[{start:{line:635,column:8},end:{line:645,column:9}},{start:{line:635,column:8},end:{line:645,column:9}}],line:635},"54":{loc:{start:{line:635,column:12},end:{line:635,column:58}},type:"binary-expr",locations:[{start:{line:635,column:12},end:{line:635,column:19}},{start:{line:635,column:23},end:{line:635,column:58}}],line:635},"55":{loc:{start:{line:637,column:12},end:{line:639,column:13}},type:"if",locations:[{start:{line:637,column:12},end:{line:639,column:13}},{start:{line:637,column:12},end:{line:639,column:13}}],line:637},"56":{loc:{start:{line:659,column:6},end:{line:728,column:7}},type:"if",locations:[{start:{line:659,column:6},end:{line:728,column:7}},{start:{line:659,column:6},end:{line:728,column:7}}],line:659},"57":{loc:{start:{line:659,column:10},end:{line:659,column:96}},type:"binary-expr",locations:[{start:{line:659,column:10},end:{line:659,column:51}},{start:{line:659,column:55},end:{line:659,column:96}}],line:659},"58":{loc:{start:{line:672,column:10},end:{line:692,column:11}},type:"if",locations:[{start:{line:672,column:10},end:{line:692,column:11}},{start:{line:672,column:10},end:{line:692,column:11}}],line:672},"59":{loc:{start:{line:681,column:17},end:{line:692,column:11}},type:"if",locations:[{start:{line:681,column:17},end:{line:692,column:11}},{start:{line:681,column:17},end:{line:692,column:11}}],line:681},"60":{loc:{start:{line:681,column:21},end:{line:681,column:58}},type:"binary-expr",locations:[{start:{line:681,column:21},end:{line:681,column:28}},{start:{line:681,column:32},end:{line:681,column:58}}],line:681},"61":{loc:{start:{line:685,column:12},end:{line:691,column:13}},type:"if",locations:[{start:{line:685,column:12},end:{line:691,column:13}},{start:{line:685,column:12},end:{line:691,column:13}}],line:685},"62":{loc:{start:{line:703,column:12},end:{line:709,column:13}},type:"if",locations:[{start:{line:703,column:12},end:{line:709,column:13}},{start:{line:703,column:12},end:{line:709,column:13}}],line:703},"63":{loc:{start:{line:713,column:8},end:{line:715,column:9}},type:"if",locations:[{start:{line:713,column:8},end:{line:715,column:9}},{start:{line:713,column:8},end:{line:715,column:9}}],line:713},"64":{loc:{start:{line:717,column:8},end:{line:719,column:9}},type:"if",locations:[{start:{line:717,column:8},end:{line:719,column:9}},{start:{line:717,column:8},end:{line:719,column:9}}],line:717},"65":{loc:{start:{line:721,column:8},end:{line:727,column:9}},type:"if",locations:[{start:{line:721,column:8},end:{line:727,column:9}},{start:{line:721,column:8},end:{line:727,column:9}}],line:721},"66":{loc:{start:{line:735,column:6},end:{line:737,column:7}},type:"if",locations:[{start:{line:735,column:6},end:{line:737,column:7}},{start:{line:735,column:6},end:{line:737,column:7}}],line:735},"67":{loc:{start:{line:767,column:13},end:{line:768,column:133}},type:"binary-expr",locations:[{start:{line:767,column:13},end:{line:767,column:20}},{start:{line:767,column:24},end:{line:768,column:133}}],line:767}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0,0],"40":[0,0],"41":[0,0],"42":[0,0,0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/webrtc/PeerConnection.js"],names:["DtlsSrtpKeyAgreement","sdpConstraints","receive","OfferToReceiveAudio","OfferToReceiveVideo","ICE_CONNECTION_STATE_DISCONNECTED","ICE_CONNECTION_STATE_CONNECTED","ICE_CONNECTION_STATE_COMPLETED","ICE_CONNECTION_STATE_CHECKING","ICE_CONNECTION_STATE_CLOSED","ICE_CONNECTION_STATE_FAILED","ICE_CONNECTION_STATE_OTHER","_toJSON","o","toJSON","PeerConnection","stackId","streamId","remote","publish","_localPath","cache","device","_remotePath","negotiated","node","container","pc","RTCPeerConnection","iceServers","config","optional","mandatory","onicecandidate","e","candidate","Log","d","DataSync","push","oniceconnectionstatechange","iceConnectionState","_attachStream","_remoteICECandidates","_getStats","close","isConnected","onicegatheringstatechange","iceGatheringState","_status","OPENED","stats","server","interval","result","socket","emit","Object","assign","id","room","name","ts","Date","local","listen","path","event","on","snap","val","addIceCandidate","RTCIceCandidate","off","remoteStream","Media","attachStream","muted","htmlElement","errorCallbacks","i","peerConnection","getOwnPropertyDescriptor","prototype","ontrack","streams","onaddstream","stream","sdpOffer","sdp","setRemoteDescription","catch","forEach","cb","then","remoteDescription","test","type","createAnswer","bind","Promise","reject","Error","description","_setPreferredCodecs","setLocalDescription","localDescription","_sendSdpToRemote","peerConnections","resolve","sendTimeout","onnegotiationneeded","clearTimeout","setTimeout","_sendOffer","sdpAnswer","_alterStream","remoteUserId","to","from","Device","get","remoteDevice","newSdp","exec","navigator","userAgent","indexOf","replace","descriptionChanged","update","createOffer","method","getTracks","track","getSenders","sender","oldStream","newStream","window","RTCRtpSender","newTracks","kind","getAudioTracks","getVideoTracks","length","replaceTrack","CLOSING","stop","srcObject","removeChild","remove","signalingState","onsignalingstatechange","CLOSED","preferredVideoCodec","preferredAudioCodec","sdpLines","split","medias","audio","video","current","sdpLine","fmt","index","codecs","c","prefer","mediaList","preferedCodec","media","selected","find","codec","concat","filter","ids","join","_socket","_remoteStream"],mappings:"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",sourcesContent:["/* global RTCPeerConnection */\n/* global RTCRtpSender */\nimport SocketIO from 'socket.io-client';\nimport GetStats from 'getstats';\nimport cache from '../util/cache';\nimport * as Log from '../util/Log';\nimport Media from '../util/Media';\nimport Device from '../Device';\nimport * as DataSync from '../util/DataSync';\nimport { CLOSED, CLOSING, OPENED } from '../util/constants';\nimport 'core-js/fn/array/find';\n\nconst DtlsSrtpKeyAgreement = { DtlsSrtpKeyAgreement: true };\nconst sdpConstraints = receive => ({ OfferToReceiveAudio: receive, OfferToReceiveVideo: receive });\n/**\n * ICE connection status : disconnected\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_DISCONNECTED = 'disconnected';\n/**\n * ICE connection status : connected\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_CONNECTED = 'connected';\n/**\n * ICE connection status : completed\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_COMPLETED = 'completed';\n/**\n * ICE connection status : checking\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_CHECKING = 'checking';\n/**\n * ICE connection status : closed\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_CLOSED = 'closed';\n/**\n * ICE connection status : failed\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_FAILED = 'failed';\n/**\n * ICE connection status : another status\n * @constant\n * @type {string}\n */\nconst ICE_CONNECTION_STATE_OTHER = 'other';\n/**\n * @ignore\n */\nconst _toJSON = o => (o.toJSON && typeof o.toJSON === 'function' ? o.toJSON() : o);\n/**\n * The PeerConnection. A PeerConnection will only concern one MediaStream.\n * @class PeerConnection\n */\nexport default class PeerConnection {\n  /**\n   * @access protected\n   * @param {string} stackId The WebRTC stack ID\n   * @param {string} streamId The Stream UID\n   * @param {Remote|{to: string|from: string, device:string}} remote The remote information\n   * @param {boolean} publish Publish or Subscribe ?\n   */\n  constructor(stackId, streamId, remote, publish) {\n    /**\n     * The stack identifier. Used to identify exchanges between 2 devices\n     * @type {string}\n     */\n    this.stackId = stackId;\n    /**\n     * The stream id. (One stream per RTCPeerConnection)\n     * @type {string}\n     */\n    this.streamId = streamId;\n    /**\n     * The remote device\n     * @type {string}\n     */\n    this.remote = remote;\n    /**\n     * publish : a created peer connection or a remote one\n     * @type {boolean}\n     */\n    this.publish = publish;\n    /**\n     * Path for local signalization\n     * @access private\n     * @type {string}\n     */\n    this._localPath = `_/webrtc/${this.stackId}/${this.streamId}/${cache.device}`;\n    /**\n     * Path for local signalization\n     * @access private\n     * @type {string}\n     */\n    this._remotePath = `_/webrtc/${this.stackId}/${this.streamId}/${this.remote.device}`;\n    /**\n     * Indicates if the PeerConnection has been established. (Useful for renegotiation).\n     * @type {boolean}\n     */\n    this.negotiated = false;\n    /**\n     * The DOM element where the remote MediaStream will be displayed\n     * @type {Element}\n     * @protected\n     */\n    this.node = null;\n    /**\n     * The DOM element containg the media element\n     * @type {Element}\n     * @protected\n     */\n    this.container = null;\n    /**\n     * The actual RTCPeerConnection\n     * @type {RTCPeerConnection}\n     */\n    this.pc = new RTCPeerConnection(\n      {\n        iceServers: cache.config.iceServers\n      },\n      {\n        optional: [DtlsSrtpKeyAgreement],\n        mandatory: sdpConstraints(!publish)\n      }\n    );\n    // Handle ICE candidates\n    this.pc.onicecandidate = (e) => {\n      if (!this.negotiated && e.candidate) {\n        Log.d('PeerConnection~onicecandidate', e.candidate);\n        DataSync.push(`${this._localPath}/ice`, _toJSON(e.candidate));\n      }\n    };\n    this.pc.oniceconnectionstatechange = () => {\n      Log.d('PeerConnection~oniceconnectionstatechange', this.pc);\n      const { iceConnectionState } = this.pc;\n      switch (iceConnectionState) {\n        case ICE_CONNECTION_STATE_CHECKING:\n          // Nothing to do yet\n          break;\n        case ICE_CONNECTION_STATE_CONNECTED:\n          this._attachStream();\n          this._remoteICECandidates(false);\n          this._getStats();\n          break;\n        case ICE_CONNECTION_STATE_COMPLETED:\n          this._remoteICECandidates(false);\n          break;\n        case ICE_CONNECTION_STATE_FAILED:\n          Log.e('PeerConnection~stateFailed', 'Failed PeerConnection');\n          break;\n        case ICE_CONNECTION_STATE_DISCONNECTED:\n          Log.e('PeerConnection~stateDisconnected', 'Disconnect PeerConnection');\n          break;\n        case ICE_CONNECTION_STATE_CLOSED:\n          Log.d('PeerConnection~stateclosed', 'Close PeerConnection');\n          this.close();\n          break;\n        default:\n          break;\n      }\n      this.negotiated = this.negotiated || this.isConnected;\n    };\n\n    this.pc.onicegatheringstatechange = () => {\n      Log.d('PeerConnection~onicegatheringstatechange', this.pc.iceGatheringState);\n    };\n\n    /**\n     * PeerConnection status\n     * @type {string}\n     * @private\n     */\n    this._status = OPENED;\n  }\n\n  _getStats() {\n    Log.d('PeerConnection~getStats',\n      `enable : ${cache.config.stats.server && cache.config.stats.interval\n        ? `to ${cache.config.stats.server}`\n        : 'false'}`);\n    if (cache.config.stats.server && cache.config.stats.interval) {\n      // this._socket = SocketIO(cache.config.stats.server);\n      GetStats(this.pc, (result) => {\n        this.socket.emit('stats', Object.assign({\n          id: this.streamId,\n          publish: this.publish,\n          room: cache.room.name,\n          ts: new Date(),\n          local: cache.device,\n          remote: this.remote.device\n        }, result));\n      }, cache.config.stats.interval);\n    }\n  }\n\n  get socket() {\n    if (!this._socket) {\n      this._socket = SocketIO(cache.config.stats.server);\n    }\n    return this._socket;\n  }\n\n  /**\n   * Toggle ICE Candidates discovery\n   * @access private\n   * @param {boolean} listen Indicates if we should listen to new ICE candidates\n   */\n  _remoteICECandidates(listen) {\n    const\n      path = `${this._remotePath}/ice`;\n\n\n    const event = 'child_added';\n    if (listen) {\n      // don't listen to ice candidates if pc is already up (renegotiation)\n      DataSync.on(path, event, (snap) => {\n        const candidate = snap.val();\n        Log.d('PeerConnection~addIceCandidate', candidate);\n        this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n      });\n    } else {\n      DataSync.off(path, event);\n    }\n  }\n\n  /**\n   * Attach the remote MediaStream to a node\n   * @access private\n   */\n  _attachStream() {\n    if (this.remoteStream && this.isConnected) {\n      this.node = Media.attachStream(this.remoteStream, this.container, this.node);\n      this.node.muted = false;\n    }\n  }\n\n  /**\n   * The remote MediaStream\n   * @access protected\n   * @type {MediaStream}\n   */\n  set remoteStream(stream) {\n    /**\n     * @ignore\n     */\n    this._remoteStream = stream;\n    this._attachStream();\n  }\n\n  /**\n   * The remote MediaStream\n   * @type {MediaStream}\n   */\n  get remoteStream() {\n    return this._remoteStream;\n  }\n\n  /**\n   * Indicates if the PeerConnection is established based on ICE connection state\n   * @returns {boolean}\n   */\n  get isConnected() {\n    return this.pc\n      && !!~[ // eslint-disable-line no-bitwise\n        ICE_CONNECTION_STATE_CONNECTED,\n        ICE_CONNECTION_STATE_COMPLETED,\n        ICE_CONNECTION_STATE_OTHER\n      ].indexOf(this.pc.iceConnectionState);\n  }\n\n  /**\n   * Init RTCPeerConnection for subscribers\n   * @access protected\n   * @param htmlElement\n   * @param errorCallbacks\n   * @returns {Promise.<PeerConnection>}\n   */\n  answer(htmlElement, errorCallbacks = []) {\n    Log.i('PeerConnection~answer', { htmlElement, peerConnection: this });\n    this.container = htmlElement;\n    if (Object.getOwnPropertyDescriptor(RTCPeerConnection.prototype, 'ontrack')) {\n      this.pc.ontrack = (e) => {\n        Log.d('PeerConnection~ontrack', e.streams[0]);\n        this.remoteStream = e.streams[0]; // eslint-disable-line prefer-destructuring\n      };\n    } else {\n      this.pc.onaddstream = (e) => {\n        Log.d('PeerConnection~onaddstream', e.stream);\n        this.remoteStream = e.stream;\n      };\n    }\n\n    // Listen to SDP offer\n    DataSync.on(`${this._remotePath}/sdp`, 'value', (snap) => {\n      const sdpOffer = snap.val();\n      // Log.d('Offer', sdpOffer);\n      if (sdpOffer != null) {\n        Log.d(`PeerConnection~offered ${sdpOffer.sdp}`);\n        this.pc.setRemoteDescription(sdpOffer)\n          .catch((e) => {\n            Log.e('PeerConnection~answer#remoteDescription Error', e);\n            errorCallbacks.forEach((cb) => {\n              Log.d('PeerConnection~answer#remoteDescription Error callback', e);\n              cb(e);\n            });\n            return e;\n            // cache.peerConnections.close(this.streamId, this.remote.device);\n          })\n          .then(() => Log.d('PeerConnection~answer#remoteDescription', this.pc.remoteDescription.sdp))\n          .then(() => {\n            if (/^offer$/.test(this.pc.remoteDescription.type)) {\n              return this.pc.createAnswer()\n                .catch(e => Log.d.bind(Log, 'PeerConnections~answer#createAnswer', e));\n            }\n            return Promise.reject(new Error('SDP is not an offer'));\n          })\n          .then(description => this._setPreferredCodecs(description))\n          .then(description => this.pc.setLocalDescription(description))\n          .catch(e => Log.d.bind(Log, 'PeerConnections~answer#setLocalDescription', e))\n          .then(() => {\n            Log.d('PeerConnection~answer#localSDP', this.pc.localDescription.sdp);\n            this._remoteICECandidates(true);\n          })\n          .then(() => this._sendSdpToRemote())\n          // .catch(Log.r('PeerConnection~answser#error'));\n          .catch(() => {\n            // this.close();\n            cache.peerConnections.close(this.streamId, this.remote.device);\n          });\n      }\n    });\n\n    return Promise.resolve(this);\n  }\n\n  /**\n   * Init RTCPeerConnection for publishers\n   * @access protected\n   * @param stream\n   * @param errorCallbacks\n   * @returns {Promise.<PeerConnection>}\n   */\n  offer(stream, errorCallbacks = []) {\n    Log.i('PeerConnection~offer', { stream, peerConnection: this });\n    let sendTimeout;\n    return new Promise((resolve, reject) => {\n      this.pc.onnegotiationneeded = () => {\n        Log.d('PeerConnection~onnegotiationneeded');\n        // Debounce send (renegotiation triggers multiple negotiationneeded events)\n        if (sendTimeout) {\n          clearTimeout(sendTimeout);\n          sendTimeout = null;\n        }\n        sendTimeout = setTimeout(() => {\n          sendTimeout = null;\n          this._sendOffer()\n            .catch((e) => {\n              Log.d('PeerConnection~offer', e);\n              errorCallbacks.forEach(cb => cb(e));\n              reject(e);\n            })\n            .then(() => {\n              resolve(this);\n            });\n        }, 20);\n      };\n      DataSync.on(`${this._remotePath}/sdp`, 'value', (snap) => {\n        const sdpAnswer = snap.val();\n        if (sdpAnswer != null) {\n          Log.d(`PeerConnection~offer#answered ${sdpAnswer.sdp}`);\n          this.pc.setRemoteDescription(sdpAnswer)\n            .catch((e) => {\n              errorCallbacks.forEach(cb => cb(e));\n              cache.peerConnections.close(this.streamId, this.remote.device);\n              Log.e.bind(Log, 'PeerConnection~offer#remoteDescription');\n            })\n            .then(() => {\n              Log.d('PeerConnection~offer#remoteDescription', this.pc.remoteDescription.sdp);\n              this._remoteICECandidates(true);\n            });\n        }\n      });\n      this._alterStream(stream, 'add');\n    });\n  }\n\n  /**\n   * Send SDP offer to the remote via DataSync\n   * @private\n   */\n  _sendSdpToRemote() {\n    // Log.d('PeerConnection~_sendSdpToRemote#localSDP', this.pc.localDescription.sdp);\n    const remoteUserId = this.remote.to ? this.remote.to : this.remote.from;\n    Device.get(remoteUserId, this.remote.device)\n      .then((remoteDevice) => {\n        const sdpOffer = this.pc.localDescription.sdp;\n        let newSdp = sdpOffer;\n        const local = /Chrome\\/([0-9]+)/.exec(navigator.userAgent);\n        const remote = /Chrome\\/([0-9]+)/.exec(remoteDevice.userAgent);\n\n        if (navigator.userAgent.indexOf('Chrome') !== -1\n          && navigator.userAgent.indexOf('Android') !== -1\n          && remoteDevice.userAgent.indexOf('Safari') !== -1\n          && local[1] <= 64) {\n          if (local[1] <= 60) {\n            newSdp = newSdp.replace(/;profile-level-id=([a-z0-9]+)/, '');\n          } else {\n            newSdp = newSdp.replace('42001f', '42e01f');\n          }\n        }\n        if (navigator.userAgent.indexOf('Safari') !== -1\n          && remoteDevice.userAgent.indexOf('Chrome') !== -1\n          && remoteDevice.userAgent.indexOf('Android') !== -1\n          && remote[1] <= 64) {\n          if (remote[1] <= 60) {\n            newSdp = newSdp.replace(/;profile-level-id=([a-z0-9]+)/, '');\n          } else {\n            newSdp = newSdp.replace('42e01f', '42001f');\n          }\n        }\n        Log.d(`PeerConnection~_sendSdpToRemote#SDP sent to remote ${newSdp}`);\n        const descriptionChanged = {\n          sdp: newSdp,\n          type: this.pc.localDescription.type\n        };\n        DataSync.update(`${this._localPath}/sdp`, _toJSON(descriptionChanged));\n      });\n  }\n\n  /**\n   * Create SDP offer and push it\n   * @returns {Promise}\n   * @private\n   */\n  _sendOffer() {\n    Log.d('PeerConnection~_sendOffer');\n    return this.pc.createOffer()\n      .then(description => this._setPreferredCodecs(description))\n      .then(description => this.pc.setLocalDescription(description))\n      .then(() => Log.d('PeerConnection~_sendOffer#localDescription', this.pc.localDescription.sdp))\n      .then(() => this._sendSdpToRemote());\n  }\n\n  /**\n   * Add/Remove tracks to the PeerConnection stream\n   * @param {MediaStream} stream\n   * @param {string} method\n   * @private\n   */\n  _alterStream(stream, method) {\n    if (Object.getOwnPropertyDescriptor(RTCPeerConnection.prototype, `${method}Track`)) {\n      if (method === 'add') {\n        stream.getTracks().forEach(track => this.pc[`${method}Track`](track, stream), this);\n      } else {\n        this.pc.getSenders().forEach(sender => this.pc[`${method}Track`](sender), this);\n      }\n    } else {\n      this.pc[`${method}Stream`](stream);\n    }\n  }\n\n  /**\n   * Restart SDP negotiation following a MediaStream change\n   * @access protected\n   * @param {MediaStream} oldStream\n   * @param {MediaStream} newStream\n   */\n  renegotiate(oldStream, newStream) {\n    Log.d('PeerConnection~renegotiate');\n    if ((Object.getOwnPropertyDescriptor(RTCPeerConnection.prototype, 'getSenders'))\n      && ('RTCRtpSender' in window)\n      && Object.getOwnPropertyDescriptor(RTCRtpSender.prototype, 'replaceTrack')) {\n      // mozRTCPeerConnection implementation\n      this.pc.getSenders().forEach((sender) => {\n        let newTracks;\n        switch (sender.track.kind) {\n          case 'audio':\n            newTracks = newStream.getAudioTracks();\n            break;\n          case 'video':\n            newTracks = newStream.getVideoTracks();\n            break;\n          default:\n            newTracks = [];\n        }\n        if (newTracks.length) {\n          sender.replaceTrack(newTracks[0]);\n        }\n      });\n      this._sendOffer()\n        .catch((e) => {\n          Log.d('PeerConnection~renegotiate', e);\n        });\n    } else {\n      this._alterStream(oldStream, 'remove');\n      this._alterStream(newStream, 'add');\n    }\n  }\n\n  /**\n   * Close the PeerConnection and stop listening to SDP messages\n   * @access protected\n   */\n  close() {\n    if (this._status === OPENED) {\n      this._status = CLOSING;\n      // Stop display\n      if (this.node) {\n        if (this.node.stop) {\n          this.node.stop();\n        }\n        this.node.srcObject = null;\n        this.container.removeChild(this.node);\n        this.node = null;\n      }\n      // Stop listening to remote ICE candidates\n      this._remoteICECandidates(false);\n      // Stop listening to SDP messages\n      DataSync.off(`${this._remotePath}/sdp`, 'value');\n      // Remove data\n      DataSync.remove(this._localPath);\n      // Close PeerConnection\n      if (this.pc && this.pc.signalingState !== 'closed') {\n        this.pc.onsignalingstatechange = () => {\n          if (this.pc.signalingState !== 'closed') {\n            this._status = CLOSED;\n          }\n        };\n        this.pc.close();\n      } else {\n        this._status = CLOSED;\n      }\n    }\n  }\n\n  /**\n   * Edits the SDP to set the preferred audio/video codec\n   * @access private\n   * @param {RTCSessionDescription} description\n   * The description retrieved by createOffer/createAnswer\n   * @returns {RTCSessionDescription|{sdp: string, type: string}}\n   */\n  _setPreferredCodecs(description) {\n    if (cache.config.preferredVideoCodec || cache.config.preferredAudioCodec) {\n      Log.d('PeerConnection~_setPreferredCodecs', { description, config: cache.config });\n      const sdpLines = description.sdp.split(/\\r?\\n/);\n      const medias = { audio: [], video: [] };\n      let current = null;\n      // Parse SDP\n      sdpLines.forEach((sdpLine, i) => {\n        if (/^m=/.test(sdpLine)) {\n          // eslint-disable-next-line no-useless-escape\n          const d = /^m=(\\w+)\\s[0-9\\/]+\\s[A-Za-z0-9\\/]+\\s([0-9\\s]+)/.exec(sdpLine);\n          current = {\n            fmt: d[2].split(/\\s/),\n            index: i,\n            codecs: []\n          };\n          medias[d[1]].push(current);\n        } else if (current && /^a=rtpmap:/.test(sdpLine)) {\n          // eslint-disable-next-line no-useless-escape\n          const c = /^a=rtpmap:(\\d+)\\s([a-zA-Z0-9\\-\\/]+)/.exec(sdpLine);\n          if (c) {\n            current.codecs.push({\n              id: c[1],\n              name: c[2],\n              index: i\n            });\n          }\n        }\n      });\n      Log.d('PeerConnection~_setPreferredCodecs', medias);\n      let update = false;\n      const prefer = (mediaList, preferedCodec) => {\n        mediaList.forEach((media) => {\n          const selected = media.codecs.find(codec => preferedCodec.test(codec.name));\n          if (selected) {\n            const fmt = [selected.id].concat(media.fmt.filter(ids => ids !== selected.id));\n            sdpLines[media.index] = sdpLines[media.index].replace(media.fmt.join(' '),\n              fmt.join(' '));\n            update = true;\n          }\n        });\n      };\n      if (cache.config.preferredVideoCodec) {\n        prefer(medias.video, cache.config.preferredVideoCodec);\n      }\n      if (cache.config.preferredAudioCodec) {\n        prefer(medias.audio, cache.config.preferredAudioCodec);\n      }\n      if (update) {\n        Log.d('PeerConnection~_setPreferredCodecs', sdpLines.join('\\r\\n'));\n        return {\n          sdp: sdpLines.join('\\r\\n'),\n          type: description.type\n        };\n      }\n    }\n    return description;\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_2o397libkm.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2o397libkm.s[1]++;exports.default=void 0;var _socket=(cov_2o397libkm.s[2]++,_interopRequireDefault(__webpack_require__(/*! socket.io-client */ "./node_modules/socket.io-client/lib/index.js")));var _getstats=(cov_2o397libkm.s[3]++,_interopRequireDefault(__webpack_require__(/*! getstats */ "./node_modules/getstats/getStats.js")));var _cache=(cov_2o397libkm.s[4]++,_interopRequireDefault(__webpack_require__(/*! ../util/cache */ "./src/core/util/cache.js")));var Log=(cov_2o397libkm.s[5]++,_interopRequireWildcard(__webpack_require__(/*! ../util/Log */ "./src/core/util/Log.js")));var _Media=(cov_2o397libkm.s[6]++,_interopRequireDefault(__webpack_require__(/*! ../util/Media */ "./src/core/util/Media.js")));var _Device=(cov_2o397libkm.s[7]++,_interopRequireDefault(__webpack_require__(/*! ../Device */ "./src/core/Device.js")));var DataSync=(cov_2o397libkm.s[8]++,_interopRequireWildcard(__webpack_require__(/*! ../util/DataSync */ "./src/core/util/DataSync.js")));var _constants=(cov_2o397libkm.s[9]++,__webpack_require__(/*! ../util/constants */ "./src/core/util/constants.js"));cov_2o397libkm.s[10]++;__webpack_require__(/*! core-js/fn/array/find */ "./node_modules/core-js/fn/array/find.js");function _interopRequireWildcard(obj){cov_2o397libkm.f[0]++;cov_2o397libkm.s[11]++;if((cov_2o397libkm.b[1][0]++,obj)&&(cov_2o397libkm.b[1][1]++,obj.__esModule)){cov_2o397libkm.b[0][0]++;cov_2o397libkm.s[12]++;return obj;}else{cov_2o397libkm.b[0][1]++;var newObj=(cov_2o397libkm.s[13]++,{});cov_2o397libkm.s[14]++;if(obj!=null){cov_2o397libkm.b[2][0]++;cov_2o397libkm.s[15]++;for(var key in obj){cov_2o397libkm.s[16]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_2o397libkm.b[3][0]++;var desc=(cov_2o397libkm.s[17]++,(cov_2o397libkm.b[5][0]++,Object.defineProperty)&&(cov_2o397libkm.b[5][1]++,Object.getOwnPropertyDescriptor)?(cov_2o397libkm.b[4][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_2o397libkm.b[4][1]++,{}));cov_2o397libkm.s[18]++;if((cov_2o397libkm.b[7][0]++,desc.get)||(cov_2o397libkm.b[7][1]++,desc.set)){cov_2o397libkm.b[6][0]++;cov_2o397libkm.s[19]++;Object.defineProperty(newObj,key,desc);}else{cov_2o397libkm.b[6][1]++;cov_2o397libkm.s[20]++;newObj[key]=obj[key];}}else{cov_2o397libkm.b[3][1]++;}}}else{cov_2o397libkm.b[2][1]++;}cov_2o397libkm.s[21]++;newObj.default=obj;cov_2o397libkm.s[22]++;return newObj;}}function _interopRequireDefault(obj){cov_2o397libkm.f[1]++;cov_2o397libkm.s[23]++;return(cov_2o397libkm.b[9][0]++,obj)&&(cov_2o397libkm.b[9][1]++,obj.__esModule)?(cov_2o397libkm.b[8][0]++,obj):(cov_2o397libkm.b[8][1]++,{default:obj});}function _classCallCheck(instance,Constructor){cov_2o397libkm.f[2]++;cov_2o397libkm.s[24]++;if(!(instance instanceof Constructor)){cov_2o397libkm.b[10][0]++;cov_2o397libkm.s[25]++;throw new TypeError("Cannot call a class as a function");}else{cov_2o397libkm.b[10][1]++;}}function _defineProperties(target,props){cov_2o397libkm.f[3]++;cov_2o397libkm.s[26]++;for(var i=0;i<props.length;i++){var descriptor=(cov_2o397libkm.s[27]++,props[i]);cov_2o397libkm.s[28]++;descriptor.enumerable=(cov_2o397libkm.b[11][0]++,descriptor.enumerable)||(cov_2o397libkm.b[11][1]++,false);cov_2o397libkm.s[29]++;descriptor.configurable=true;cov_2o397libkm.s[30]++;if("value"in descriptor){cov_2o397libkm.b[12][0]++;cov_2o397libkm.s[31]++;descriptor.writable=true;}else{cov_2o397libkm.b[12][1]++;}cov_2o397libkm.s[32]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_2o397libkm.f[4]++;cov_2o397libkm.s[33]++;if(protoProps){cov_2o397libkm.b[13][0]++;cov_2o397libkm.s[34]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_2o397libkm.b[13][1]++;}cov_2o397libkm.s[35]++;if(staticProps){cov_2o397libkm.b[14][0]++;cov_2o397libkm.s[36]++;_defineProperties(Constructor,staticProps);}else{cov_2o397libkm.b[14][1]++;}cov_2o397libkm.s[37]++;return Constructor;}var DtlsSrtpKeyAgreement=(cov_2o397libkm.s[38]++,{DtlsSrtpKeyAgreement:true});cov_2o397libkm.s[39]++;var sdpConstraints=function sdpConstraints(receive){cov_2o397libkm.f[5]++;cov_2o397libkm.s[40]++;return{OfferToReceiveAudio:receive,OfferToReceiveVideo:receive};};var ICE_CONNECTION_STATE_DISCONNECTED=(cov_2o397libkm.s[41]++,'disconnected');var ICE_CONNECTION_STATE_CONNECTED=(cov_2o397libkm.s[42]++,'connected');var ICE_CONNECTION_STATE_COMPLETED=(cov_2o397libkm.s[43]++,'completed');var ICE_CONNECTION_STATE_CHECKING=(cov_2o397libkm.s[44]++,'checking');var ICE_CONNECTION_STATE_CLOSED=(cov_2o397libkm.s[45]++,'closed');var ICE_CONNECTION_STATE_FAILED=(cov_2o397libkm.s[46]++,'failed');var ICE_CONNECTION_STATE_OTHER=(cov_2o397libkm.s[47]++,'other');cov_2o397libkm.s[48]++;var _toJSON=function _toJSON(o){cov_2o397libkm.f[6]++;cov_2o397libkm.s[49]++;return(cov_2o397libkm.b[16][0]++,o.toJSON)&&(cov_2o397libkm.b[16][1]++,typeof o.toJSON==='function')?(cov_2o397libkm.b[15][0]++,o.toJSON()):(cov_2o397libkm.b[15][1]++,o);};var PeerConnection=(cov_2o397libkm.s[50]++,function(){cov_2o397libkm.f[7]++;function PeerConnection(stackId,streamId,remote,publish){cov_2o397libkm.f[8]++;var _this=(cov_2o397libkm.s[51]++,this);cov_2o397libkm.s[52]++;_classCallCheck(this,PeerConnection);cov_2o397libkm.s[53]++;this.stackId=stackId;cov_2o397libkm.s[54]++;this.streamId=streamId;cov_2o397libkm.s[55]++;this.remote=remote;cov_2o397libkm.s[56]++;this.publish=publish;cov_2o397libkm.s[57]++;this._localPath="_/webrtc/".concat(this.stackId,"/").concat(this.streamId,"/").concat(_cache.default.device);cov_2o397libkm.s[58]++;this._remotePath="_/webrtc/".concat(this.stackId,"/").concat(this.streamId,"/").concat(this.remote.device);cov_2o397libkm.s[59]++;this.negotiated=false;cov_2o397libkm.s[60]++;this.node=null;cov_2o397libkm.s[61]++;this.container=null;cov_2o397libkm.s[62]++;this.pc=new RTCPeerConnection({iceServers:_cache.default.config.iceServers},{optional:[DtlsSrtpKeyAgreement],mandatory:sdpConstraints(!publish)});cov_2o397libkm.s[63]++;this.pc.onicecandidate=function(e){cov_2o397libkm.f[9]++;cov_2o397libkm.s[64]++;if((cov_2o397libkm.b[18][0]++,!_this.negotiated)&&(cov_2o397libkm.b[18][1]++,e.candidate)){cov_2o397libkm.b[17][0]++;cov_2o397libkm.s[65]++;Log.d('PeerConnection~onicecandidate',e.candidate);cov_2o397libkm.s[66]++;DataSync.push("".concat(_this._localPath,"/ice"),_toJSON(e.candidate));}else{cov_2o397libkm.b[17][1]++;}};cov_2o397libkm.s[67]++;this.pc.oniceconnectionstatechange=function(){cov_2o397libkm.f[10]++;cov_2o397libkm.s[68]++;Log.d('PeerConnection~oniceconnectionstatechange',_this.pc);var iceConnectionState=(cov_2o397libkm.s[69]++,_this.pc.iceConnectionState);cov_2o397libkm.s[70]++;switch(iceConnectionState){case ICE_CONNECTION_STATE_CHECKING:cov_2o397libkm.b[19][0]++;cov_2o397libkm.s[71]++;break;case ICE_CONNECTION_STATE_CONNECTED:cov_2o397libkm.b[19][1]++;cov_2o397libkm.s[72]++;_this._attachStream();cov_2o397libkm.s[73]++;_this._remoteICECandidates(false);cov_2o397libkm.s[74]++;_this._getStats();cov_2o397libkm.s[75]++;break;case ICE_CONNECTION_STATE_COMPLETED:cov_2o397libkm.b[19][2]++;cov_2o397libkm.s[76]++;_this._remoteICECandidates(false);cov_2o397libkm.s[77]++;break;case ICE_CONNECTION_STATE_FAILED:cov_2o397libkm.b[19][3]++;cov_2o397libkm.s[78]++;Log.e('PeerConnection~stateFailed','Failed PeerConnection');cov_2o397libkm.s[79]++;break;case ICE_CONNECTION_STATE_DISCONNECTED:cov_2o397libkm.b[19][4]++;cov_2o397libkm.s[80]++;Log.e('PeerConnection~stateDisconnected','Disconnect PeerConnection');cov_2o397libkm.s[81]++;break;case ICE_CONNECTION_STATE_CLOSED:cov_2o397libkm.b[19][5]++;cov_2o397libkm.s[82]++;Log.d('PeerConnection~stateclosed','Close PeerConnection');cov_2o397libkm.s[83]++;_this.close();cov_2o397libkm.s[84]++;break;default:cov_2o397libkm.b[19][6]++;cov_2o397libkm.s[85]++;break;}cov_2o397libkm.s[86]++;_this.negotiated=(cov_2o397libkm.b[20][0]++,_this.negotiated)||(cov_2o397libkm.b[20][1]++,_this.isConnected);};cov_2o397libkm.s[87]++;this.pc.onicegatheringstatechange=function(){cov_2o397libkm.f[11]++;cov_2o397libkm.s[88]++;Log.d('PeerConnection~onicegatheringstatechange',_this.pc.iceGatheringState);};cov_2o397libkm.s[89]++;this._status=_constants.OPENED;}cov_2o397libkm.s[90]++;_createClass(PeerConnection,[{key:"_getStats",value:function _getStats(){cov_2o397libkm.f[12]++;var _this2=(cov_2o397libkm.s[91]++,this);cov_2o397libkm.s[92]++;Log.d('PeerConnection~getStats',"enable : ".concat((cov_2o397libkm.b[22][0]++,_cache.default.config.stats.server)&&(cov_2o397libkm.b[22][1]++,_cache.default.config.stats.interval)?(cov_2o397libkm.b[21][0]++,"to ".concat(_cache.default.config.stats.server)):(cov_2o397libkm.b[21][1]++,'false')));cov_2o397libkm.s[93]++;if((cov_2o397libkm.b[24][0]++,_cache.default.config.stats.server)&&(cov_2o397libkm.b[24][1]++,_cache.default.config.stats.interval)){cov_2o397libkm.b[23][0]++;cov_2o397libkm.s[94]++;(0,_getstats.default)(this.pc,function(result){cov_2o397libkm.f[13]++;cov_2o397libkm.s[95]++;_this2.socket.emit('stats',Object.assign({id:_this2.streamId,publish:_this2.publish,room:_cache.default.room.name,ts:new Date(),local:_cache.default.device,remote:_this2.remote.device},result));},_cache.default.config.stats.interval);}else{cov_2o397libkm.b[23][1]++;}}},{key:"_remoteICECandidates",value:function _remoteICECandidates(listen){cov_2o397libkm.f[14]++;var _this3=(cov_2o397libkm.s[96]++,this);var path=(cov_2o397libkm.s[97]++,"".concat(this._remotePath,"/ice"));var event=(cov_2o397libkm.s[98]++,'child_added');cov_2o397libkm.s[99]++;if(listen){cov_2o397libkm.b[25][0]++;cov_2o397libkm.s[100]++;DataSync.on(path,event,function(snap){cov_2o397libkm.f[15]++;var candidate=(cov_2o397libkm.s[101]++,snap.val());cov_2o397libkm.s[102]++;Log.d('PeerConnection~addIceCandidate',candidate);cov_2o397libkm.s[103]++;_this3.pc.addIceCandidate(new RTCIceCandidate(candidate));});}else{cov_2o397libkm.b[25][1]++;cov_2o397libkm.s[104]++;DataSync.off(path,event);}}},{key:"_attachStream",value:function _attachStream(){cov_2o397libkm.f[16]++;cov_2o397libkm.s[105]++;if((cov_2o397libkm.b[27][0]++,this.remoteStream)&&(cov_2o397libkm.b[27][1]++,this.isConnected)){cov_2o397libkm.b[26][0]++;cov_2o397libkm.s[106]++;this.node=_Media.default.attachStream(this.remoteStream,this.container,this.node);cov_2o397libkm.s[107]++;this.node.muted=false;}else{cov_2o397libkm.b[26][1]++;}}},{key:"answer",value:function answer(htmlElement){cov_2o397libkm.f[17]++;var _this4=(cov_2o397libkm.s[108]++,this);var errorCallbacks=(cov_2o397libkm.s[109]++,(cov_2o397libkm.b[29][0]++,arguments.length>1)&&(cov_2o397libkm.b[29][1]++,arguments[1]!==undefined)?(cov_2o397libkm.b[28][0]++,arguments[1]):(cov_2o397libkm.b[28][1]++,[]));cov_2o397libkm.s[110]++;Log.i('PeerConnection~answer',{htmlElement:htmlElement,peerConnection:this});cov_2o397libkm.s[111]++;this.container=htmlElement;cov_2o397libkm.s[112]++;if(Object.getOwnPropertyDescriptor(RTCPeerConnection.prototype,'ontrack')){cov_2o397libkm.b[30][0]++;cov_2o397libkm.s[113]++;this.pc.ontrack=function(e){cov_2o397libkm.f[18]++;cov_2o397libkm.s[114]++;Log.d('PeerConnection~ontrack',e.streams[0]);cov_2o397libkm.s[115]++;_this4.remoteStream=e.streams[0];};}else{cov_2o397libkm.b[30][1]++;cov_2o397libkm.s[116]++;this.pc.onaddstream=function(e){cov_2o397libkm.f[19]++;cov_2o397libkm.s[117]++;Log.d('PeerConnection~onaddstream',e.stream);cov_2o397libkm.s[118]++;_this4.remoteStream=e.stream;};}cov_2o397libkm.s[119]++;DataSync.on("".concat(this._remotePath,"/sdp"),'value',function(snap){cov_2o397libkm.f[20]++;var sdpOffer=(cov_2o397libkm.s[120]++,snap.val());cov_2o397libkm.s[121]++;if(sdpOffer!=null){cov_2o397libkm.b[31][0]++;cov_2o397libkm.s[122]++;Log.d("PeerConnection~offered ".concat(sdpOffer.sdp));cov_2o397libkm.s[123]++;_this4.pc.setRemoteDescription(sdpOffer).catch(function(e){cov_2o397libkm.f[21]++;cov_2o397libkm.s[124]++;Log.e('PeerConnection~answer#remoteDescription Error',e);cov_2o397libkm.s[125]++;errorCallbacks.forEach(function(cb){cov_2o397libkm.f[22]++;cov_2o397libkm.s[126]++;Log.d('PeerConnection~answer#remoteDescription Error callback',e);cov_2o397libkm.s[127]++;cb(e);});cov_2o397libkm.s[128]++;return e;}).then(function(){cov_2o397libkm.f[23]++;cov_2o397libkm.s[129]++;return Log.d('PeerConnection~answer#remoteDescription',_this4.pc.remoteDescription.sdp);}).then(function(){cov_2o397libkm.f[24]++;cov_2o397libkm.s[130]++;if(/^offer$/.test(_this4.pc.remoteDescription.type)){cov_2o397libkm.b[32][0]++;cov_2o397libkm.s[131]++;return _this4.pc.createAnswer().catch(function(e){cov_2o397libkm.f[25]++;cov_2o397libkm.s[132]++;return Log.d.bind(Log,'PeerConnections~answer#createAnswer',e);});}else{cov_2o397libkm.b[32][1]++;}cov_2o397libkm.s[133]++;return Promise.reject(new Error('SDP is not an offer'));}).then(function(description){cov_2o397libkm.f[26]++;cov_2o397libkm.s[134]++;return _this4._setPreferredCodecs(description);}).then(function(description){cov_2o397libkm.f[27]++;cov_2o397libkm.s[135]++;return _this4.pc.setLocalDescription(description);}).catch(function(e){cov_2o397libkm.f[28]++;cov_2o397libkm.s[136]++;return Log.d.bind(Log,'PeerConnections~answer#setLocalDescription',e);}).then(function(){cov_2o397libkm.f[29]++;cov_2o397libkm.s[137]++;Log.d('PeerConnection~answer#localSDP',_this4.pc.localDescription.sdp);cov_2o397libkm.s[138]++;_this4._remoteICECandidates(true);}).then(function(){cov_2o397libkm.f[30]++;cov_2o397libkm.s[139]++;return _this4._sendSdpToRemote();}).catch(function(){cov_2o397libkm.f[31]++;cov_2o397libkm.s[140]++;_cache.default.peerConnections.close(_this4.streamId,_this4.remote.device);});}else{cov_2o397libkm.b[31][1]++;}});cov_2o397libkm.s[141]++;return Promise.resolve(this);}},{key:"offer",value:function offer(stream){cov_2o397libkm.f[32]++;var _this5=(cov_2o397libkm.s[142]++,this);var errorCallbacks=(cov_2o397libkm.s[143]++,(cov_2o397libkm.b[34][0]++,arguments.length>1)&&(cov_2o397libkm.b[34][1]++,arguments[1]!==undefined)?(cov_2o397libkm.b[33][0]++,arguments[1]):(cov_2o397libkm.b[33][1]++,[]));cov_2o397libkm.s[144]++;Log.i('PeerConnection~offer',{stream:stream,peerConnection:this});var sendTimeout;cov_2o397libkm.s[145]++;return new Promise(function(resolve,reject){cov_2o397libkm.f[33]++;cov_2o397libkm.s[146]++;_this5.pc.onnegotiationneeded=function(){cov_2o397libkm.f[34]++;cov_2o397libkm.s[147]++;Log.d('PeerConnection~onnegotiationneeded');cov_2o397libkm.s[148]++;if(sendTimeout){cov_2o397libkm.b[35][0]++;cov_2o397libkm.s[149]++;clearTimeout(sendTimeout);cov_2o397libkm.s[150]++;sendTimeout=null;}else{cov_2o397libkm.b[35][1]++;}cov_2o397libkm.s[151]++;sendTimeout=setTimeout(function(){cov_2o397libkm.f[35]++;cov_2o397libkm.s[152]++;sendTimeout=null;cov_2o397libkm.s[153]++;_this5._sendOffer().catch(function(e){cov_2o397libkm.f[36]++;cov_2o397libkm.s[154]++;Log.d('PeerConnection~offer',e);cov_2o397libkm.s[155]++;errorCallbacks.forEach(function(cb){cov_2o397libkm.f[37]++;cov_2o397libkm.s[156]++;return cb(e);});cov_2o397libkm.s[157]++;reject(e);}).then(function(){cov_2o397libkm.f[38]++;cov_2o397libkm.s[158]++;resolve(_this5);});},20);};cov_2o397libkm.s[159]++;DataSync.on("".concat(_this5._remotePath,"/sdp"),'value',function(snap){cov_2o397libkm.f[39]++;var sdpAnswer=(cov_2o397libkm.s[160]++,snap.val());cov_2o397libkm.s[161]++;if(sdpAnswer!=null){cov_2o397libkm.b[36][0]++;cov_2o397libkm.s[162]++;Log.d("PeerConnection~offer#answered ".concat(sdpAnswer.sdp));cov_2o397libkm.s[163]++;_this5.pc.setRemoteDescription(sdpAnswer).catch(function(e){cov_2o397libkm.f[40]++;cov_2o397libkm.s[164]++;errorCallbacks.forEach(function(cb){cov_2o397libkm.f[41]++;cov_2o397libkm.s[165]++;return cb(e);});cov_2o397libkm.s[166]++;_cache.default.peerConnections.close(_this5.streamId,_this5.remote.device);cov_2o397libkm.s[167]++;Log.e.bind(Log,'PeerConnection~offer#remoteDescription');}).then(function(){cov_2o397libkm.f[42]++;cov_2o397libkm.s[168]++;Log.d('PeerConnection~offer#remoteDescription',_this5.pc.remoteDescription.sdp);cov_2o397libkm.s[169]++;_this5._remoteICECandidates(true);});}else{cov_2o397libkm.b[36][1]++;}});cov_2o397libkm.s[170]++;_this5._alterStream(stream,'add');});}},{key:"_sendSdpToRemote",value:function _sendSdpToRemote(){cov_2o397libkm.f[43]++;var _this6=(cov_2o397libkm.s[171]++,this);var remoteUserId=(cov_2o397libkm.s[172]++,this.remote.to?(cov_2o397libkm.b[37][0]++,this.remote.to):(cov_2o397libkm.b[37][1]++,this.remote.from));cov_2o397libkm.s[173]++;_Device.default.get(remoteUserId,this.remote.device).then(function(remoteDevice){cov_2o397libkm.f[44]++;var sdpOffer=(cov_2o397libkm.s[174]++,_this6.pc.localDescription.sdp);var newSdp=(cov_2o397libkm.s[175]++,sdpOffer);var local=(cov_2o397libkm.s[176]++,/Chrome\/([0-9]+)/.exec(navigator.userAgent));var remote=(cov_2o397libkm.s[177]++,/Chrome\/([0-9]+)/.exec(remoteDevice.userAgent));cov_2o397libkm.s[178]++;if((cov_2o397libkm.b[39][0]++,navigator.userAgent.indexOf('Chrome')!==-1)&&(cov_2o397libkm.b[39][1]++,navigator.userAgent.indexOf('Android')!==-1)&&(cov_2o397libkm.b[39][2]++,remoteDevice.userAgent.indexOf('Safari')!==-1)&&(cov_2o397libkm.b[39][3]++,local[1]<=64)){cov_2o397libkm.b[38][0]++;cov_2o397libkm.s[179]++;if(local[1]<=60){cov_2o397libkm.b[40][0]++;cov_2o397libkm.s[180]++;newSdp=newSdp.replace(/;profile-level-id=([a-z0-9]+)/,'');}else{cov_2o397libkm.b[40][1]++;cov_2o397libkm.s[181]++;newSdp=newSdp.replace('42001f','42e01f');}}else{cov_2o397libkm.b[38][1]++;}cov_2o397libkm.s[182]++;if((cov_2o397libkm.b[42][0]++,navigator.userAgent.indexOf('Safari')!==-1)&&(cov_2o397libkm.b[42][1]++,remoteDevice.userAgent.indexOf('Chrome')!==-1)&&(cov_2o397libkm.b[42][2]++,remoteDevice.userAgent.indexOf('Android')!==-1)&&(cov_2o397libkm.b[42][3]++,remote[1]<=64)){cov_2o397libkm.b[41][0]++;cov_2o397libkm.s[183]++;if(remote[1]<=60){cov_2o397libkm.b[43][0]++;cov_2o397libkm.s[184]++;newSdp=newSdp.replace(/;profile-level-id=([a-z0-9]+)/,'');}else{cov_2o397libkm.b[43][1]++;cov_2o397libkm.s[185]++;newSdp=newSdp.replace('42e01f','42001f');}}else{cov_2o397libkm.b[41][1]++;}cov_2o397libkm.s[186]++;Log.d("PeerConnection~_sendSdpToRemote#SDP sent to remote ".concat(newSdp));var descriptionChanged=(cov_2o397libkm.s[187]++,{sdp:newSdp,type:_this6.pc.localDescription.type});cov_2o397libkm.s[188]++;DataSync.update("".concat(_this6._localPath,"/sdp"),_toJSON(descriptionChanged));});}},{key:"_sendOffer",value:function _sendOffer(){cov_2o397libkm.f[45]++;var _this7=(cov_2o397libkm.s[189]++,this);cov_2o397libkm.s[190]++;Log.d('PeerConnection~_sendOffer');cov_2o397libkm.s[191]++;return this.pc.createOffer().then(function(description){cov_2o397libkm.f[46]++;cov_2o397libkm.s[192]++;return _this7._setPreferredCodecs(description);}).then(function(description){cov_2o397libkm.f[47]++;cov_2o397libkm.s[193]++;return _this7.pc.setLocalDescription(description);}).then(function(){cov_2o397libkm.f[48]++;cov_2o397libkm.s[194]++;return Log.d('PeerConnection~_sendOffer#localDescription',_this7.pc.localDescription.sdp);}).then(function(){cov_2o397libkm.f[49]++;cov_2o397libkm.s[195]++;return _this7._sendSdpToRemote();});}},{key:"_alterStream",value:function _alterStream(stream,method){cov_2o397libkm.f[50]++;var _this8=(cov_2o397libkm.s[196]++,this);cov_2o397libkm.s[197]++;if(Object.getOwnPropertyDescriptor(RTCPeerConnection.prototype,"".concat(method,"Track"))){cov_2o397libkm.b[44][0]++;cov_2o397libkm.s[198]++;if(method==='add'){cov_2o397libkm.b[45][0]++;cov_2o397libkm.s[199]++;stream.getTracks().forEach(function(track){cov_2o397libkm.f[51]++;cov_2o397libkm.s[200]++;return _this8.pc["".concat(method,"Track")](track,stream);},this);}else{cov_2o397libkm.b[45][1]++;cov_2o397libkm.s[201]++;this.pc.getSenders().forEach(function(sender){cov_2o397libkm.f[52]++;cov_2o397libkm.s[202]++;return _this8.pc["".concat(method,"Track")](sender);},this);}}else{cov_2o397libkm.b[44][1]++;cov_2o397libkm.s[203]++;this.pc["".concat(method,"Stream")](stream);}}},{key:"renegotiate",value:function renegotiate(oldStream,newStream){cov_2o397libkm.f[53]++;cov_2o397libkm.s[204]++;Log.d('PeerConnection~renegotiate');cov_2o397libkm.s[205]++;if((cov_2o397libkm.b[47][0]++,Object.getOwnPropertyDescriptor(RTCPeerConnection.prototype,'getSenders'))&&(cov_2o397libkm.b[47][1]++,'RTCRtpSender'in window)&&(cov_2o397libkm.b[47][2]++,Object.getOwnPropertyDescriptor(RTCRtpSender.prototype,'replaceTrack'))){cov_2o397libkm.b[46][0]++;cov_2o397libkm.s[206]++;this.pc.getSenders().forEach(function(sender){cov_2o397libkm.f[54]++;var newTracks;cov_2o397libkm.s[207]++;switch(sender.track.kind){case'audio':cov_2o397libkm.b[48][0]++;cov_2o397libkm.s[208]++;newTracks=newStream.getAudioTracks();cov_2o397libkm.s[209]++;break;case'video':cov_2o397libkm.b[48][1]++;cov_2o397libkm.s[210]++;newTracks=newStream.getVideoTracks();cov_2o397libkm.s[211]++;break;default:cov_2o397libkm.b[48][2]++;cov_2o397libkm.s[212]++;newTracks=[];}cov_2o397libkm.s[213]++;if(newTracks.length){cov_2o397libkm.b[49][0]++;cov_2o397libkm.s[214]++;sender.replaceTrack(newTracks[0]);}else{cov_2o397libkm.b[49][1]++;}});cov_2o397libkm.s[215]++;this._sendOffer().catch(function(e){cov_2o397libkm.f[55]++;cov_2o397libkm.s[216]++;Log.d('PeerConnection~renegotiate',e);});}else{cov_2o397libkm.b[46][1]++;cov_2o397libkm.s[217]++;this._alterStream(oldStream,'remove');cov_2o397libkm.s[218]++;this._alterStream(newStream,'add');}}},{key:"close",value:function close(){cov_2o397libkm.f[56]++;var _this9=(cov_2o397libkm.s[219]++,this);cov_2o397libkm.s[220]++;if(this._status===_constants.OPENED){cov_2o397libkm.b[50][0]++;cov_2o397libkm.s[221]++;this._status=_constants.CLOSING;cov_2o397libkm.s[222]++;if(this.node){cov_2o397libkm.b[51][0]++;cov_2o397libkm.s[223]++;if(this.node.stop){cov_2o397libkm.b[52][0]++;cov_2o397libkm.s[224]++;this.node.stop();}else{cov_2o397libkm.b[52][1]++;}cov_2o397libkm.s[225]++;this.node.srcObject=null;cov_2o397libkm.s[226]++;this.container.removeChild(this.node);cov_2o397libkm.s[227]++;this.node=null;}else{cov_2o397libkm.b[51][1]++;}cov_2o397libkm.s[228]++;this._remoteICECandidates(false);cov_2o397libkm.s[229]++;DataSync.off("".concat(this._remotePath,"/sdp"),'value');cov_2o397libkm.s[230]++;DataSync.remove(this._localPath);cov_2o397libkm.s[231]++;if((cov_2o397libkm.b[54][0]++,this.pc)&&(cov_2o397libkm.b[54][1]++,this.pc.signalingState!=='closed')){cov_2o397libkm.b[53][0]++;cov_2o397libkm.s[232]++;this.pc.onsignalingstatechange=function(){cov_2o397libkm.f[57]++;cov_2o397libkm.s[233]++;if(_this9.pc.signalingState!=='closed'){cov_2o397libkm.b[55][0]++;cov_2o397libkm.s[234]++;_this9._status=_constants.CLOSED;}else{cov_2o397libkm.b[55][1]++;}};cov_2o397libkm.s[235]++;this.pc.close();}else{cov_2o397libkm.b[53][1]++;cov_2o397libkm.s[236]++;this._status=_constants.CLOSED;}}else{cov_2o397libkm.b[50][1]++;}}},{key:"_setPreferredCodecs",value:function _setPreferredCodecs(description){cov_2o397libkm.f[58]++;cov_2o397libkm.s[237]++;if((cov_2o397libkm.b[57][0]++,_cache.default.config.preferredVideoCodec)||(cov_2o397libkm.b[57][1]++,_cache.default.config.preferredAudioCodec)){cov_2o397libkm.b[56][0]++;cov_2o397libkm.s[238]++;Log.d('PeerConnection~_setPreferredCodecs',{description:description,config:_cache.default.config});var sdpLines=(cov_2o397libkm.s[239]++,description.sdp.split(/\r?\n/));var medias=(cov_2o397libkm.s[240]++,{audio:[],video:[]});var current=(cov_2o397libkm.s[241]++,null);cov_2o397libkm.s[242]++;sdpLines.forEach(function(sdpLine,i){cov_2o397libkm.f[59]++;cov_2o397libkm.s[243]++;if(/^m=/.test(sdpLine)){cov_2o397libkm.b[58][0]++;var d=(cov_2o397libkm.s[244]++,/^m=(\w+)\s[0-9\/]+\s[A-Za-z0-9\/]+\s([0-9\s]+)/.exec(sdpLine));cov_2o397libkm.s[245]++;current={fmt:d[2].split(/\s/),index:i,codecs:[]};cov_2o397libkm.s[246]++;medias[d[1]].push(current);}else{cov_2o397libkm.b[58][1]++;cov_2o397libkm.s[247]++;if((cov_2o397libkm.b[60][0]++,current)&&(cov_2o397libkm.b[60][1]++,/^a=rtpmap:/.test(sdpLine))){cov_2o397libkm.b[59][0]++;var c=(cov_2o397libkm.s[248]++,/^a=rtpmap:(\d+)\s([a-zA-Z0-9\-\/]+)/.exec(sdpLine));cov_2o397libkm.s[249]++;if(c){cov_2o397libkm.b[61][0]++;cov_2o397libkm.s[250]++;current.codecs.push({id:c[1],name:c[2],index:i});}else{cov_2o397libkm.b[61][1]++;}}else{cov_2o397libkm.b[59][1]++;}}});cov_2o397libkm.s[251]++;Log.d('PeerConnection~_setPreferredCodecs',medias);var update=(cov_2o397libkm.s[252]++,false);cov_2o397libkm.s[253]++;var prefer=function prefer(mediaList,preferedCodec){cov_2o397libkm.f[60]++;cov_2o397libkm.s[254]++;mediaList.forEach(function(media){cov_2o397libkm.f[61]++;var selected=(cov_2o397libkm.s[255]++,media.codecs.find(function(codec){cov_2o397libkm.f[62]++;cov_2o397libkm.s[256]++;return preferedCodec.test(codec.name);}));cov_2o397libkm.s[257]++;if(selected){cov_2o397libkm.b[62][0]++;var fmt=(cov_2o397libkm.s[258]++,[selected.id].concat(media.fmt.filter(function(ids){cov_2o397libkm.f[63]++;cov_2o397libkm.s[259]++;return ids!==selected.id;})));cov_2o397libkm.s[260]++;sdpLines[media.index]=sdpLines[media.index].replace(media.fmt.join(' '),fmt.join(' '));cov_2o397libkm.s[261]++;update=true;}else{cov_2o397libkm.b[62][1]++;}});};cov_2o397libkm.s[262]++;if(_cache.default.config.preferredVideoCodec){cov_2o397libkm.b[63][0]++;cov_2o397libkm.s[263]++;prefer(medias.video,_cache.default.config.preferredVideoCodec);}else{cov_2o397libkm.b[63][1]++;}cov_2o397libkm.s[264]++;if(_cache.default.config.preferredAudioCodec){cov_2o397libkm.b[64][0]++;cov_2o397libkm.s[265]++;prefer(medias.audio,_cache.default.config.preferredAudioCodec);}else{cov_2o397libkm.b[64][1]++;}cov_2o397libkm.s[266]++;if(update){cov_2o397libkm.b[65][0]++;cov_2o397libkm.s[267]++;Log.d('PeerConnection~_setPreferredCodecs',sdpLines.join('\r\n'));cov_2o397libkm.s[268]++;return{sdp:sdpLines.join('\r\n'),type:description.type};}else{cov_2o397libkm.b[65][1]++;}}else{cov_2o397libkm.b[56][1]++;}cov_2o397libkm.s[269]++;return description;}},{key:"socket",get:function get(){cov_2o397libkm.f[64]++;cov_2o397libkm.s[270]++;if(!this._socket){cov_2o397libkm.b[66][0]++;cov_2o397libkm.s[271]++;this._socket=(0,_socket.default)(_cache.default.config.stats.server);}else{cov_2o397libkm.b[66][1]++;}cov_2o397libkm.s[272]++;return this._socket;}},{key:"remoteStream",set:function set(stream){cov_2o397libkm.f[65]++;cov_2o397libkm.s[273]++;this._remoteStream=stream;cov_2o397libkm.s[274]++;this._attachStream();},get:function get(){cov_2o397libkm.f[66]++;cov_2o397libkm.s[275]++;return this._remoteStream;}},{key:"isConnected",get:function get(){cov_2o397libkm.f[67]++;cov_2o397libkm.s[276]++;return(cov_2o397libkm.b[67][0]++,this.pc)&&(cov_2o397libkm.b[67][1]++,!!~[ICE_CONNECTION_STATE_CONNECTED,ICE_CONNECTION_STATE_COMPLETED,ICE_CONNECTION_STATE_OTHER].indexOf(this.pc.iceConnectionState));}}]);cov_2o397libkm.s[277]++;return PeerConnection;}());cov_2o397libkm.s[278]++;exports.default=PeerConnection;

/***/ }),

/***/ "./src/core/webrtc/PeerConnectionManager.js":
/*!**************************************************!*\
  !*** ./src/core/webrtc/PeerConnectionManager.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_19ip07hf24=function(){var path="/home/florent/Projets/reach/src/core/webrtc/PeerConnectionManager.js",hash="81be857c1f8b3b295df09ba72e7a984ca57a0795",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/core/webrtc/PeerConnectionManager.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:22},end:{line:8,column:73}},"3":{start:{line:10,column:13},end:{line:10,column:61}},"4":{start:{line:12,column:10},end:{line:12,column:57}},"5":{start:{line:14,column:15},end:{line:14,column:67}},"6":{start:{line:16,column:40},end:{line:16,column:470}},"7":{start:{line:16,column:69},end:{line:16,column:80}},"8":{start:{line:16,column:103},end:{line:16,column:105}},"9":{start:{line:16,column:107},end:{line:16,column:431}},"10":{start:{line:16,column:126},end:{line:16,column:429}},"11":{start:{line:16,column:149},end:{line:16,column:427}},"12":{start:{line:16,column:214},end:{line:16,column:319}},"13":{start:{line:16,column:321},end:{line:16,column:425}},"14":{start:{line:16,column:349},end:{line:16,column:390}},"15":{start:{line:16,column:400},end:{line:16,column:423}},"16":{start:{line:16,column:432},end:{line:16,column:453}},"17":{start:{line:16,column:454},end:{line:16,column:468}},"18":{start:{line:18,column:39},end:{line:18,column:93}},"19":{start:{line:20,column:50},end:{line:20,column:151}},"20":{start:{line:20,column:92},end:{line:20,column:149}},"21":{start:{line:22,column:44},end:{line:22,column:315}},"22":{start:{line:22,column:102},end:{line:22,column:110}},"23":{start:{line:22,column:112},end:{line:22,column:167}},"24":{start:{line:22,column:168},end:{line:22,column:199}},"25":{start:{line:22,column:200},end:{line:22,column:254}},"26":{start:{line:22,column:227},end:{line:22,column:254}},"27":{start:{line:22,column:255},end:{line:22,column:313}},"28":{start:{line:24,column:62},end:{line:24,column:131}},"29":{start:{line:24,column:78},end:{line:24,column:131}},"30":{start:{line:24,column:132},end:{line:24,column:193}},"31":{start:{line:24,column:149},end:{line:24,column:193}},"32":{start:{line:24,column:194},end:{line:24,column:213}},"33":{start:{line:26,column:22},end:{line:28,column:1}},"34":{start:{line:27,column:2},end:{line:27,column:113}},"35":{start:{line:32,column:15},end:{line:36,column:1}},"36":{start:{line:33,column:2},end:{line:35,column:8}},"37":{start:{line:34,column:4},end:{line:34,column:66}},"38":{start:{line:40,column:17},end:{line:48,column:1}},"39":{start:{line:41,column:21},end:{line:41,column:58}},"40":{start:{line:42,column:13},end:{line:42,column:46}},"41":{start:{line:43,column:15},end:{line:43,column:26}},"42":{start:{line:45,column:12},end:{line:45,column:46}},"43":{start:{line:46,column:12},end:{line:46,column:50}},"44":{start:{line:47,column:2},end:{line:47,column:67}},"45":{start:{line:56,column:0},end:{line:194,column:3}},"46":{start:{line:62,column:4},end:{line:62,column:49}},"47":{start:{line:68,column:4},end:{line:68,column:21}},"48":{start:{line:79,column:2},end:{line:191,column:6}},"49":{start:{line:82,column:18},end:{line:82,column:22}},"50":{start:{line:84,column:6},end:{line:86,column:7}},"51":{start:{line:85,column:8},end:{line:85,column:107}},"52":{start:{line:88,column:20},end:{line:88,column:68}},"53":{start:{line:90,column:6},end:{line:92,column:7}},"54":{start:{line:91,column:8},end:{line:91,column:65}},"55":{start:{line:94,column:6},end:{line:96,column:7}},"56":{start:{line:95,column:8},end:{line:95,column:34}},"57":{start:{line:98,column:19},end:{line:98,column:53}},"58":{start:{line:100,column:24},end:{line:100,column:33}},"59":{start:{line:104,column:6},end:{line:110,column:7}},"60":{start:{line:105,column:23},end:{line:105,column:43}},"61":{start:{line:106,column:8},end:{line:106,column:36}},"62":{start:{line:108,column:25},end:{line:108,column:47}},"63":{start:{line:109,column:8},end:{line:109,column:40}},"64":{start:{line:112,column:18},end:{line:112,column:20}},"65":{start:{line:114,column:6},end:{line:114,column:32}},"66":{start:{line:116,column:6},end:{line:116,column:53}},"67":{start:{line:117,column:6},end:{line:127,column:65}},"68":{start:{line:118,column:8},end:{line:118,column:81}},"69":{start:{line:120,column:8},end:{line:124,column:11}},"70":{start:{line:125,column:8},end:{line:125,column:47}},"71":{start:{line:126,column:8},end:{line:126,column:18}},"72":{start:{line:140,column:6},end:{line:143,column:9}},"73":{start:{line:144,column:6},end:{line:146,column:9}},"74":{start:{line:145,column:8},end:{line:145,column:59}},"75":{start:{line:159,column:27},end:{line:159,column:97}},"76":{start:{line:160,column:6},end:{line:163,column:9}},"77":{start:{line:164,column:6},end:{line:166,column:9}},"78":{start:{line:165,column:8},end:{line:165,column:54}},"79":{start:{line:178,column:20},end:{line:178,column:67}},"80":{start:{line:179,column:15},end:{line:179,column:75}},"81":{start:{line:181,column:6},end:{line:187,column:7}},"82":{start:{line:182,column:8},end:{line:182,column:19}},"83":{start:{line:183,column:8},end:{line:183,column:53}},"84":{start:{line:184,column:8},end:{line:184,column:46}},"85":{start:{line:185,column:8},end:{line:185,column:46}},"86":{start:{line:186,column:8},end:{line:186,column:18}},"87":{start:{line:189,column:6},end:{line:189,column:19}},"88":{start:{line:193,column:2},end:{line:193,column:31}},"89":{start:{line:196,column:0},end:{line:196,column:40}}},fnMap:{"0":{name:"_interopRequireWildcard",decl:{start:{line:16,column:9},end:{line:16,column:32}},loc:{start:{line:16,column:38},end:{line:16,column:472}},line:16},"1":{name:"_interopRequireDefault",decl:{start:{line:18,column:9},end:{line:18,column:31}},loc:{start:{line:18,column:37},end:{line:18,column:95}},line:18},"2":{name:"_classCallCheck",decl:{start:{line:20,column:9},end:{line:20,column:24}},loc:{start:{line:20,column:48},end:{line:20,column:153}},line:20},"3":{name:"_defineProperties",decl:{start:{line:22,column:9},end:{line:22,column:26}},loc:{start:{line:22,column:42},end:{line:22,column:317}},line:22},"4":{name:"_createClass",decl:{start:{line:24,column:9},end:{line:24,column:21}},loc:{start:{line:24,column:60},end:{line:24,column:215}},line:24},"5":{name:"getShortStackId",decl:{start:{line:26,column:31},end:{line:26,column:46}},loc:{start:{line:26,column:57},end:{line:28,column:1}},line:26},"6":{name:"hashCode",decl:{start:{line:32,column:24},end:{line:32,column:32}},loc:{start:{line:32,column:38},end:{line:36,column:1}},line:32},"7":{name:"(anonymous_7)",decl:{start:{line:33,column:30},end:{line:33,column:31}},loc:{start:{line:33,column:59},end:{line:35,column:3}},line:33},"8":{name:"getStackId",decl:{start:{line:40,column:26},end:{line:40,column:36}},loc:{start:{line:40,column:59},end:{line:48,column:1}},line:40},"9":{name:"(anonymous_9)",decl:{start:{line:56,column:0},end:{line:56,column:1}},loc:{start:{line:56,column:12},end:{line:194,column:1}},line:56},"10":{name:"PeerConnectionManager",decl:{start:{line:61,column:11},end:{line:61,column:32}},loc:{start:{line:61,column:35},end:{line:69,column:3}},line:61},"11":{name:"getPeerConnection",decl:{start:{line:81,column:20},end:{line:81,column:37}},loc:{start:{line:81,column:63},end:{line:128,column:5}},line:81},"12":{name:"(anonymous_12)",decl:{start:{line:117,column:70},end:{line:117,column:71}},loc:{start:{line:117,column:82},end:{line:119,column:7}},line:117},"13":{name:"(anonymous_13)",decl:{start:{line:119,column:14},end:{line:119,column:15}},loc:{start:{line:119,column:28},end:{line:127,column:7}},line:119},"14":{name:"offer",decl:{start:{line:139,column:20},end:{line:139,column:25}},loc:{start:{line:139,column:67},end:{line:147,column:5}},line:139},"15":{name:"(anonymous_15)",decl:{start:{line:144,column:72},end:{line:144,column:73}},loc:{start:{line:144,column:86},end:{line:146,column:7}},line:144},"16":{name:"answer",decl:{start:{line:158,column:20},end:{line:158,column:26}},loc:{start:{line:158,column:54},end:{line:167,column:5}},line:158},"17":{name:"(anonymous_17)",decl:{start:{line:164,column:76},end:{line:164,column:77}},loc:{start:{line:164,column:90},end:{line:166,column:7}},line:164},"18":{name:"close",decl:{start:{line:177,column:20},end:{line:177,column:25}},loc:{start:{line:177,column:50},end:{line:190,column:5}},line:177}},branchMap:{"0":{loc:{start:{line:16,column:40},end:{line:16,column:470}},type:"if",locations:[{start:{line:16,column:40},end:{line:16,column:470}},{start:{line:16,column:40},end:{line:16,column:470}}],line:16},"1":{loc:{start:{line:16,column:44},end:{line:16,column:65}},type:"binary-expr",locations:[{start:{line:16,column:44},end:{line:16,column:47}},{start:{line:16,column:51},end:{line:16,column:65}}],line:16},"2":{loc:{start:{line:16,column:107},end:{line:16,column:431}},type:"if",locations:[{start:{line:16,column:107},end:{line:16,column:431}},{start:{line:16,column:107},end:{line:16,column:431}}],line:16},"3":{loc:{start:{line:16,column:149},end:{line:16,column:427}},type:"if",locations:[{start:{line:16,column:149},end:{line:16,column:427}},{start:{line:16,column:149},end:{line:16,column:427}}],line:16},"4":{loc:{start:{line:16,column:214},end:{line:16,column:319}},type:"cond-expr",locations:[{start:{line:16,column:273},end:{line:16,column:314}},{start:{line:16,column:317},end:{line:16,column:319}}],line:16},"5":{loc:{start:{line:16,column:214},end:{line:16,column:270}},type:"binary-expr",locations:[{start:{line:16,column:214},end:{line:16,column:235}},{start:{line:16,column:239},end:{line:16,column:270}}],line:16},"6":{loc:{start:{line:16,column:321},end:{line:16,column:425}},type:"if",locations:[{start:{line:16,column:321},end:{line:16,column:425}},{start:{line:16,column:321},end:{line:16,column:425}}],line:16},"7":{loc:{start:{line:16,column:325},end:{line:16,column:345}},type:"binary-expr",locations:[{start:{line:16,column:325},end:{line:16,column:333}},{start:{line:16,column:337},end:{line:16,column:345}}],line:16},"8":{loc:{start:{line:18,column:46},end:{line:18,column:92}},type:"cond-expr",locations:[{start:{line:18,column:70},end:{line:18,column:73}},{start:{line:18,column:76},end:{line:18,column:92}}],line:18},"9":{loc:{start:{line:18,column:46},end:{line:18,column:67}},type:"binary-expr",locations:[{start:{line:18,column:46},end:{line:18,column:49}},{start:{line:18,column:53},end:{line:18,column:67}}],line:18},"10":{loc:{start:{line:20,column:50},end:{line:20,column:151}},type:"if",locations:[{start:{line:20,column:50},end:{line:20,column:151}},{start:{line:20,column:50},end:{line:20,column:151}}],line:20},"11":{loc:{start:{line:22,column:136},end:{line:22,column:166}},type:"binary-expr",locations:[{start:{line:22,column:136},end:{line:22,column:157}},{start:{line:22,column:161},end:{line:22,column:166}}],line:22},"12":{loc:{start:{line:22,column:200},end:{line:22,column:254}},type:"if",locations:[{start:{line:22,column:200},end:{line:22,column:254}},{start:{line:22,column:200},end:{line:22,column:254}}],line:22},"13":{loc:{start:{line:24,column:62},end:{line:24,column:131}},type:"if",locations:[{start:{line:24,column:62},end:{line:24,column:131}},{start:{line:24,column:62},end:{line:24,column:131}}],line:24},"14":{loc:{start:{line:24,column:132},end:{line:24,column:193}},type:"if",locations:[{start:{line:24,column:132},end:{line:24,column:193}},{start:{line:24,column:132},end:{line:24,column:193}}],line:24},"15":{loc:{start:{line:27,column:9},end:{line:27,column:112}},type:"cond-expr",locations:[{start:{line:27,column:47},end:{line:27,column:78}},{start:{line:27,column:81},end:{line:27,column:112}}],line:27},"16":{loc:{start:{line:84,column:6},end:{line:86,column:7}},type:"if",locations:[{start:{line:84,column:6},end:{line:86,column:7}},{start:{line:84,column:6},end:{line:86,column:7}}],line:84},"17":{loc:{start:{line:90,column:6},end:{line:92,column:7}},type:"if",locations:[{start:{line:90,column:6},end:{line:92,column:7}},{start:{line:90,column:6},end:{line:92,column:7}}],line:90},"18":{loc:{start:{line:90,column:10},end:{line:90,column:66}},type:"binary-expr",locations:[{start:{line:90,column:10},end:{line:90,column:30}},{start:{line:90,column:34},end:{line:90,column:66}}],line:90},"19":{loc:{start:{line:94,column:6},end:{line:96,column:7}},type:"if",locations:[{start:{line:94,column:6},end:{line:96,column:7}},{start:{line:94,column:6},end:{line:96,column:7}}],line:94},"20":{loc:{start:{line:104,column:6},end:{line:110,column:7}},type:"if",locations:[{start:{line:104,column:6},end:{line:110,column:7}},{start:{line:104,column:6},end:{line:110,column:7}}],line:104},"21":{loc:{start:{line:116,column:12},end:{line:116,column:44}},type:"binary-expr",locations:[{start:{line:116,column:12},end:{line:116,column:27}},{start:{line:116,column:31},end:{line:116,column:44}}],line:116},"22":{loc:{start:{line:159,column:27},end:{line:159,column:97}},type:"cond-expr",locations:[{start:{line:159,column:80},end:{line:159,column:92}},{start:{line:159,column:95},end:{line:159,column:97}}],line:159},"23":{loc:{start:{line:159,column:27},end:{line:159,column:77}},type:"binary-expr",locations:[{start:{line:159,column:27},end:{line:159,column:47}},{start:{line:159,column:51},end:{line:159,column:77}}],line:159},"24":{loc:{start:{line:179,column:15},end:{line:179,column:75}},type:"cond-expr",locations:[{start:{line:179,column:38},end:{line:179,column:68}},{start:{line:179,column:71},end:{line:179,column:75}}],line:179},"25":{loc:{start:{line:181,column:6},end:{line:187,column:7}},type:"if",locations:[{start:{line:181,column:6},end:{line:187,column:7}},{start:{line:181,column:6},end:{line:187,column:7}}],line:181}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/core/webrtc/PeerConnectionManager.js"],names:["getShortStackId","id1","id2","localeCompare","hashCode","str","split","reduce","prevHash","currVal","charCodeAt","getStackId","deviceId1","deviceId2","shortstackId","hash","length","substring","PeerConnectionManager","stacks","stream","remote","publish","cache","user","Promise","reject","Error","stackId","device","uid","resolve","userId","shortUserId","shortRemoteTo","shortRemoteFrom","to","remoteTo","remoteFrom","from","users","DataSync","update","then","PeerConnection","pc","Log","d","streamId","catch","r","localStream","subscriber","errorCallbacks","getPeerConnection","offer","media","remoteStream","htmlElement","answer","remoteDevice","close","remove"],mappings:"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",sourcesContent:["import PeerConnection from './PeerConnection';\nimport cache from '../util/cache';\nimport * as Log from '../util/Log';\nimport * as DataSync from '../util/DataSync';\n\nconst getShortStackId = (id1, id2) => (\n  id1.localeCompare(id2, 'en-us') > 0 ? `${id1}-${id2}` : `${id2}-${id1}`\n);\n\n/* eslint-disable no-bitwise */\nconst hashCode = str => (\n  str\n    .split('')\n    .reduce((prevHash, currVal) => (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0, 0)\n);\n/* eslint-enable no-bitwise */\n\nconst getStackId = (deviceId1, deviceId2) => {\n  const shortstackId = getShortStackId(deviceId1, deviceId2);\n\n  const hash = `${hashCode(shortstackId)}`;\n  const length = hash.length; // eslint-disable-line\n  const id1 = hash.substring(length - 3, length);\n  const id2 = hash.substring(length - 6, length - 3);\n\n  return `${id1}/${id2}/${shortstackId}`;\n};\n\n/**\n * @access protected\n */\nexport default class PeerConnectionManager {\n  /**\n   * Constructor\n   * @access protected\n   */\n  constructor() {\n    /**\n     * WebRTC stacks\n     * @type {{*: {*: PeerConnection}}}\n     */\n    this.stacks = {};\n  }\n\n  /**\n   * Get a PeerConnection object for a specific stream\n   * @param {Local|Remote} stream\n   * @param {Remote|{to: string, device:string}} remote\n   * @param {boolean} publish\n   * @return {*}\n   */\n  getPeerConnection(stream, remote, publish) {\n    if (!cache.user) {\n      return Promise.reject(\n        new Error('Only an authenticated user can get a PeerConnection\\'s object.')\n      );\n    }\n    const stackId = getStackId(remote.device, cache.device);\n\n    if (this.stacks[stackId] && this.stacks[stackId][stream.uid]) {\n      return Promise.resolve(this.stacks[stackId][stream.uid]);\n    }\n\n    if (!this.stacks[stackId]) {\n      this.stacks[stackId] = {};\n    }\n\n    const userId = cache.user.uid.split('/');\n    const shortUserId = userId[2];\n    let shortRemoteTo;\n    let shortRemoteFrom;\n    if (remote.to) {\n      const remoteTo = remote.to.split('/');\n      shortRemoteTo = remoteTo[2]; // eslint-disable-line prefer-destructuring\n    } else {\n      const remoteFrom = remote.from.split('/');\n      shortRemoteFrom = remoteFrom[2]; // eslint-disable-line prefer-destructuring\n    }\n\n    const users = {};\n    // users[cache.user.uid] = true;\n    users[shortUserId] = true;\n    // users[remote.from || remote.to] = true;\n    users[shortRemoteFrom || shortRemoteTo] = true;\n\n    return DataSync.update(`_/webrtc/${stackId}`, users)\n      .then(() => new PeerConnection(stackId, stream.uid, remote, publish))\n      .then((pc) => {\n        Log.d('PeerConnectionManager~getPeerConnection', { stackId, streamId: stream.uid, pc });\n        this.stacks[stackId][stream.uid] = pc;\n        return pc;\n      })\n      .catch(Log.r('PeerConnectionManager~getPeerConnection'));\n  }\n\n  /**\n   * Create offer for a stream to a subscriber\n   * @param {Local} localStream\n   * @param {object} subscriber\n   * @param {array} errorCallbacks\n   * @return {Promise.<PeerConnection>}\n   */\n  offer(localStream, subscriber, errorCallbacks) {\n    Log.d('PeerConnectionManager~offer', { localStream, subscriber });\n    return this.getPeerConnection(localStream, subscriber, true)\n      .then(pc => pc.offer(localStream.media, errorCallbacks));\n  }\n\n  /**\n   * Answer to the offer from the publisher\n   * @param {Remote} remoteStream\n   * @param {Element} htmlElement\n   * @param {array} errorCallbacks\n   * @return {*|Promise.<PeerConnection>}\n   */\n  answer(remoteStream, htmlElement, errorCallbacks = []) {\n    Log.d('PeerConnectionManager~answer', { remoteStream, htmlElement });\n    return this.getPeerConnection(remoteStream, remoteStream, false)\n      .then(pc => pc.answer(htmlElement, errorCallbacks));\n  }\n\n  /**\n   * Close a PeerConnection\n   * @param streamId\n   * @param remoteDevice\n   * @return {*}\n   */\n  close(streamId, remoteDevice) {\n    const stackId = getStackId(remoteDevice, cache.device);\n\n\n    const pc = this.stacks[stackId] ? this.stacks[stackId][streamId] : null;\n    if (pc) {\n      pc.close();\n      DataSync.remove(`_/webrtc/${stackId}`);\n      this.stacks[stackId][streamId] = null;\n      delete this.stacks[stackId][streamId];\n      return pc;\n    }\n    return false;\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_19ip07hf24.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_19ip07hf24.s[1]++;exports.default=void 0;var _PeerConnection=(cov_19ip07hf24.s[2]++,_interopRequireDefault(__webpack_require__(/*! ./PeerConnection */ "./src/core/webrtc/PeerConnection.js")));var _cache=(cov_19ip07hf24.s[3]++,_interopRequireDefault(__webpack_require__(/*! ../util/cache */ "./src/core/util/cache.js")));var Log=(cov_19ip07hf24.s[4]++,_interopRequireWildcard(__webpack_require__(/*! ../util/Log */ "./src/core/util/Log.js")));var DataSync=(cov_19ip07hf24.s[5]++,_interopRequireWildcard(__webpack_require__(/*! ../util/DataSync */ "./src/core/util/DataSync.js")));function _interopRequireWildcard(obj){cov_19ip07hf24.f[0]++;cov_19ip07hf24.s[6]++;if((cov_19ip07hf24.b[1][0]++,obj)&&(cov_19ip07hf24.b[1][1]++,obj.__esModule)){cov_19ip07hf24.b[0][0]++;cov_19ip07hf24.s[7]++;return obj;}else{cov_19ip07hf24.b[0][1]++;var newObj=(cov_19ip07hf24.s[8]++,{});cov_19ip07hf24.s[9]++;if(obj!=null){cov_19ip07hf24.b[2][0]++;cov_19ip07hf24.s[10]++;for(var key in obj){cov_19ip07hf24.s[11]++;if(Object.prototype.hasOwnProperty.call(obj,key)){cov_19ip07hf24.b[3][0]++;var desc=(cov_19ip07hf24.s[12]++,(cov_19ip07hf24.b[5][0]++,Object.defineProperty)&&(cov_19ip07hf24.b[5][1]++,Object.getOwnPropertyDescriptor)?(cov_19ip07hf24.b[4][0]++,Object.getOwnPropertyDescriptor(obj,key)):(cov_19ip07hf24.b[4][1]++,{}));cov_19ip07hf24.s[13]++;if((cov_19ip07hf24.b[7][0]++,desc.get)||(cov_19ip07hf24.b[7][1]++,desc.set)){cov_19ip07hf24.b[6][0]++;cov_19ip07hf24.s[14]++;Object.defineProperty(newObj,key,desc);}else{cov_19ip07hf24.b[6][1]++;cov_19ip07hf24.s[15]++;newObj[key]=obj[key];}}else{cov_19ip07hf24.b[3][1]++;}}}else{cov_19ip07hf24.b[2][1]++;}cov_19ip07hf24.s[16]++;newObj.default=obj;cov_19ip07hf24.s[17]++;return newObj;}}function _interopRequireDefault(obj){cov_19ip07hf24.f[1]++;cov_19ip07hf24.s[18]++;return(cov_19ip07hf24.b[9][0]++,obj)&&(cov_19ip07hf24.b[9][1]++,obj.__esModule)?(cov_19ip07hf24.b[8][0]++,obj):(cov_19ip07hf24.b[8][1]++,{default:obj});}function _classCallCheck(instance,Constructor){cov_19ip07hf24.f[2]++;cov_19ip07hf24.s[19]++;if(!(instance instanceof Constructor)){cov_19ip07hf24.b[10][0]++;cov_19ip07hf24.s[20]++;throw new TypeError("Cannot call a class as a function");}else{cov_19ip07hf24.b[10][1]++;}}function _defineProperties(target,props){cov_19ip07hf24.f[3]++;cov_19ip07hf24.s[21]++;for(var i=0;i<props.length;i++){var descriptor=(cov_19ip07hf24.s[22]++,props[i]);cov_19ip07hf24.s[23]++;descriptor.enumerable=(cov_19ip07hf24.b[11][0]++,descriptor.enumerable)||(cov_19ip07hf24.b[11][1]++,false);cov_19ip07hf24.s[24]++;descriptor.configurable=true;cov_19ip07hf24.s[25]++;if("value"in descriptor){cov_19ip07hf24.b[12][0]++;cov_19ip07hf24.s[26]++;descriptor.writable=true;}else{cov_19ip07hf24.b[12][1]++;}cov_19ip07hf24.s[27]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_19ip07hf24.f[4]++;cov_19ip07hf24.s[28]++;if(protoProps){cov_19ip07hf24.b[13][0]++;cov_19ip07hf24.s[29]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_19ip07hf24.b[13][1]++;}cov_19ip07hf24.s[30]++;if(staticProps){cov_19ip07hf24.b[14][0]++;cov_19ip07hf24.s[31]++;_defineProperties(Constructor,staticProps);}else{cov_19ip07hf24.b[14][1]++;}cov_19ip07hf24.s[32]++;return Constructor;}cov_19ip07hf24.s[33]++;var getShortStackId=function getShortStackId(id1,id2){cov_19ip07hf24.f[5]++;cov_19ip07hf24.s[34]++;return id1.localeCompare(id2,'en-us')>0?(cov_19ip07hf24.b[15][0]++,"".concat(id1,"-").concat(id2)):(cov_19ip07hf24.b[15][1]++,"".concat(id2,"-").concat(id1));};cov_19ip07hf24.s[35]++;var hashCode=function hashCode(str){cov_19ip07hf24.f[6]++;cov_19ip07hf24.s[36]++;return str.split('').reduce(function(prevHash,currVal){cov_19ip07hf24.f[7]++;cov_19ip07hf24.s[37]++;return(prevHash<<5)-prevHash+currVal.charCodeAt(0)|0;},0);};cov_19ip07hf24.s[38]++;var getStackId=function getStackId(deviceId1,deviceId2){cov_19ip07hf24.f[8]++;var shortstackId=(cov_19ip07hf24.s[39]++,getShortStackId(deviceId1,deviceId2));var hash=(cov_19ip07hf24.s[40]++,"".concat(hashCode(shortstackId)));var length=(cov_19ip07hf24.s[41]++,hash.length);var id1=(cov_19ip07hf24.s[42]++,hash.substring(length-3,length));var id2=(cov_19ip07hf24.s[43]++,hash.substring(length-6,length-3));cov_19ip07hf24.s[44]++;return"".concat(id1,"/").concat(id2,"/").concat(shortstackId);};var PeerConnectionManager=(cov_19ip07hf24.s[45]++,function(){cov_19ip07hf24.f[9]++;function PeerConnectionManager(){cov_19ip07hf24.f[10]++;cov_19ip07hf24.s[46]++;_classCallCheck(this,PeerConnectionManager);cov_19ip07hf24.s[47]++;this.stacks={};}cov_19ip07hf24.s[48]++;_createClass(PeerConnectionManager,[{key:"getPeerConnection",value:function getPeerConnection(stream,remote,publish){cov_19ip07hf24.f[11]++;var _this=(cov_19ip07hf24.s[49]++,this);cov_19ip07hf24.s[50]++;if(!_cache.default.user){cov_19ip07hf24.b[16][0]++;cov_19ip07hf24.s[51]++;return Promise.reject(new Error('Only an authenticated user can get a PeerConnection\'s object.'));}else{cov_19ip07hf24.b[16][1]++;}var stackId=(cov_19ip07hf24.s[52]++,getStackId(remote.device,_cache.default.device));cov_19ip07hf24.s[53]++;if((cov_19ip07hf24.b[18][0]++,this.stacks[stackId])&&(cov_19ip07hf24.b[18][1]++,this.stacks[stackId][stream.uid])){cov_19ip07hf24.b[17][0]++;cov_19ip07hf24.s[54]++;return Promise.resolve(this.stacks[stackId][stream.uid]);}else{cov_19ip07hf24.b[17][1]++;}cov_19ip07hf24.s[55]++;if(!this.stacks[stackId]){cov_19ip07hf24.b[19][0]++;cov_19ip07hf24.s[56]++;this.stacks[stackId]={};}else{cov_19ip07hf24.b[19][1]++;}var userId=(cov_19ip07hf24.s[57]++,_cache.default.user.uid.split('/'));var shortUserId=(cov_19ip07hf24.s[58]++,userId[2]);var shortRemoteTo;var shortRemoteFrom;cov_19ip07hf24.s[59]++;if(remote.to){cov_19ip07hf24.b[20][0]++;var remoteTo=(cov_19ip07hf24.s[60]++,remote.to.split('/'));cov_19ip07hf24.s[61]++;shortRemoteTo=remoteTo[2];}else{cov_19ip07hf24.b[20][1]++;var remoteFrom=(cov_19ip07hf24.s[62]++,remote.from.split('/'));cov_19ip07hf24.s[63]++;shortRemoteFrom=remoteFrom[2];}var users=(cov_19ip07hf24.s[64]++,{});cov_19ip07hf24.s[65]++;users[shortUserId]=true;cov_19ip07hf24.s[66]++;users[(cov_19ip07hf24.b[21][0]++,shortRemoteFrom)||(cov_19ip07hf24.b[21][1]++,shortRemoteTo)]=true;cov_19ip07hf24.s[67]++;return DataSync.update("_/webrtc/".concat(stackId),users).then(function(){cov_19ip07hf24.f[12]++;cov_19ip07hf24.s[68]++;return new _PeerConnection.default(stackId,stream.uid,remote,publish);}).then(function(pc){cov_19ip07hf24.f[13]++;cov_19ip07hf24.s[69]++;Log.d('PeerConnectionManager~getPeerConnection',{stackId:stackId,streamId:stream.uid,pc:pc});cov_19ip07hf24.s[70]++;_this.stacks[stackId][stream.uid]=pc;cov_19ip07hf24.s[71]++;return pc;}).catch(Log.r('PeerConnectionManager~getPeerConnection'));}},{key:"offer",value:function offer(localStream,subscriber,errorCallbacks){cov_19ip07hf24.f[14]++;cov_19ip07hf24.s[72]++;Log.d('PeerConnectionManager~offer',{localStream:localStream,subscriber:subscriber});cov_19ip07hf24.s[73]++;return this.getPeerConnection(localStream,subscriber,true).then(function(pc){cov_19ip07hf24.f[15]++;cov_19ip07hf24.s[74]++;return pc.offer(localStream.media,errorCallbacks);});}},{key:"answer",value:function answer(remoteStream,htmlElement){cov_19ip07hf24.f[16]++;var errorCallbacks=(cov_19ip07hf24.s[75]++,(cov_19ip07hf24.b[23][0]++,arguments.length>2)&&(cov_19ip07hf24.b[23][1]++,arguments[2]!==undefined)?(cov_19ip07hf24.b[22][0]++,arguments[2]):(cov_19ip07hf24.b[22][1]++,[]));cov_19ip07hf24.s[76]++;Log.d('PeerConnectionManager~answer',{remoteStream:remoteStream,htmlElement:htmlElement});cov_19ip07hf24.s[77]++;return this.getPeerConnection(remoteStream,remoteStream,false).then(function(pc){cov_19ip07hf24.f[17]++;cov_19ip07hf24.s[78]++;return pc.answer(htmlElement,errorCallbacks);});}},{key:"close",value:function close(streamId,remoteDevice){cov_19ip07hf24.f[18]++;var stackId=(cov_19ip07hf24.s[79]++,getStackId(remoteDevice,_cache.default.device));var pc=(cov_19ip07hf24.s[80]++,this.stacks[stackId]?(cov_19ip07hf24.b[24][0]++,this.stacks[stackId][streamId]):(cov_19ip07hf24.b[24][1]++,null));cov_19ip07hf24.s[81]++;if(pc){cov_19ip07hf24.b[25][0]++;cov_19ip07hf24.s[82]++;pc.close();cov_19ip07hf24.s[83]++;DataSync.remove("_/webrtc/".concat(stackId));cov_19ip07hf24.s[84]++;this.stacks[stackId][streamId]=null;cov_19ip07hf24.s[85]++;delete this.stacks[stackId][streamId];cov_19ip07hf24.s[86]++;return pc;}else{cov_19ip07hf24.b[25][1]++;}cov_19ip07hf24.s[87]++;return false;}}]);cov_19ip07hf24.s[88]++;return PeerConnectionManager;}());cov_19ip07hf24.s[89]++;exports.default=PeerConnectionManager;

/***/ }),

/***/ "./src/definitions/Browser.js":
/*!************************************!*\
  !*** ./src/definitions/Browser.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_2futmgf7sg=function(){var path="/home/florent/Projets/reach/src/definitions/Browser.js",hash="7595a1309d8fb945b5310c746955f06e3d21ad2d",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/definitions/Browser.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:21},end:{line:8,column:70}},"3":{start:{line:10,column:14},end:{line:10,column:62}},"4":{start:{line:14,column:39},end:{line:14,column:93}},"5":{start:{line:16,column:35},end:{line:16,column:115}},"6":{start:{line:18,column:32},end:{line:18,column:103}},"7":{start:{line:20,column:34},end:{line:20,column:160}},"8":{start:{line:20,column:136},end:{line:20,column:160}},"9":{start:{line:22,column:35},end:{line:22,column:164}},"10":{start:{line:22,column:61},end:{line:22,column:149}},"11":{start:{line:22,column:130},end:{line:22,column:147}},"12":{start:{line:22,column:150},end:{line:22,column:162}},"13":{start:{line:32,column:14},end:{line:34,column:41}},"14":{start:{line:35,column:14},end:{line:35,column:131}},"15":{start:{line:37,column:14},end:{line:37,column:16}},"16":{start:{line:39,column:0},end:{line:45,column:1}},"17":{start:{line:40,column:2},end:{line:40,column:101}},"18":{start:{line:41,column:7},end:{line:45,column:1}},"19":{start:{line:42,column:2},end:{line:42,column:116}},"20":{start:{line:43,column:7},end:{line:45,column:1}},"21":{start:{line:44,column:2},end:{line:44,column:81}},"22":{start:{line:48,column:11},end:{line:48,column:52}},"23":{start:{line:50,column:0},end:{line:52,column:1}},"24":{start:{line:51,column:2},end:{line:51,column:211}},"25":{start:{line:54,column:0},end:{line:54,column:67}},"26":{start:{line:57,column:15},end:{line:57,column:22}},"27":{start:{line:58,column:0},end:{line:58,column:27}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:14,column:9},end:{line:14,column:31}},loc:{start:{line:14,column:37},end:{line:14,column:95}},line:14},"1":{name:"_toConsumableArray",decl:{start:{line:16,column:9},end:{line:16,column:27}},loc:{start:{line:16,column:33},end:{line:16,column:117}},line:16},"2":{name:"_nonIterableSpread",decl:{start:{line:18,column:9},end:{line:18,column:27}},loc:{start:{line:18,column:30},end:{line:18,column:105}},line:18},"3":{name:"_iterableToArray",decl:{start:{line:20,column:9},end:{line:20,column:25}},loc:{start:{line:20,column:32},end:{line:20,column:162}},line:20},"4":{name:"_arrayWithoutHoles",decl:{start:{line:22,column:9},end:{line:22,column:27}},loc:{start:{line:22,column:33},end:{line:22,column:166}},line:22}},branchMap:{"0":{loc:{start:{line:14,column:46},end:{line:14,column:92}},type:"cond-expr",locations:[{start:{line:14,column:70},end:{line:14,column:73}},{start:{line:14,column:76},end:{line:14,column:92}}],line:14},"1":{loc:{start:{line:14,column:46},end:{line:14,column:67}},type:"binary-expr",locations:[{start:{line:14,column:46},end:{line:14,column:49}},{start:{line:14,column:53},end:{line:14,column:67}}],line:14},"2":{loc:{start:{line:16,column:42},end:{line:16,column:114}},type:"binary-expr",locations:[{start:{line:16,column:42},end:{line:16,column:65}},{start:{line:16,column:69},end:{line:16,column:90}},{start:{line:16,column:94},end:{line:16,column:114}}],line:16},"3":{loc:{start:{line:20,column:34},end:{line:20,column:160}},type:"if",locations:[{start:{line:20,column:34},end:{line:20,column:160}},{start:{line:20,column:34},end:{line:20,column:160}}],line:20},"4":{loc:{start:{line:20,column:38},end:{line:20,column:134}},type:"binary-expr",locations:[{start:{line:20,column:38},end:{line:20,column:69}},{start:{line:20,column:73},end:{line:20,column:134}}],line:20},"5":{loc:{start:{line:22,column:35},end:{line:22,column:164}},type:"if",locations:[{start:{line:22,column:35},end:{line:22,column:164}},{start:{line:22,column:35},end:{line:22,column:164}}],line:22},"6":{loc:{start:{line:33,column:14},end:{line:33,column:227}},type:"binary-expr",locations:[{start:{line:33,column:14},end:{line:33,column:71}},{start:{line:33,column:76},end:{line:33,column:125}},{start:{line:33,column:129},end:{line:33,column:226}}],line:33},"7":{loc:{start:{line:39,column:0},end:{line:45,column:1}},type:"if",locations:[{start:{line:39,column:0},end:{line:45,column:1}},{start:{line:39,column:0},end:{line:45,column:1}}],line:39},"8":{loc:{start:{line:41,column:7},end:{line:45,column:1}},type:"if",locations:[{start:{line:41,column:7},end:{line:45,column:1}},{start:{line:41,column:7},end:{line:45,column:1}}],line:41},"9":{loc:{start:{line:41,column:11},end:{line:41,column:69}},type:"binary-expr",locations:[{start:{line:41,column:11},end:{line:41,column:29}},{start:{line:41,column:33},end:{line:41,column:69}}],line:41},"10":{loc:{start:{line:43,column:7},end:{line:45,column:1}},type:"if",locations:[{start:{line:43,column:7},end:{line:45,column:1}},{start:{line:43,column:7},end:{line:45,column:1}}],line:43},"11":{loc:{start:{line:50,column:0},end:{line:52,column:1}},type:"if",locations:[{start:{line:50,column:0},end:{line:52,column:1}},{start:{line:50,column:0},end:{line:52,column:1}}],line:50},"12":{loc:{start:{line:51,column:79},end:{line:51,column:114}},type:"cond-expr",locations:[{start:{line:51,column:100},end:{line:51,column:106}},{start:{line:51,column:109},end:{line:51,column:114}}],line:51},"13":{loc:{start:{line:51,column:170},end:{line:51,column:208}},type:"cond-expr",locations:[{start:{line:51,column:191},end:{line:51,column:200}},{start:{line:51,column:203},end:{line:51,column:208}}],line:51}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/definitions/Browser.js"],names:["browser","Object","assign","compatible","test","adapter","browserDetails","minVersion","version","SDK_VERSION","SCHEMA_VERSION","Webcom","message","browserShim","args","console","log"],mappings:";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;AAEA;;;;;;;;AAQA,IAAMA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC5BC,EAAAA,UAAU,EAAE,CAAC,KAAKC,IAAL,CAAUC,uBAAQC,cAAR,CAAuBN,OAAjC,CAAD,KACN,CAACK,uBAAQC,cAAR,CAAuBC,UAAxB,IACCF,uBAAQC,cAAR,CAAuBE,OAAvB,IAAkCH,uBAAQC,cAAR,CAAuBC,UAFpD;AADgB,CAAd,EAIbF,uBAAQC,cAJK,CAAhB;AAMA,IAAME,OAAO,oBAAaC,WAAb,uBAAqCC,cAArC,wBAAiEC,gBAAOF,WAAxE,CAAb,C,CAAoG;;AACpG,IAAIG,OAAO,GAAG,EAAd;;AACA,IAAIZ,OAAO,CAACQ,OAAR,KAAoB,IAAxB,EAA8B;AAC5BI,EAAAA,OAAO,GAAG,wFAAV;AACD,CAFD,MAEO,IAAIZ,OAAO,CAACO,UAAR,IAAsBP,OAAO,CAACO,UAAR,GAAqBP,OAAO,CAACQ,OAAvD,EAAgE;AACrEI,EAAAA,OAAO,iFAA0EZ,OAAO,CAACO,UAAlF,OAAP;AACD,CAFM,MAEA,IAAI,CAACF,uBAAQQ,WAAb,EAA0B;AAC/BD,EAAAA,OAAO,GAAG,oEAAV;AACD,C,CAED;;;AACA,IAAIE,IAAI,GAAG,WAAIN,OAAJ,cAAeI,OAAf,EAAX;;AACA,IAAI,qBAAqBR,IAArB,CAA0BJ,OAAO,CAACA,OAAlC,CAAJ,EAAgD;AAC9Cc,EAAAA,IAAI,GAAG,cACCN,OADD,iBACeI,OADf,yBAEUZ,OAAO,CAACG,UAAR,GAAqB,MAArB,GAA8B,KAFxC,wDAGKH,OAAO,CAACG,UAAR,GAAqB,SAArB,GAAiC,KAHtC,EAAP;AAKD;;AAED,YAAAY,OAAO,EAACC,GAAR,oCAAeF,IAAf,G,CAAsB;;;eAEPd,O",sourcesContent:["import adapter from 'webrtc-adapter';\nimport Webcom from 'webcom/webcom';\n\n/**\n * The current browser's infos\n * @typedef {Object} Browser\n * @property {string} name - current browser's name\n * @property {number} [version] - current browser's version\n * @property {number} [minVersion] - current browser's minimum supported version\n * @property {boolean} compatible - is current browser supported ?\n */\nconst browser = Object.assign({\n  compatible: !/\\s/.test(adapter.browserDetails.browser)\n    && (!adapter.browserDetails.minVersion\n      || adapter.browserDetails.version >= adapter.browserDetails.minVersion)\n}, adapter.browserDetails);\n\nconst version = `Reach v${SDK_VERSION} | Schema ${SCHEMA_VERSION} | Webcom v${Webcom.SDK_VERSION}`; // eslint-disable-line no-undef\nlet message = '';\nif (browser.version === null) {\n  message = 'Unsupported browser: browser must support WebRTC Peer-to-peer connections to use Reach';\n} else if (browser.minVersion && browser.minVersion > browser.version) {\n  message = `Unsupported browser: browser is outdated, update to latest version (${browser.minVersion}+)`;\n} else if (!adapter.browserShim) {\n  message = 'No shim for your browser. There might a problem with your package.';\n}\n\n// Log browser status & SDKs versions on load\nlet args = [`${version} ${message}`];\nif (/^(chrome|firefox)$/.test(browser.browser)) {\n  args = [\n    `%c ${version} %c ${message}`,\n    `background: ${browser.compatible ? '#f50' : 'red'}; color: #fff; font-weight: bold`,\n    `color: ${browser.compatible ? 'inherit' : 'red'}`\n  ];\n}\n\nconsole.log(...args); // eslint-disable-line no-console\n\nexport default browser;\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_2futmgf7sg.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2futmgf7sg.s[1]++;exports.default=void 0;var _webrtcAdapter=(cov_2futmgf7sg.s[2]++,_interopRequireDefault(__webpack_require__(/*! webrtc-adapter */ "./node_modules/webrtc-adapter/src/js/adapter_core.js")));var _webcom=(cov_2futmgf7sg.s[3]++,_interopRequireDefault(__webpack_require__(/*! webcom/webcom */ "webcom/webcom")));var _console;function _interopRequireDefault(obj){cov_2futmgf7sg.f[0]++;cov_2futmgf7sg.s[4]++;return(cov_2futmgf7sg.b[1][0]++,obj)&&(cov_2futmgf7sg.b[1][1]++,obj.__esModule)?(cov_2futmgf7sg.b[0][0]++,obj):(cov_2futmgf7sg.b[0][1]++,{default:obj});}function _toConsumableArray(arr){cov_2futmgf7sg.f[1]++;cov_2futmgf7sg.s[5]++;return(cov_2futmgf7sg.b[2][0]++,_arrayWithoutHoles(arr))||(cov_2futmgf7sg.b[2][1]++,_iterableToArray(arr))||(cov_2futmgf7sg.b[2][2]++,_nonIterableSpread());}function _nonIterableSpread(){cov_2futmgf7sg.f[2]++;cov_2futmgf7sg.s[6]++;throw new TypeError("Invalid attempt to spread non-iterable instance");}function _iterableToArray(iter){cov_2futmgf7sg.f[3]++;cov_2futmgf7sg.s[7]++;if((cov_2futmgf7sg.b[4][0]++,Symbol.iterator in Object(iter))||(cov_2futmgf7sg.b[4][1]++,Object.prototype.toString.call(iter)==="[object Arguments]")){cov_2futmgf7sg.b[3][0]++;cov_2futmgf7sg.s[8]++;return Array.from(iter);}else{cov_2futmgf7sg.b[3][1]++;}}function _arrayWithoutHoles(arr){cov_2futmgf7sg.f[4]++;cov_2futmgf7sg.s[9]++;if(Array.isArray(arr)){cov_2futmgf7sg.b[5][0]++;cov_2futmgf7sg.s[10]++;for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){cov_2futmgf7sg.s[11]++;arr2[i]=arr[i];}cov_2futmgf7sg.s[12]++;return arr2;}else{cov_2futmgf7sg.b[5][1]++;}}var browser=(cov_2futmgf7sg.s[13]++,Object.assign({compatible:(cov_2futmgf7sg.b[6][0]++,!/\s/.test(_webrtcAdapter.default.browserDetails.browser))&&((cov_2futmgf7sg.b[6][1]++,!_webrtcAdapter.default.browserDetails.minVersion)||(cov_2futmgf7sg.b[6][2]++,_webrtcAdapter.default.browserDetails.version>=_webrtcAdapter.default.browserDetails.minVersion))},_webrtcAdapter.default.browserDetails));var version=(cov_2futmgf7sg.s[14]++,"Reach v".concat('3.1.7'," | Schema ").concat('draft-00'," | Webcom v").concat(_webcom.default.SDK_VERSION));var message=(cov_2futmgf7sg.s[15]++,'');cov_2futmgf7sg.s[16]++;if(browser.version===null){cov_2futmgf7sg.b[7][0]++;cov_2futmgf7sg.s[17]++;message='Unsupported browser: browser must support WebRTC Peer-to-peer connections to use Reach';}else{cov_2futmgf7sg.b[7][1]++;cov_2futmgf7sg.s[18]++;if((cov_2futmgf7sg.b[9][0]++,browser.minVersion)&&(cov_2futmgf7sg.b[9][1]++,browser.minVersion>browser.version)){cov_2futmgf7sg.b[8][0]++;cov_2futmgf7sg.s[19]++;message="Unsupported browser: browser is outdated, update to latest version (".concat(browser.minVersion,"+)");}else{cov_2futmgf7sg.b[8][1]++;cov_2futmgf7sg.s[20]++;if(!_webrtcAdapter.default.browserShim){cov_2futmgf7sg.b[10][0]++;cov_2futmgf7sg.s[21]++;message='No shim for your browser. There might a problem with your package.';}else{cov_2futmgf7sg.b[10][1]++;}}}var args=(cov_2futmgf7sg.s[22]++,["".concat(version," ").concat(message)]);cov_2futmgf7sg.s[23]++;if(/^(chrome|firefox)$/.test(browser.browser)){cov_2futmgf7sg.b[11][0]++;cov_2futmgf7sg.s[24]++;args=["%c ".concat(version," %c ").concat(message),"background: ".concat(browser.compatible?(cov_2futmgf7sg.b[12][0]++,'#f50'):(cov_2futmgf7sg.b[12][1]++,'red'),"; color: #fff; font-weight: bold"),"color: ".concat(browser.compatible?(cov_2futmgf7sg.b[13][0]++,'inherit'):(cov_2futmgf7sg.b[13][1]++,'red'))];}else{cov_2futmgf7sg.b[11][1]++;}cov_2futmgf7sg.s[25]++;(_console=console).log.apply(_console,_toConsumableArray(args));var _default=(cov_2futmgf7sg.s[26]++,browser);cov_2futmgf7sg.s[27]++;exports.default=_default;

/***/ }),

/***/ "./src/definitions/Codec.js":
/*!**********************************!*\
  !*** ./src/definitions/Codec.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_1qvhpmszve=function(){var path="/home/florent/Projets/reach/src/definitions/Codec.js",hash="d707b54a2a9318b0afc850f9aafbd402f1b045f1",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/definitions/Codec.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:39}},"2":{start:{line:17,column:12},end:{line:23,column:1}},"3":{start:{line:39,column:0},end:{line:39,column:22}},"4":{start:{line:40,column:12},end:{line:48,column:1}},"5":{start:{line:49,column:0},end:{line:49,column:22}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{},b:{},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/definitions/Codec.js"],names:["video","VP8","VP9","VP10","H264","H265","audio","OPUS","G722","G711","ISAC","ISAC_16","ISAC_32","LSAC"],mappings:";;;;;;;AAAA;;;;;;;;;AASO,IAAMA,KAAK,GAAG;AACnBC,EAAAA,GAAG,EAAE,OADc;AAEnBC,EAAAA,GAAG,EAAE,OAFc;AAGnBC,EAAAA,IAAI,EAAE,QAHa;AAInBC,EAAAA,IAAI,EAAE,QAJa;AAKnBC,EAAAA,IAAI,EAAE;AALa,CAAd;AAQP;;;;;;;;;;;;;;;;AAcO,IAAMC,KAAK,GAAG;AACnBC,EAAAA,IAAI,EAAE,QADa;AAEnBC,EAAAA,IAAI,EAAE,QAFa;AAGnBC,EAAAA,IAAI,EAAE,QAHa;AAInBC,EAAAA,IAAI,EAAE,QAJa;AAKnBC,EAAAA,OAAO,EAAE,eALU;AAMnBC,EAAAA,OAAO,EAAE,eANU;AAOnBC,EAAAA,IAAI,EAAE;AAPa,CAAd",sourcesContent:["/**\n * Video codec presets to use for\n * @typedef {Object} Codec/video\n * @property {RegExp} VP8 VP8 is the only video codec officially supported by WebRTC\n * @property {RegExp} VP9 VP8's successor.\n * @property {RegExp} H264 MPEG-4 part 10. Only Firefox.\n * @property {RegExp} VP10 Suited for UHD video. No support yet\n * @property {RegExp} H265 H.264's successor. No support yet\n */\nexport const video = {\n  VP8: /^vp8/i,\n  VP9: /^vp9/i,\n  VP10: /^vp10/i,\n  H264: /^h264/i,\n  H265: /^h265/i\n};\n\n/**\n * Audio codec presets to use for\n * @typedef {Object} Codec/audio\n * @property {RegExp} OPUS Opus audio codec {@link http://opus-codec.org/}.\n * Only choice for high-quality audio.\n * @property {RegExp} G722 G.722 audio codec\n * @property {RegExp} G711 G.711 audio codec\n * @property {RegExp} ISAC iSAC audio codec. Good for voice data,\n * but not suitable for high-quality audio streams.\n * @property {RegExp} ISAC_16 iSAC audio codec (16kHz)\n * @property {RegExp} ISAC_32 iSAC audio codec (32kHz)\n * @property {RegExp} ILBC iLBC audio codec. For bad channels & low bandwidth.\n * @property {RegExp} ILBC iLBC audio codec. For bad channels & low bandwidth.\n */\nexport const audio = {\n  OPUS: /^opus/i,\n  G722: /^g722/i,\n  G711: /^g711/i,\n  ISAC: /^isac/i,\n  ISAC_16: /^isac\\/16000/i,\n  ISAC_32: /^isac\\/32000/i,\n  LSAC: /^lsac/i\n};\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1qvhpmszve.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1qvhpmszve.s[1]++;exports.audio=exports.video=void 0;var video=(cov_1qvhpmszve.s[2]++,{VP8:/^vp8/i,VP9:/^vp9/i,VP10:/^vp10/i,H264:/^h264/i,H265:/^h265/i});cov_1qvhpmszve.s[3]++;exports.video=video;var audio=(cov_1qvhpmszve.s[4]++,{OPUS:/^opus/i,G722:/^g722/i,G711:/^g711/i,ISAC:/^isac/i,ISAC_16:/^isac\/16000/i,ISAC_32:/^isac\/32000/i,LSAC:/^lsac/i});cov_1qvhpmszve.s[5]++;exports.audio=audio;

/***/ }),

/***/ "./src/definitions/Events.js":
/*!***********************************!*\
  !*** ./src/definitions/Events.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_1rlie7dkk2=function(){var path="/home/florent/Projets/reach/src/definitions/Events.js",hash="c2421538868ce38c5579e3cb856f9fe2f61b109e",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/definitions/Events.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:88}},"2":{start:{line:8,column:12},end:{line:8,column:59}},"3":{start:{line:10,column:12},end:{line:10,column:59}},"4":{start:{line:12,column:14},end:{line:12,column:63}},"5":{start:{line:14,column:19},end:{line:14,column:73}},"6":{start:{line:16,column:15},end:{line:16,column:65}},"7":{start:{line:18,column:14},end:{line:18,column:70}},"8":{start:{line:20,column:17},end:{line:20,column:50}},"9":{start:{line:22,column:39},end:{line:22,column:93}},"10":{start:{line:24,column:50},end:{line:24,column:151}},"11":{start:{line:24,column:92},end:{line:24,column:149}},"12":{start:{line:26,column:44},end:{line:26,column:315}},"13":{start:{line:26,column:102},end:{line:26,column:110}},"14":{start:{line:26,column:112},end:{line:26,column:167}},"15":{start:{line:26,column:168},end:{line:26,column:199}},"16":{start:{line:26,column:200},end:{line:26,column:254}},"17":{start:{line:26,column:227},end:{line:26,column:254}},"18":{start:{line:26,column:255},end:{line:26,column:313}},"19":{start:{line:28,column:62},end:{line:28,column:131}},"20":{start:{line:28,column:78},end:{line:28,column:131}},"21":{start:{line:28,column:132},end:{line:28,column:193}},"22":{start:{line:28,column:149},end:{line:28,column:193}},"23":{start:{line:28,column:194},end:{line:28,column:213}},"24":{start:{line:86,column:12},end:{line:109,column:1}},"25":{start:{line:88,column:4},end:{line:88,column:19}},"26":{start:{line:91,column:4},end:{line:91,column:19}},"27":{start:{line:94,column:4},end:{line:96,column:5}},"28":{start:{line:95,column:6},end:{line:95,column:71}},"29":{start:{line:98,column:4},end:{line:98,column:41}},"30":{start:{line:101,column:4},end:{line:101,column:56}},"31":{start:{line:104,column:4},end:{line:104,column:52}},"32":{start:{line:107,column:4},end:{line:107,column:51}},"33":{start:{line:116,column:14},end:{line:123,column:1}},"34":{start:{line:132,column:0},end:{line:175,column:3}},"35":{start:{line:134,column:16},end:{line:134,column:20}},"36":{start:{line:136,column:4},end:{line:136,column:35}},"37":{start:{line:138,column:4},end:{line:140,column:7}},"38":{start:{line:139,column:6},end:{line:139,column:23}},"39":{start:{line:143,column:2},end:{line:172,column:6}},"40":{start:{line:146,column:6},end:{line:148,column:7}},"41":{start:{line:147,column:8},end:{line:147,column:115}},"42":{start:{line:150,column:6},end:{line:150,column:18}},"43":{start:{line:155,column:6},end:{line:159,column:7}},"44":{start:{line:156,column:8},end:{line:158,column:10}},"45":{start:{line:157,column:10},end:{line:157,column:22}},"46":{start:{line:161,column:6},end:{line:161,column:18}},"47":{start:{line:166,column:6},end:{line:168,column:7}},"48":{start:{line:167,column:8},end:{line:167,column:64}},"49":{start:{line:170,column:6},end:{line:170,column:18}},"50":{start:{line:174,column:2},end:{line:174,column:17}},"51":{start:{line:181,column:12},end:{line:181,column:151}},"52":{start:{line:186,column:0},end:{line:186,column:22}},"53":{start:{line:187,column:11},end:{line:187,column:188}},"54":{start:{line:192,column:0},end:{line:192,column:20}},"55":{start:{line:193,column:13},end:{line:193,column:58}},"56":{start:{line:198,column:0},end:{line:198,column:24}},"57":{start:{line:199,column:12},end:{line:199,column:55}},"58":{start:{line:204,column:0},end:{line:204,column:22}},"59":{start:{line:205,column:13},end:{line:205,column:89}},"60":{start:{line:206,column:0},end:{line:206,column:24}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:22,column:9},end:{line:22,column:31}},loc:{start:{line:22,column:37},end:{line:22,column:95}},line:22},"1":{name:"_classCallCheck",decl:{start:{line:24,column:9},end:{line:24,column:24}},loc:{start:{line:24,column:48},end:{line:24,column:153}},line:24},"2":{name:"_defineProperties",decl:{start:{line:26,column:9},end:{line:26,column:26}},loc:{start:{line:26,column:42},end:{line:26,column:317}},line:26},"3":{name:"_createClass",decl:{start:{line:28,column:9},end:{line:28,column:21}},loc:{start:{line:28,column:60},end:{line:28,column:215}},line:28},"4":{name:"USER",decl:{start:{line:87,column:17},end:{line:87,column:21}},loc:{start:{line:87,column:24},end:{line:89,column:3}},line:87},"5":{name:"ROOM",decl:{start:{line:90,column:17},end:{line:90,column:21}},loc:{start:{line:90,column:24},end:{line:92,column:3}},line:90},"6":{name:"INVITE",decl:{start:{line:93,column:19},end:{line:93,column:25}},loc:{start:{line:93,column:32},end:{line:99,column:3}},line:93},"7":{name:"PARTICIPANT",decl:{start:{line:100,column:24},end:{line:100,column:35}},loc:{start:{line:100,column:42},end:{line:102,column:3}},line:100},"8":{name:"MESSAGE",decl:{start:{line:103,column:20},end:{line:103,column:27}},loc:{start:{line:103,column:34},end:{line:105,column:3}},line:103},"9":{name:"STREAM",decl:{start:{line:106,column:19},end:{line:106,column:25}},loc:{start:{line:106,column:32},end:{line:108,column:3}},line:106},"10":{name:"(anonymous_10)",decl:{start:{line:132,column:0},end:{line:132,column:1}},loc:{start:{line:132,column:12},end:{line:175,column:1}},line:132},"11":{name:"_Events",decl:{start:{line:133,column:11},end:{line:133,column:18}},loc:{start:{line:133,column:25},end:{line:141,column:3}},line:133},"12":{name:"(anonymous_12)",decl:{start:{line:138,column:17},end:{line:138,column:18}},loc:{start:{line:138,column:32},end:{line:140,column:5}},line:138},"13":{name:"supports",decl:{start:{line:145,column:20},end:{line:145,column:28}},loc:{start:{line:145,column:36},end:{line:151,column:5}},line:145},"14":{name:"toPath",decl:{start:{line:154,column:20},end:{line:154,column:26}},loc:{start:{line:154,column:34},end:{line:162,column:5}},line:154},"15":{name:"(anonymous_15)",decl:{start:{line:156,column:65},end:{line:156,column:66}},loc:{start:{line:156,column:77},end:{line:158,column:9}},line:156},"16":{name:"toClass",decl:{start:{line:165,column:20},end:{line:165,column:27}},loc:{start:{line:165,column:35},end:{line:171,column:5}},line:165}},branchMap:{"0":{loc:{start:{line:22,column:46},end:{line:22,column:92}},type:"cond-expr",locations:[{start:{line:22,column:70},end:{line:22,column:73}},{start:{line:22,column:76},end:{line:22,column:92}}],line:22},"1":{loc:{start:{line:22,column:46},end:{line:22,column:67}},type:"binary-expr",locations:[{start:{line:22,column:46},end:{line:22,column:49}},{start:{line:22,column:53},end:{line:22,column:67}}],line:22},"2":{loc:{start:{line:24,column:50},end:{line:24,column:151}},type:"if",locations:[{start:{line:24,column:50},end:{line:24,column:151}},{start:{line:24,column:50},end:{line:24,column:151}}],line:24},"3":{loc:{start:{line:26,column:136},end:{line:26,column:166}},type:"binary-expr",locations:[{start:{line:26,column:136},end:{line:26,column:157}},{start:{line:26,column:161},end:{line:26,column:166}}],line:26},"4":{loc:{start:{line:26,column:200},end:{line:26,column:254}},type:"if",locations:[{start:{line:26,column:200},end:{line:26,column:254}},{start:{line:26,column:200},end:{line:26,column:254}}],line:26},"5":{loc:{start:{line:28,column:62},end:{line:28,column:131}},type:"if",locations:[{start:{line:28,column:62},end:{line:28,column:131}},{start:{line:28,column:62},end:{line:28,column:131}}],line:28},"6":{loc:{start:{line:28,column:132},end:{line:28,column:193}},type:"if",locations:[{start:{line:28,column:132},end:{line:28,column:193}},{start:{line:28,column:132},end:{line:28,column:193}}],line:28},"7":{loc:{start:{line:94,column:4},end:{line:96,column:5}},type:"if",locations:[{start:{line:94,column:4},end:{line:96,column:5}},{start:{line:94,column:4},end:{line:96,column:5}}],line:94},"8":{loc:{start:{line:146,column:6},end:{line:148,column:7}},type:"if",locations:[{start:{line:146,column:6},end:{line:148,column:7}},{start:{line:146,column:6},end:{line:148,column:7}}],line:146},"9":{loc:{start:{line:146,column:10},end:{line:146,column:84}},type:"binary-expr",locations:[{start:{line:146,column:10},end:{line:146,column:16}},{start:{line:146,column:20},end:{line:146,column:45}},{start:{line:146,column:49},end:{line:146,column:84}}],line:146},"10":{loc:{start:{line:155,column:6},end:{line:159,column:7}},type:"if",locations:[{start:{line:155,column:6},end:{line:159,column:7}},{start:{line:155,column:6},end:{line:159,column:7}}],line:155},"11":{loc:{start:{line:156,column:15},end:{line:158,column:9}},type:"binary-expr",locations:[{start:{line:156,column:15},end:{line:156,column:61}},{start:{line:156,column:65},end:{line:158,column:9}}],line:156},"12":{loc:{start:{line:166,column:6},end:{line:168,column:7}},type:"if",locations:[{start:{line:166,column:6},end:{line:168,column:7}},{start:{line:166,column:6},end:{line:168,column:7}}],line:166}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0]},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/definitions/Events.js"],names:["paths","USER","ROOM","INVITE","user","Error","uid","PARTICIPANT","room","MESSAGE","STREAM","classes","User","Room","Invite","Participant","Message","Remote","_Events","keys","forEach","key","event","toUpperCase","JSON","stringify","Object","supports","replace","reach","stream","local","invite","ACCEPTED","REJECTED","CANCELED"],mappings:";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;AAeA;;;;;;;;AAQA;;;;;;;;AAQA;;;;;;;AAOA;;;;;AAKA,IAAMA,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE;AAAA,WAAM,OAAN;AAAA,GADM;AAEZC,EAAAA,IAAI,EAAE;AAAA,WAAM,OAAN;AAAA,GAFM;AAGZC,EAAAA,MAAM,EAAE,gBAACC,IAAD,EAAU;AAChB,QAAI,CAACA,IAAL,EAAW;AACT,YAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD;;AACD,+BAAoBD,IAAI,CAACE,GAAzB;AACD,GARW;AASZC,EAAAA,WAAW,EAAE,qBAAAC,IAAI;AAAA,6BAAeA,IAAI,CAACF,GAApB;AAAA,GATL;AAUZG,EAAAA,OAAO,EAAE,iBAAAD,IAAI;AAAA,6BAAeA,IAAI,CAACF,GAApB;AAAA,GAVD;AAWZI,EAAAA,MAAM,EAAE,gBAAAF,IAAI;AAAA,6BAAeA,IAAI,CAACF,GAApB;AAAA;AAXA,CAAd;AAcA;;;;;;AAKA,IAAMK,OAAO,GAAG;AACdV,EAAAA,IAAI,EAAEW,aADQ;AAEdV,EAAAA,IAAI,EAAEW,aAFQ;AAGdV,EAAAA,MAAM,EAAEW,eAHM;AAIdP,EAAAA,WAAW,EAAEQ,oBAJC;AAKdN,EAAAA,OAAO,EAAEO,gBALK;AAMdN,EAAAA,MAAM,EAAEO;AANM,CAAhB;AASA;;;;;;IAKMC,O;;;AACJ,mBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChBA,IAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,GAAD,EAAS;AACpB,MAAA,KAAI,CAACA,GAAD,CAAJ,GAAYA,GAAZ;AACD,KAFD;AAGD;;;;6BAEQC,K,EAAO;AACd,UAAI,CAACA,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA3B,IAAuC,KAAKA,KAAL,MAAgBA,KAAK,CAACC,WAAN,EAA3D,EAAgF;AAC9E,cACE,IAAIlB,KAAJ,wDAA0DmB,IAAI,CAACC,SAAL,CAAeC,MAAM,CAACP,IAAP,CAAY,IAAZ,CAAf,CAA1D,EADF;AAGD;;AACD,aAAO,IAAP;AACD;;;2BAEMG,K,EAAO;AACZ,UAAI,KAAKK,QAAL,CAAcL,KAAd,CAAJ,EAA0B;AACxB,eAAOtB,KAAK,CAACsB,KAAK,CAACC,WAAN,GAAoBK,OAApB,CAA4B,MAA5B,EAAoC,EAApC,CAAD,CAAL,IAAmD;AAAA,iBAAM,IAAN;AAAA,SAA1D;AACD;;AACD,aAAO,IAAP;AACD;;;4BAEON,K,EAAO;AACb,UAAI,KAAKK,QAAL,CAAcL,KAAd,CAAJ,EAA0B;AACxB,eAAOX,OAAO,CAACW,KAAK,CAACC,WAAN,GAAoBK,OAApB,CAA4B,MAA5B,EAAoC,EAApC,CAAD,CAAd;AACD;;AACD,aAAO,IAAP;AACD;;;;;AAGH;;;;;AAGO,IAAMC,KAAK,GAAG,IAAIX,OAAJ,CAAY,CAC/B,YAD+B,EACjB,cADiB,EACD,cADC,EAE/B,YAF+B,EAEjB,cAFiB,EAED,cAFC,EAG/B,cAH+B,EAGf,gBAHe,CAAZ,CAAd;AAMP;;;;;AAGO,IAAMV,IAAI,GAAG,IAAIU,OAAJ,CAAY,CAC9B,eAD8B,EACb,iBADa,EACM,iBADN,EAE9B,mBAF8B,EAET,qBAFS,EAEc,qBAFd,EAG9B,kBAH8B,EAGV,oBAHU,CAAZ,CAAb;AAMP;;;;;AAGO,IAAMY,MAAM,GAAG,IAAIZ,OAAJ,CAAY,CAAC,MAAD,EAAS,MAAT,EAAiB,cAAjB,CAAZ,CAAf;AAEP;;;;;AAGO,IAAMa,KAAK,GAAG,IAAIb,OAAJ,CAAY,CAAC,YAAD,EAAe,cAAf,CAAZ,CAAd;AAEP;;;;;AAGO,IAAMc,MAAM,GAAG,IAAId,OAAJ,CAAY,CAACe,mBAAD,EAAWC,mBAAX,EAAqBC,mBAArB,CAAZ,CAAf",sourcesContent:["import User from '../core/User';\nimport Room from '../core/Room';\nimport Invite from '../core/Invite';\nimport Participant from '../core/Participant';\nimport Message from '../core/Message';\nimport Remote from '../core/stream/Remote';\nimport { ACCEPTED, CANCELED, REJECTED } from '../core/util/constants';\n\n/**\n * The events supported by {@link Reach#on}\n * @typedef {Object} Events/Reach\n * @property {string} USER_ADDED Fired when a new user is registered\n * @property {string} USER_CHANGED Fired when an existing user logs in or out or changes is status\n * @property {string} USER_REMOVED Fired when a user is unregistered\n * @property {string} ROOM_ADDED Fired when a room is created\n * @property {string} ROOM_CHANGED Fired when a room status is changing\n * @property {string} ROOM_REMOVED Fired when a room is closed definitely\n * @property {string} INVITE_ADDED Fired when an invite is received\n * @property {string} INVITE_CHANGED Fired when an invite status is modified\n */\n\n/**\n * The events supported by {@link Room#on}\n * @typedef {Object} Events/Room\n * @property {string} PARTICIPANT_ADDED Fired when a new participant is added to the room.\n * Does not mean he's connected but that he's invited to\n * @property {string} PARTICIPANT_CHANGED Fired when a participant\n * changes is status (enter/leaves the room)\n * @property {string} PARTICIPANT_REMOVED Fired when a user leaves definitely or is banned\n * @property {string} MESSAGE_ADDED Fired when a new instant message is sent to the room\n * @property {string} MESSAGE_CHANGED Fired when an instant message is edited\n * @property {string} MESSAGE_REMOVED Fired when an instant message is removed\n * @property {string} STREAM_PUBLISHED Fired when a participant publishes a stream\n * @property {string} STREAM_UNPUBLISHED Fired when a participant stops the publishing of his stream\n */\n\n/**\n * The events supported by {@link Invite#on}\n * @typedef {Object} Events/Invite\n * @property {string} ACCEPTED Fired when the invite has been accepted\n * @property {string} REJECTED Fired when the invite has been accepted\n * @property {string} CANCELED Fired when the invite has been canceled\n */\n\n/**\n * The events supported by {@link Remote#on}.\n * @typedef {Object} Events/Stream\n * @property {string} MUTE Fired when the mute status of the stream changes\n * @property {string} SIZE Fired when the size of the stream changes\n * @property {string} WEBRTC_ERROR Fired when an error is raised on webrtc call.\n */\n\n/**\n * The events supported by {@link Local#on}.\n * @typedef {Object} Events/Local\n * @property {string} SUBSCRIBED Fired when the is subcribed by remote\n * @property {string} WEBRTC_ERROR Fired when an error is raised on webrtc call.\n */\n\n/**\n * Path configuration for each event\n * @ignore\n * @type {{}}\n */\nconst paths = {\n  USER: () => 'users',\n  ROOM: () => 'rooms',\n  INVITE: (user) => {\n    if (!user) {\n      throw new Error('You must be authenticated to list the invites');\n    }\n    return `_/invites/${user.uid}`;\n  },\n  PARTICIPANT: room => `_/rooms/${room.uid}/participants`,\n  MESSAGE: room => `_/rooms/${room.uid}/messages`,\n  STREAM: room => `_/rooms/${room.uid}/streams`\n};\n\n/**\n * Object type configuration for each event\n * @ignore\n * @type {{}}\n */\nconst classes = {\n  USER: User,\n  ROOM: Room,\n  INVITE: Invite,\n  PARTICIPANT: Participant,\n  MESSAGE: Message,\n  STREAM: Remote\n};\n\n/**\n * Private class to add support test methods\n * @class _Events\n * @ignore\n */\nclass _Events {\n  constructor(keys) {\n    keys.forEach((key) => {\n      this[key] = key;\n    });\n  }\n\n  supports(event) {\n    if (!event || typeof event !== 'string' || this[event] !== event.toUpperCase()) {\n      throw (\n        new Error(`Unsupported event. Use one of the following: ${JSON.stringify(Object.keys(this))}`)\n      );\n    }\n    return true;\n  }\n\n  toPath(event) {\n    if (this.supports(event)) {\n      return paths[event.toUpperCase().replace(/_.*$/, '')] || (() => null);\n    }\n    return null;\n  }\n\n  toClass(event) {\n    if (this.supports(event)) {\n      return classes[event.toUpperCase().replace(/_.*$/, '')];\n    }\n    return null;\n  }\n}\n\n/**\n * @ignore\n */\nexport const reach = new _Events([\n  'USER_ADDED', 'USER_CHANGED', 'USER_REMOVED',\n  'ROOM_ADDED', 'ROOM_CHANGED', 'ROOM_REMOVED',\n  'INVITE_ADDED', 'INVITE_CHANGED'\n]);\n\n/**\n * @ignore\n */\nexport const room = new _Events([\n  'MESSAGE_ADDED', 'MESSAGE_CHANGED', 'MESSAGE_REMOVED',\n  'PARTICIPANT_ADDED', 'PARTICIPANT_CHANGED', 'PARTICIPANT_REMOVED',\n  'STREAM_PUBLISHED', 'STREAM_UNPUBLISHED'\n]);\n\n/**\n * @ignore\n */\nexport const stream = new _Events(['MUTE', 'SIZE', 'WEBRTC_ERROR']);\n\n/**\n * @ignore\n */\nexport const local = new _Events(['SUBSCRIBED', 'WEBRTC_ERROR']);\n\n/**\n * @ignore\n */\nexport const invite = new _Events([ACCEPTED, REJECTED, CANCELED]);\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1rlie7dkk2.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1rlie7dkk2.s[1]++;exports.invite=exports.local=exports.stream=exports.room=exports.reach=void 0;var _User=(cov_1rlie7dkk2.s[2]++,_interopRequireDefault(__webpack_require__(/*! ../core/User */ "./src/core/User.js")));var _Room=(cov_1rlie7dkk2.s[3]++,_interopRequireDefault(__webpack_require__(/*! ../core/Room */ "./src/core/Room.js")));var _Invite=(cov_1rlie7dkk2.s[4]++,_interopRequireDefault(__webpack_require__(/*! ../core/Invite */ "./src/core/Invite.js")));var _Participant=(cov_1rlie7dkk2.s[5]++,_interopRequireDefault(__webpack_require__(/*! ../core/Participant */ "./src/core/Participant.js")));var _Message=(cov_1rlie7dkk2.s[6]++,_interopRequireDefault(__webpack_require__(/*! ../core/Message */ "./src/core/Message.js")));var _Remote=(cov_1rlie7dkk2.s[7]++,_interopRequireDefault(__webpack_require__(/*! ../core/stream/Remote */ "./src/core/stream/Remote.js")));var _constants=(cov_1rlie7dkk2.s[8]++,__webpack_require__(/*! ../core/util/constants */ "./src/core/util/constants.js"));function _interopRequireDefault(obj){cov_1rlie7dkk2.f[0]++;cov_1rlie7dkk2.s[9]++;return(cov_1rlie7dkk2.b[1][0]++,obj)&&(cov_1rlie7dkk2.b[1][1]++,obj.__esModule)?(cov_1rlie7dkk2.b[0][0]++,obj):(cov_1rlie7dkk2.b[0][1]++,{default:obj});}function _classCallCheck(instance,Constructor){cov_1rlie7dkk2.f[1]++;cov_1rlie7dkk2.s[10]++;if(!(instance instanceof Constructor)){cov_1rlie7dkk2.b[2][0]++;cov_1rlie7dkk2.s[11]++;throw new TypeError("Cannot call a class as a function");}else{cov_1rlie7dkk2.b[2][1]++;}}function _defineProperties(target,props){cov_1rlie7dkk2.f[2]++;cov_1rlie7dkk2.s[12]++;for(var i=0;i<props.length;i++){var descriptor=(cov_1rlie7dkk2.s[13]++,props[i]);cov_1rlie7dkk2.s[14]++;descriptor.enumerable=(cov_1rlie7dkk2.b[3][0]++,descriptor.enumerable)||(cov_1rlie7dkk2.b[3][1]++,false);cov_1rlie7dkk2.s[15]++;descriptor.configurable=true;cov_1rlie7dkk2.s[16]++;if("value"in descriptor){cov_1rlie7dkk2.b[4][0]++;cov_1rlie7dkk2.s[17]++;descriptor.writable=true;}else{cov_1rlie7dkk2.b[4][1]++;}cov_1rlie7dkk2.s[18]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_1rlie7dkk2.f[3]++;cov_1rlie7dkk2.s[19]++;if(protoProps){cov_1rlie7dkk2.b[5][0]++;cov_1rlie7dkk2.s[20]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_1rlie7dkk2.b[5][1]++;}cov_1rlie7dkk2.s[21]++;if(staticProps){cov_1rlie7dkk2.b[6][0]++;cov_1rlie7dkk2.s[22]++;_defineProperties(Constructor,staticProps);}else{cov_1rlie7dkk2.b[6][1]++;}cov_1rlie7dkk2.s[23]++;return Constructor;}var paths=(cov_1rlie7dkk2.s[24]++,{USER:function USER(){cov_1rlie7dkk2.f[4]++;cov_1rlie7dkk2.s[25]++;return'users';},ROOM:function ROOM(){cov_1rlie7dkk2.f[5]++;cov_1rlie7dkk2.s[26]++;return'rooms';},INVITE:function INVITE(user){cov_1rlie7dkk2.f[6]++;cov_1rlie7dkk2.s[27]++;if(!user){cov_1rlie7dkk2.b[7][0]++;cov_1rlie7dkk2.s[28]++;throw new Error('You must be authenticated to list the invites');}else{cov_1rlie7dkk2.b[7][1]++;}cov_1rlie7dkk2.s[29]++;return"_/invites/".concat(user.uid);},PARTICIPANT:function PARTICIPANT(room){cov_1rlie7dkk2.f[7]++;cov_1rlie7dkk2.s[30]++;return"_/rooms/".concat(room.uid,"/participants");},MESSAGE:function MESSAGE(room){cov_1rlie7dkk2.f[8]++;cov_1rlie7dkk2.s[31]++;return"_/rooms/".concat(room.uid,"/messages");},STREAM:function STREAM(room){cov_1rlie7dkk2.f[9]++;cov_1rlie7dkk2.s[32]++;return"_/rooms/".concat(room.uid,"/streams");}});var classes=(cov_1rlie7dkk2.s[33]++,{USER:_User.default,ROOM:_Room.default,INVITE:_Invite.default,PARTICIPANT:_Participant.default,MESSAGE:_Message.default,STREAM:_Remote.default});var _Events=(cov_1rlie7dkk2.s[34]++,function(){cov_1rlie7dkk2.f[10]++;function _Events(keys){cov_1rlie7dkk2.f[11]++;var _this=(cov_1rlie7dkk2.s[35]++,this);cov_1rlie7dkk2.s[36]++;_classCallCheck(this,_Events);cov_1rlie7dkk2.s[37]++;keys.forEach(function(key){cov_1rlie7dkk2.f[12]++;cov_1rlie7dkk2.s[38]++;_this[key]=key;});}cov_1rlie7dkk2.s[39]++;_createClass(_Events,[{key:"supports",value:function supports(event){cov_1rlie7dkk2.f[13]++;cov_1rlie7dkk2.s[40]++;if((cov_1rlie7dkk2.b[9][0]++,!event)||(cov_1rlie7dkk2.b[9][1]++,typeof event!=='string')||(cov_1rlie7dkk2.b[9][2]++,this[event]!==event.toUpperCase())){cov_1rlie7dkk2.b[8][0]++;cov_1rlie7dkk2.s[41]++;throw new Error("Unsupported event. Use one of the following: ".concat(JSON.stringify(Object.keys(this))));}else{cov_1rlie7dkk2.b[8][1]++;}cov_1rlie7dkk2.s[42]++;return true;}},{key:"toPath",value:function toPath(event){cov_1rlie7dkk2.f[14]++;cov_1rlie7dkk2.s[43]++;if(this.supports(event)){cov_1rlie7dkk2.b[10][0]++;cov_1rlie7dkk2.s[44]++;return(cov_1rlie7dkk2.b[11][0]++,paths[event.toUpperCase().replace(/_.*$/,'')])||(cov_1rlie7dkk2.b[11][1]++,function(){cov_1rlie7dkk2.f[15]++;cov_1rlie7dkk2.s[45]++;return null;});}else{cov_1rlie7dkk2.b[10][1]++;}cov_1rlie7dkk2.s[46]++;return null;}},{key:"toClass",value:function toClass(event){cov_1rlie7dkk2.f[16]++;cov_1rlie7dkk2.s[47]++;if(this.supports(event)){cov_1rlie7dkk2.b[12][0]++;cov_1rlie7dkk2.s[48]++;return classes[event.toUpperCase().replace(/_.*$/,'')];}else{cov_1rlie7dkk2.b[12][1]++;}cov_1rlie7dkk2.s[49]++;return null;}}]);cov_1rlie7dkk2.s[50]++;return _Events;}());var reach=(cov_1rlie7dkk2.s[51]++,new _Events(['USER_ADDED','USER_CHANGED','USER_REMOVED','ROOM_ADDED','ROOM_CHANGED','ROOM_REMOVED','INVITE_ADDED','INVITE_CHANGED']));cov_1rlie7dkk2.s[52]++;exports.reach=reach;var room=(cov_1rlie7dkk2.s[53]++,new _Events(['MESSAGE_ADDED','MESSAGE_CHANGED','MESSAGE_REMOVED','PARTICIPANT_ADDED','PARTICIPANT_CHANGED','PARTICIPANT_REMOVED','STREAM_PUBLISHED','STREAM_UNPUBLISHED']));cov_1rlie7dkk2.s[54]++;exports.room=room;var stream=(cov_1rlie7dkk2.s[55]++,new _Events(['MUTE','SIZE','WEBRTC_ERROR']));cov_1rlie7dkk2.s[56]++;exports.stream=stream;var local=(cov_1rlie7dkk2.s[57]++,new _Events(['SUBSCRIBED','WEBRTC_ERROR']));cov_1rlie7dkk2.s[58]++;exports.local=local;var invite=(cov_1rlie7dkk2.s[59]++,new _Events([_constants.ACCEPTED,_constants.REJECTED,_constants.CANCELED]));cov_1rlie7dkk2.s[60]++;exports.invite=invite;

/***/ }),

/***/ "./src/definitions/StreamTypes.js":
/*!****************************************!*\
  !*** ./src/definitions/StreamTypes.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var cov_jxez78eth=function(){var path="/home/florent/Projets/reach/src/definitions/StreamTypes.js",hash="9c44581aa8b3d9d4d457a95e176c7448dec440b4",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/florent/Projets/reach/src/definitions/StreamTypes.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:104}},"2":{start:{line:22,column:12},end:{line:22,column:19}},"3":{start:{line:29,column:0},end:{line:29,column:22}},"4":{start:{line:30,column:12},end:{line:30,column:19}},"5":{start:{line:37,column:0},end:{line:37,column:22}},"6":{start:{line:38,column:18},end:{line:38,column:31}},"7":{start:{line:45,column:0},end:{line:45,column:34}},"8":{start:{line:46,column:21},end:{line:46,column:37}},"9":{start:{line:47,column:0},end:{line:47,column:40}},"10":{start:{line:48,column:15},end:{line:53,column:1}},"11":{start:{line:54,column:0},end:{line:54,column:27}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{},b:{},inputSourceMap:{version:3,sources:["/home/florent/Projets/reach/src/definitions/StreamTypes.js"],names:["AUDIO","VIDEO","AUDIO_VIDEO","SCREEN_SHARING"],mappings:";;;;;;;AAAA;;;;;;;;;AASA;;;;;AAKO,IAAMA,KAAK,GAAG,OAAd;AACP;;;;;;;AAKO,IAAMC,KAAK,GAAG,OAAd;AACP;;;;;;;AAKO,IAAMC,WAAW,GAAG,aAApB;AACP;;;;;;;AAKO,IAAMC,cAAc,GAAG,gBAAvB;;eAEQ;AACbH,EAAAA,KAAK,EAALA,KADa;AACNC,EAAAA,KAAK,EAALA,KADM;AACCC,EAAAA,WAAW,EAAXA,WADD;AACcC,EAAAA,cAAc,EAAdA;AADd,C",sourcesContent:["/**\n * The available stream types\n * @typedef {Object} StreamTypes\n * @property {string} AUDIO='audio' - Audio communication service\n * @property {string} VIDEO='video' - Video communication service\n * @property {string} AUDIO_VIDEO='audio-video' - Audio and video communication service\n * @property {string} SCREEN_SHARING='screen-sharing' - Screen-sharing communication service\n */\n\n/**\n * Audio communication service\n * @ignore\n * @type {string}\n */\nexport const AUDIO = 'audio';\n/**\n * Video communication service\n * @ignore\n * @type {string}\n */\nexport const VIDEO = 'video';\n/**\n * Audio and video communication service\n * @ignore\n * @type {string}\n */\nexport const AUDIO_VIDEO = 'audio-video';\n/**\n * Screen-sharing service\n * @ignore\n * @type {string}\n */\nexport const SCREEN_SHARING = 'screen-sharing';\n\nexport default {\n  AUDIO, VIDEO, AUDIO_VIDEO, SCREEN_SHARING\n};\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_jxez78eth.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_jxez78eth.s[1]++;exports.default=exports.SCREEN_SHARING=exports.AUDIO_VIDEO=exports.VIDEO=exports.AUDIO=void 0;var AUDIO=(cov_jxez78eth.s[2]++,'audio');cov_jxez78eth.s[3]++;exports.AUDIO=AUDIO;var VIDEO=(cov_jxez78eth.s[4]++,'video');cov_jxez78eth.s[5]++;exports.VIDEO=VIDEO;var AUDIO_VIDEO=(cov_jxez78eth.s[6]++,'audio-video');cov_jxez78eth.s[7]++;exports.AUDIO_VIDEO=AUDIO_VIDEO;var SCREEN_SHARING=(cov_jxez78eth.s[8]++,'screen-sharing');cov_jxez78eth.s[9]++;exports.SCREEN_SHARING=SCREEN_SHARING;var _default=(cov_jxez78eth.s[10]++,{AUDIO:AUDIO,VIDEO:VIDEO,AUDIO_VIDEO:AUDIO_VIDEO,SCREEN_SHARING:SCREEN_SHARING});cov_jxez78eth.s[11]++;exports.default=_default;

/***/ }),

/***/ 0:
/*!********************!*\
  !*** ws (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ "webcom/webcom":
/*!********************************!*\
  !*** external "webcom/webcom" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_webcom_webcom__;

/***/ })

/******/ });
});
//# sourceMappingURL=reach-debug.js.map